[{"doc_comment":"Provides `io.Reader`, `io.Writer`, and `io.SeekableStream` for in-memory buffers as\nwell as files.\nFor memory sources, if the supplied byte buffer is const, then `io.Writer` is not available.\nThe error set of the stream functions is the error set of the corresponding file functions.","pl":"pub const StreamSource = union(enum) ","src":13,"more_decls":{"pl":"buffer: io.FixedBufferStream([]u8)","src":14,"more_decls":null}{"pl":"const_buffer: io.FixedBufferStream([]const u8)","src":15,"more_decls":null}{"pl":"file: std.fs.File","src":16,"more_decls":null}{"pl":"fn read(self: *StreamSource, dest: []u8) ReadError!usize","src":35,"more_decls":null}{"pl":"fn write(self: *StreamSource, bytes: []const u8) WriteError!usize","src":43,"more_decls":null}{"pl":"fn seekTo(self: *StreamSource, pos: u64) SeekError!void","src":51,"more_decls":null}{"pl":"fn seekBy(self: *StreamSource, amt: i64) SeekError!void","src":59,"more_decls":null}{"pl":"fn getEndPos(self: *StreamSource) GetSeekPosError!u64","src":67,"more_decls":null}{"pl":"fn getPos(self: *StreamSource) GetSeekPosError!u64","src":75,"more_decls":null}{"pl":"pub fn reader(self: *StreamSource) Reader {\n    return .{ .context = self };\n}","src":83,"more_decls":null}{"pl":"pub fn writer(self: *StreamSource) Writer {\n    return .{ .context = self };\n}","src":87,"more_decls":null}{"pl":"pub fn seekableStream(self: *StreamSource) SeekableStream {\n    return .{ .context = self };\n}","src":91,"more_decls":null}{"pl":"const ReadError = std.fs.File.ReadError","src":18,"more_decls":null}{"pl":"const WriteError = std.fs.File.WriteError","src":19,"more_decls":null}{"pl":"const SeekError = std.fs.File.SeekError","src":20,"more_decls":null}{"pl":"const GetSeekPosError = std.fs.File.GetPosError","src":21,"more_decls":null}{"pl":"const Reader = io.Reader(*StreamSource, ReadError, read)","src":23,"more_decls":null}{"pl":"const Writer = io.Writer(*StreamSource, WriteError, write)","src":24,"more_decls":null}{"pl":"const SeekableStream = io.SeekableStream(\n        *StreamSource,\n        SeekError,\n        GetSeekPosError,\n        seekTo,\n        seekBy,\n        getPos,\n        getEndPos,\n    )","src":25,"more_decls":null}}]