[{"pl":"pub const BufferedAtomicFile = struct ","src":10,"more_decls":{"pl":"atomic_file: fs.AtomicFile","src":11,"more_decls":null}{"pl":"file_writer: File.Writer","src":12,"more_decls":null}{"pl":"buffered_writer: BufferedWriter","src":13,"more_decls":null}{"pl":"allocator: *mem.Allocator","src":14,"more_decls":null}{"doc_comment":"TODO when https://github.com/ziglang/zig/issues/2761 is solved\nthis API will not need an allocator","pl":"fn create(\n    allocator: *mem.Allocator,\n    dir: fs.Dir,\n    dest_path: []const u8,\n    atomic_file_options: fs.Dir.AtomicFileOptions,\n) !*BufferedAtomicFile","src":22,"more_decls":null}{"doc_comment":"always call destroy, even after successful finish()","pl":"pub fn destroy(self: *BufferedAtomicFile) void {\n    self.atomic_file.deinit();\n    self.allocator.destroy(self);\n}","src":46,"more_decls":null}{"pl":"pub fn finish(self: *BufferedAtomicFile) !void {\n    try self.buffered_writer.flush();\n    try self.atomic_file.finish();\n}","src":51,"more_decls":null}{"pl":"pub fn writer(self: *BufferedAtomicFile) Writer {\n    return .{ .context = &self.buffered_writer };\n}","src":56,"more_decls":null}{"pl":"const buffer_size = 4096","src":16,"more_decls":null}{"pl":"const BufferedWriter = std.io.BufferedWriter(buffer_size, File.Writer)","src":17,"more_decls":null}{"pl":"const Writer = std.io.Writer(*BufferedWriter, BufferedWriter.Error, BufferedWriter.write)","src":18,"more_decls":null}}]