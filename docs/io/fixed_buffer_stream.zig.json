[{"doc_comment":"This turns a byte buffer into an `io.Writer`, `io.Reader`, or `io.SeekableStream`.\nIf the supplied byte buffer is const, then `io.Writer` is not available.","pl":"fn FixedBufferStream(comptime Buffer: type) type","sub_container_type":"struct ","src":13,"more_decls":{"doc_comment":"`Buffer` is either a `[]u8` or `[]const u8`.","pl":"buffer: Buffer","src":16,"more_decls":null}{"pl":"pos: usize","src":17,"more_decls":null}{"pl":"pub fn reader(self: *Self) Reader {\n    return .{ .context = self };\n}","src":39,"more_decls":null}{"pl":"pub fn writer(self: *Self) Writer {\n    return .{ .context = self };\n}","src":43,"more_decls":null}{"pl":"pub fn seekableStream(self: *Self) SeekableStream {\n    return .{ .context = self };\n}","src":47,"more_decls":null}{"pl":"fn read(self: *Self, dest: []u8) ReadError!usize","src":51,"more_decls":null}{"doc_comment":"If the returned number of bytes written is less than requested, the\nbuffer is full. Returns `error.NoSpaceLeft` when no bytes would be written.\nNote: `error.NoSpaceLeft` matches the corresponding error from\n`std.fs.File.WriteError`.","pl":"fn write(self: *Self, bytes: []const u8) WriteError!usize","src":65,"more_decls":null}{"pl":"pub fn seekTo(self: *Self, pos: u64) SeekError!void {\n    self.pos = if (std.math.cast(usize, pos)) |x| x else |_| self.buffer.len;\n}","src":82,"more_decls":null}{"pl":"fn seekBy(self: *Self, amt: i64) SeekError!void","src":86,"more_decls":null}{"pl":"pub fn getEndPos(self: *Self) GetSeekPosError!u64 {\n    return self.buffer.len;\n}","src":102,"more_decls":null}{"pl":"pub fn getPos(self: *Self) GetSeekPosError!u64 {\n    return self.pos;\n}","src":106,"more_decls":null}{"pl":"pub fn getWritten(self: Self) Buffer {\n    return self.buffer[0..self.pos];\n}","src":110,"more_decls":null}{"pl":"pub fn reset(self: *Self) void {\n    self.pos = 0;\n}","src":114,"more_decls":null}{"pl":"const ReadError = error{}","src":19,"more_decls":null}{"pl":"const WriteError = error{NoSpaceLeft}","src":20,"more_decls":null}{"pl":"const SeekError = error{}","src":21,"more_decls":null}{"pl":"const GetSeekPosError = error{}","src":22,"more_decls":null}{"pl":"const Reader = io.Reader(*Self, ReadError, read)","src":24,"more_decls":null}{"pl":"const Writer = io.Writer(*Self, WriteError, write)","src":25,"more_decls":null}{"pl":"const SeekableStream = io.SeekableStream(\n            *Self,\n            SeekError,\n            GetSeekPosError,\n            seekTo,\n            seekBy,\n            getPos,\n            getEndPos,\n        )","src":27,"more_decls":null}}{"pl":"pub fn fixedBufferStream(buffer: anytype) FixedBufferStream(NonSentinelSpan(@TypeOf(buffer))) {\n    return .{ .buffer = mem.span(buffer), .pos = 0 };\n}","src":120,"more_decls":null}]