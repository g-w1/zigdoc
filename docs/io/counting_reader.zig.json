[{"doc_comment":"A Reader that counts how many bytes has been read from it.","pl":"fn CountingReader(comptime ReaderType: anytype) type","sub_container_type":"struct ","src":10,"more_decls":{"pl":"child_reader: ReaderType","src":12,"more_decls":null}{"pl":"bytes_read: u64 = 0","src":13,"more_decls":null}{"pl":"pub fn read(self: *@This(), buf: []u8) Error!usize {\n    const amt = try self.child_reader.read(buf);\n    self.bytes_read += amt;\n    return amt;\n}","src":18,"more_decls":null}{"pl":"pub fn reader(self: *@This()) Reader {\n    return .{ .context = self };\n}","src":24,"more_decls":null}{"pl":"const Error = ReaderType.Error","src":15,"more_decls":null}{"pl":"const Reader = io.Reader(*@This(), Error, read)","src":16,"more_decls":null}}{"pl":"pub fn countingReader(reader: anytype) CountingReader(@TypeOf(reader)) {\n    return .{ .child_reader = reader };\n}","src":30,"more_decls":null}]