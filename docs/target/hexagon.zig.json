[{"pl":"pub const Feature = enum ","src":9,"more_decls":{"pl":"audio","src":10,"more_decls":null}{"pl":"compound","src":11,"more_decls":null}{"pl":"duplex","src":12,"more_decls":null}{"pl":"hvx","src":13,"more_decls":null}{"pl":"hvx_length128b","src":14,"more_decls":null}{"pl":"hvx_length64b","src":15,"more_decls":null}{"pl":"hvxv60","src":16,"more_decls":null}{"pl":"hvxv62","src":17,"more_decls":null}{"pl":"hvxv65","src":18,"more_decls":null}{"pl":"hvxv66","src":19,"more_decls":null}{"pl":"hvxv67","src":20,"more_decls":null}{"pl":"long_calls","src":21,"more_decls":null}{"pl":"mem_noshuf","src":22,"more_decls":null}{"pl":"memops","src":23,"more_decls":null}{"pl":"noreturn_stack_elim","src":24,"more_decls":null}{"pl":"nvj","src":25,"more_decls":null}{"pl":"nvs","src":26,"more_decls":null}{"pl":"packets","src":27,"more_decls":null}{"pl":"prev65","src":28,"more_decls":null}{"pl":"reserved_r19","src":29,"more_decls":null}{"pl":"small_data","src":30,"more_decls":null}{"pl":"tinycore","src":31,"more_decls":null}{"pl":"unsafe_fp","src":32,"more_decls":null}{"pl":"v5","src":33,"more_decls":null}{"pl":"v55","src":34,"more_decls":null}{"pl":"v60","src":35,"more_decls":null}{"pl":"v62","src":36,"more_decls":null}{"pl":"v65","src":37,"more_decls":null}{"pl":"v66","src":38,"more_decls":null}{"pl":"v67","src":39,"more_decls":null}{"pl":"zreg","src":40,"more_decls":null}}{"pl":"pub const cpu = struct ","src":240,"more_decls":{"pl":"const generic = CpuModel{\n        .name = \"generic\",\n        .llvm_name = \"generic\",\n        .features = featureSet(&[_]Feature{\n            .compound,\n            .duplex,\n            .memops,\n            .nvj,\n            .nvs,\n            .packets,\n            .prev65,\n            .small_data,\n            .v5,\n            .v55,\n            .v60,\n        }),\n    }","src":241,"more_decls":null}{"pl":"const hexagonv5 = CpuModel{\n        .name = \"hexagonv5\",\n        .llvm_name = \"hexagonv5\",\n        .features = featureSet(&[_]Feature{\n            .compound,\n            .duplex,\n            .memops,\n            .nvj,\n            .nvs,\n            .packets,\n            .prev65,\n            .small_data,\n            .v5,\n        }),\n    }","src":258,"more_decls":null}{"pl":"const hexagonv55 = CpuModel{\n        .name = \"hexagonv55\",\n        .llvm_name = \"hexagonv55\",\n        .features = featureSet(&[_]Feature{\n            .compound,\n            .duplex,\n            .memops,\n            .nvj,\n            .nvs,\n            .packets,\n            .prev65,\n            .small_data,\n            .v5,\n            .v55,\n        }),\n    }","src":273,"more_decls":null}{"pl":"const hexagonv60 = CpuModel{\n        .name = \"hexagonv60\",\n        .llvm_name = \"hexagonv60\",\n        .features = featureSet(&[_]Feature{\n            .compound,\n            .duplex,\n            .memops,\n            .nvj,\n            .nvs,\n            .packets,\n            .prev65,\n            .small_data,\n            .v5,\n            .v55,\n            .v60,\n        }),\n    }","src":289,"more_decls":null}{"pl":"const hexagonv62 = CpuModel{\n        .name = \"hexagonv62\",\n        .llvm_name = \"hexagonv62\",\n        .features = featureSet(&[_]Feature{\n            .compound,\n            .duplex,\n            .memops,\n            .nvj,\n            .nvs,\n            .packets,\n            .prev65,\n            .small_data,\n            .v5,\n            .v55,\n            .v60,\n            .v62,\n        }),\n    }","src":306,"more_decls":null}{"pl":"const hexagonv65 = CpuModel{\n        .name = \"hexagonv65\",\n        .llvm_name = \"hexagonv65\",\n        .features = featureSet(&[_]Feature{\n            .compound,\n            .duplex,\n            .mem_noshuf,\n            .memops,\n            .nvj,\n            .nvs,\n            .packets,\n            .small_data,\n            .v5,\n            .v55,\n            .v60,\n            .v62,\n            .v65,\n        }),\n    }","src":324,"more_decls":null}{"pl":"const hexagonv66 = CpuModel{\n        .name = \"hexagonv66\",\n        .llvm_name = \"hexagonv66\",\n        .features = featureSet(&[_]Feature{\n            .compound,\n            .duplex,\n            .mem_noshuf,\n            .memops,\n            .nvj,\n            .nvs,\n            .packets,\n            .small_data,\n            .v5,\n            .v55,\n            .v60,\n            .v62,\n            .v65,\n            .v66,\n        }),\n    }","src":343,"more_decls":null}{"pl":"const hexagonv67 = CpuModel{\n        .name = \"hexagonv67\",\n        .llvm_name = \"hexagonv67\",\n        .features = featureSet(&[_]Feature{\n            .compound,\n            .duplex,\n            .mem_noshuf,\n            .memops,\n            .nvj,\n            .nvs,\n            .packets,\n            .small_data,\n            .v5,\n            .v55,\n            .v60,\n            .v62,\n            .v65,\n            .v66,\n            .v67,\n        }),\n    }","src":363,"more_decls":null}{"pl":"const hexagonv67t = CpuModel{\n        .name = \"hexagonv67t\",\n        .llvm_name = \"hexagonv67t\",\n        .features = featureSet(&[_]Feature{\n            .audio,\n            .compound,\n            .mem_noshuf,\n            .memops,\n            .nvs,\n            .packets,\n            .small_data,\n            .tinycore,\n            .v5,\n            .v55,\n            .v60,\n            .v62,\n            .v65,\n            .v66,\n            .v67,\n        }),\n    }","src":384,"more_decls":null}}{"pl":"const all_features = blk: {\n    const len = @typeInfo(Feature).Enum.fields.len;\n    std.debug.assert(len <= CpuFeature.Set.needed_bit_count);\n    var result: [len]CpuFeature = undefined;\n    result[@enumToInt(Feature.audio)] = .{\n        .llvm_name = \"audio\",\n        .description = \"Hexagon Audio extension instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.compound)] = .{\n        .llvm_name = \"compound\",\n        .description = \"Use compound instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.duplex)] = .{\n        .llvm_name = \"duplex\",\n        .description = \"Enable generation of duplex instruction\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.hvx)] = .{\n        .llvm_name = \"hvx\",\n        .description = \"Hexagon HVX instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.hvx_length128b)] = .{\n        .llvm_name = \"hvx-length128b\",\n        .description = \"Hexagon HVX 128B instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .hvx,\n        }),\n    };\n    result[@enumToInt(Feature.hvx_length64b)] = .{\n        .llvm_name = \"hvx-length64b\",\n        .description = \"Hexagon HVX 64B instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .hvx,\n        }),\n    };\n    result[@enumToInt(Feature.hvxv60)] = .{\n        .llvm_name = \"hvxv60\",\n        .description = \"Hexagon HVX instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .hvx,\n        }),\n    };\n    result[@enumToInt(Feature.hvxv62)] = .{\n        .llvm_name = \"hvxv62\",\n        .description = \"Hexagon HVX instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .hvx,\n            .hvxv60,\n        }),\n    };\n    result[@enumToInt(Feature.hvxv65)] = .{\n        .llvm_name = \"hvxv65\",\n        .description = \"Hexagon HVX instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .hvx,\n            .hvxv60,\n            .hvxv62,\n        }),\n    };\n    result[@enumToInt(Feature.hvxv66)] = .{\n        .llvm_name = \"hvxv66\",\n        .description = \"Hexagon HVX instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .hvx,\n            .hvxv60,\n            .hvxv62,\n            .hvxv65,\n            .zreg,\n        }),\n    };\n    result[@enumToInt(Feature.hvxv67)] = .{\n        .llvm_name = \"hvxv67\",\n        .description = \"Hexagon HVX instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .hvxv60,\n            .hvxv62,\n            .hvxv65,\n            .hvxv66,\n        }),\n    };\n    result[@enumToInt(Feature.long_calls)] = .{\n        .llvm_name = \"long-calls\",\n        .description = \"Use constant-extended calls\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.mem_noshuf)] = .{\n        .llvm_name = \"mem_noshuf\",\n        .description = \"Supports mem_noshuf feature\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.memops)] = .{\n        .llvm_name = \"memops\",\n        .description = \"Use memop instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.noreturn_stack_elim)] = .{\n        .llvm_name = \"noreturn-stack-elim\",\n        .description = \"Eliminate stack allocation in a noreturn function when possible\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.nvj)] = .{\n        .llvm_name = \"nvj\",\n        .description = \"Support for new-value jumps\",\n        .dependencies = featureSet(&[_]Feature{\n            .packets,\n        }),\n    };\n    result[@enumToInt(Feature.nvs)] = .{\n        .llvm_name = \"nvs\",\n        .description = \"Support for new-value stores\",\n        .dependencies = featureSet(&[_]Feature{\n            .packets,\n        }),\n    };\n    result[@enumToInt(Feature.packets)] = .{\n        .llvm_name = \"packets\",\n        .description = \"Support for instruction packets\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.prev65)] = .{\n        .llvm_name = \"prev65\",\n        .description = \"Support features deprecated in v65\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserved_r19)] = .{\n        .llvm_name = \"reserved-r19\",\n        .description = \"Reserve register R19\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.small_data)] = .{\n        .llvm_name = \"small-data\",\n        .description = \"Allow GP-relative addressing of global variables\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.tinycore)] = .{\n        .llvm_name = \"tinycore\",\n        .description = \"Hexagon Tiny Core\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.unsafe_fp)] = .{\n        .llvm_name = \"unsafe-fp\",\n        .description = \"Use unsafe FP math\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.v5)] = .{\n        .llvm_name = \"v5\",\n        .description = \"Enable Hexagon V5 architecture\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.v55)] = .{\n        .llvm_name = \"v55\",\n        .description = \"Enable Hexagon V55 architecture\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.v60)] = .{\n        .llvm_name = \"v60\",\n        .description = \"Enable Hexagon V60 architecture\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.v62)] = .{\n        .llvm_name = \"v62\",\n        .description = \"Enable Hexagon V62 architecture\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.v65)] = .{\n        .llvm_name = \"v65\",\n        .description = \"Enable Hexagon V65 architecture\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.v66)] = .{\n        .llvm_name = \"v66\",\n        .description = \"Enable Hexagon V66 architecture\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.v67)] = .{\n        .llvm_name = \"v67\",\n        .description = \"Enable Hexagon V67 architecture\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.zreg)] = .{\n        .llvm_name = \"zreg\",\n        .description = \"Hexagon ZReg extension instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    const ti = @typeInfo(Feature);\n    for (result) |*elem, i| {\n        elem.index = i;\n        elem.name = ti.Enum.fields[i].name;\n    }\n    break :blk result;\n}","src":45,"more_decls":null}]