[{"pl":"pub const Feature = enum ","src":9,"more_decls":{"pl":"@\"32bit\"","src":10,"more_decls":null}{"pl":"@\"8msecext\"","src":11,"more_decls":null}{"pl":"a76","src":12,"more_decls":null}{"pl":"aclass","src":13,"more_decls":null}{"pl":"acquire_release","src":14,"more_decls":null}{"pl":"aes","src":15,"more_decls":null}{"pl":"avoid_movs_shop","src":16,"more_decls":null}{"pl":"avoid_partial_cpsr","src":17,"more_decls":null}{"pl":"bf16","src":18,"more_decls":null}{"pl":"cde","src":19,"more_decls":null}{"pl":"cdecp0","src":20,"more_decls":null}{"pl":"cdecp1","src":21,"more_decls":null}{"pl":"cdecp2","src":22,"more_decls":null}{"pl":"cdecp3","src":23,"more_decls":null}{"pl":"cdecp4","src":24,"more_decls":null}{"pl":"cdecp5","src":25,"more_decls":null}{"pl":"cdecp6","src":26,"more_decls":null}{"pl":"cdecp7","src":27,"more_decls":null}{"pl":"cheap_predicable_cpsr","src":28,"more_decls":null}{"pl":"crc","src":29,"more_decls":null}{"pl":"crypto","src":30,"more_decls":null}{"pl":"d32","src":31,"more_decls":null}{"pl":"db","src":32,"more_decls":null}{"pl":"dfb","src":33,"more_decls":null}{"pl":"disable_postra_scheduler","src":34,"more_decls":null}{"pl":"dont_widen_vmovs","src":35,"more_decls":null}{"pl":"dotprod","src":36,"more_decls":null}{"pl":"dsp","src":37,"more_decls":null}{"pl":"execute_only","src":38,"more_decls":null}{"pl":"expand_fp_mlx","src":39,"more_decls":null}{"pl":"exynos","src":40,"more_decls":null}{"pl":"fp16","src":41,"more_decls":null}{"pl":"fp16fml","src":42,"more_decls":null}{"pl":"fp64","src":43,"more_decls":null}{"pl":"fp_armv8","src":44,"more_decls":null}{"pl":"fp_armv8d16","src":45,"more_decls":null}{"pl":"fp_armv8d16sp","src":46,"more_decls":null}{"pl":"fp_armv8sp","src":47,"more_decls":null}{"pl":"fpao","src":48,"more_decls":null}{"pl":"fpregs","src":49,"more_decls":null}{"pl":"fpregs16","src":50,"more_decls":null}{"pl":"fpregs64","src":51,"more_decls":null}{"pl":"fullfp16","src":52,"more_decls":null}{"pl":"fuse_aes","src":53,"more_decls":null}{"pl":"fuse_literals","src":54,"more_decls":null}{"pl":"has_v4t","src":55,"more_decls":null}{"pl":"has_v5t","src":56,"more_decls":null}{"pl":"has_v5te","src":57,"more_decls":null}{"pl":"has_v6","src":58,"more_decls":null}{"pl":"has_v6k","src":59,"more_decls":null}{"pl":"has_v6m","src":60,"more_decls":null}{"pl":"has_v6t2","src":61,"more_decls":null}{"pl":"has_v7","src":62,"more_decls":null}{"pl":"has_v7clrex","src":63,"more_decls":null}{"pl":"has_v8_1a","src":64,"more_decls":null}{"pl":"has_v8_1m_main","src":65,"more_decls":null}{"pl":"has_v8_2a","src":66,"more_decls":null}{"pl":"has_v8_3a","src":67,"more_decls":null}{"pl":"has_v8_4a","src":68,"more_decls":null}{"pl":"has_v8_5a","src":69,"more_decls":null}{"pl":"has_v8_6a","src":70,"more_decls":null}{"pl":"has_v8","src":71,"more_decls":null}{"pl":"has_v8m","src":72,"more_decls":null}{"pl":"has_v8m_main","src":73,"more_decls":null}{"pl":"hwdiv","src":74,"more_decls":null}{"pl":"hwdiv_arm","src":75,"more_decls":null}{"pl":"i8mm","src":76,"more_decls":null}{"pl":"iwmmxt","src":77,"more_decls":null}{"pl":"iwmmxt2","src":78,"more_decls":null}{"pl":"lob","src":79,"more_decls":null}{"pl":"long_calls","src":80,"more_decls":null}{"pl":"loop_align","src":81,"more_decls":null}{"pl":"m3","src":82,"more_decls":null}{"pl":"mclass","src":83,"more_decls":null}{"pl":"mp","src":84,"more_decls":null}{"pl":"muxed_units","src":85,"more_decls":null}{"pl":"mve","src":86,"more_decls":null}{"pl":"mve_fp","src":87,"more_decls":null}{"pl":"mve1beat","src":88,"more_decls":null}{"pl":"mve2beat","src":89,"more_decls":null}{"pl":"mve4beat","src":90,"more_decls":null}{"pl":"nacl_trap","src":91,"more_decls":null}{"pl":"neon","src":92,"more_decls":null}{"pl":"neon_fpmovs","src":93,"more_decls":null}{"pl":"neonfp","src":94,"more_decls":null}{"pl":"no_branch_predictor","src":95,"more_decls":null}{"pl":"no_movt","src":96,"more_decls":null}{"pl":"no_neg_immediates","src":97,"more_decls":null}{"pl":"noarm","src":98,"more_decls":null}{"pl":"nonpipelined_vfp","src":99,"more_decls":null}{"pl":"perfmon","src":100,"more_decls":null}{"pl":"prefer_ishst","src":101,"more_decls":null}{"pl":"prefer_vmovsr","src":102,"more_decls":null}{"pl":"prof_unpr","src":103,"more_decls":null}{"pl":"r4","src":104,"more_decls":null}{"pl":"ras","src":105,"more_decls":null}{"pl":"rclass","src":106,"more_decls":null}{"pl":"read_tp_hard","src":107,"more_decls":null}{"pl":"reserve_r9","src":108,"more_decls":null}{"pl":"ret_addr_stack","src":109,"more_decls":null}{"pl":"sb","src":110,"more_decls":null}{"pl":"sha2","src":111,"more_decls":null}{"pl":"slow_fp_brcc","src":112,"more_decls":null}{"pl":"slow_load_D_subreg","src":113,"more_decls":null}{"pl":"slow_odd_reg","src":114,"more_decls":null}{"pl":"slow_vdup32","src":115,"more_decls":null}{"pl":"slow_vgetlni32","src":116,"more_decls":null}{"pl":"slowfpvfmx","src":117,"more_decls":null}{"pl":"slowfpvmlx","src":118,"more_decls":null}{"pl":"soft_float","src":119,"more_decls":null}{"pl":"splat_vfp_neon","src":120,"more_decls":null}{"pl":"strict_align","src":121,"more_decls":null}{"pl":"swift","src":122,"more_decls":null}{"pl":"thumb2","src":123,"more_decls":null}{"pl":"thumb_mode","src":124,"more_decls":null}{"pl":"trustzone","src":125,"more_decls":null}{"pl":"use_misched","src":126,"more_decls":null}{"pl":"v2","src":127,"more_decls":null}{"pl":"v2a","src":128,"more_decls":null}{"pl":"v3","src":129,"more_decls":null}{"pl":"v3m","src":130,"more_decls":null}{"pl":"v4","src":131,"more_decls":null}{"pl":"v4t","src":132,"more_decls":null}{"pl":"v5t","src":133,"more_decls":null}{"pl":"v5te","src":134,"more_decls":null}{"pl":"v5tej","src":135,"more_decls":null}{"pl":"v6","src":136,"more_decls":null}{"pl":"v6j","src":137,"more_decls":null}{"pl":"v6k","src":138,"more_decls":null}{"pl":"v6kz","src":139,"more_decls":null}{"pl":"v6m","src":140,"more_decls":null}{"pl":"v6sm","src":141,"more_decls":null}{"pl":"v6t2","src":142,"more_decls":null}{"pl":"v7a","src":143,"more_decls":null}{"pl":"v7em","src":144,"more_decls":null}{"pl":"v7k","src":145,"more_decls":null}{"pl":"v7m","src":146,"more_decls":null}{"pl":"v7r","src":147,"more_decls":null}{"pl":"v7s","src":148,"more_decls":null}{"pl":"v7ve","src":149,"more_decls":null}{"pl":"v8a","src":150,"more_decls":null}{"pl":"v8m","src":151,"more_decls":null}{"pl":"v8m_main","src":152,"more_decls":null}{"pl":"v8r","src":153,"more_decls":null}{"pl":"v8_1a","src":154,"more_decls":null}{"pl":"v8_1m_main","src":155,"more_decls":null}{"pl":"v8_2a","src":156,"more_decls":null}{"pl":"v8_3a","src":157,"more_decls":null}{"pl":"v8_4a","src":158,"more_decls":null}{"pl":"v8_5a","src":159,"more_decls":null}{"pl":"v8_6a","src":160,"more_decls":null}{"pl":"vfp2","src":161,"more_decls":null}{"pl":"vfp2sp","src":162,"more_decls":null}{"pl":"vfp3","src":163,"more_decls":null}{"pl":"vfp3d16","src":164,"more_decls":null}{"pl":"vfp3d16sp","src":165,"more_decls":null}{"pl":"vfp3sp","src":166,"more_decls":null}{"pl":"vfp4","src":167,"more_decls":null}{"pl":"vfp4d16","src":168,"more_decls":null}{"pl":"vfp4d16sp","src":169,"more_decls":null}{"pl":"vfp4sp","src":170,"more_decls":null}{"pl":"virtualization","src":171,"more_decls":null}{"pl":"vldn_align","src":172,"more_decls":null}{"pl":"vmlx_forwarding","src":173,"more_decls":null}{"pl":"vmlx_hazards","src":174,"more_decls":null}{"pl":"wide_stride_vfp","src":175,"more_decls":null}{"pl":"xscale","src":176,"more_decls":null}{"pl":"zcz","src":177,"more_decls":null}}{"pl":"pub const cpu = struct ","src":1435,"more_decls":{"pl":"const arm1020e = CpuModel{\n        .name = \"arm1020e\",\n        .llvm_name = \"arm1020e\",\n        .features = featureSet(&[_]Feature{\n            .v5te,\n        }),\n    }","src":1436,"more_decls":null}{"pl":"const arm1020t = CpuModel{\n        .name = \"arm1020t\",\n        .llvm_name = \"arm1020t\",\n        .features = featureSet(&[_]Feature{\n            .v5t,\n        }),\n    }","src":1443,"more_decls":null}{"pl":"const arm1022e = CpuModel{\n        .name = \"arm1022e\",\n        .llvm_name = \"arm1022e\",\n        .features = featureSet(&[_]Feature{\n            .v5te,\n        }),\n    }","src":1450,"more_decls":null}{"pl":"const arm10e = CpuModel{\n        .name = \"arm10e\",\n        .llvm_name = \"arm10e\",\n        .features = featureSet(&[_]Feature{\n            .v5te,\n        }),\n    }","src":1457,"more_decls":null}{"pl":"const arm10tdmi = CpuModel{\n        .name = \"arm10tdmi\",\n        .llvm_name = \"arm10tdmi\",\n        .features = featureSet(&[_]Feature{\n            .v5t,\n        }),\n    }","src":1464,"more_decls":null}{"pl":"const arm1136j_s = CpuModel{\n        .name = \"arm1136j_s\",\n        .llvm_name = \"arm1136j-s\",\n        .features = featureSet(&[_]Feature{\n            .v6,\n        }),\n    }","src":1471,"more_decls":null}{"pl":"const arm1136jf_s = CpuModel{\n        .name = \"arm1136jf_s\",\n        .llvm_name = \"arm1136jf-s\",\n        .features = featureSet(&[_]Feature{\n            .v6,\n            .slowfpvmlx,\n            .vfp2,\n        }),\n    }","src":1478,"more_decls":null}{"pl":"const arm1156t2_s = CpuModel{\n        .name = \"arm1156t2_s\",\n        .llvm_name = \"arm1156t2-s\",\n        .features = featureSet(&[_]Feature{\n            .v6t2,\n        }),\n    }","src":1487,"more_decls":null}{"pl":"const arm1156t2f_s = CpuModel{\n        .name = \"arm1156t2f_s\",\n        .llvm_name = \"arm1156t2f-s\",\n        .features = featureSet(&[_]Feature{\n            .v6t2,\n            .slowfpvmlx,\n            .vfp2,\n        }),\n    }","src":1494,"more_decls":null}{"pl":"const arm1176j_s = CpuModel{\n        .name = \"arm1176j_s\",\n        .llvm_name = \"arm1176j-s\",\n        .features = featureSet(&[_]Feature{\n            .v6kz,\n        }),\n    }","src":1503,"more_decls":null}{"pl":"const arm1176jz_s = CpuModel{\n        .name = \"arm1176jz_s\",\n        .llvm_name = \"arm1176jz-s\",\n        .features = featureSet(&[_]Feature{\n            .v6kz,\n        }),\n    }","src":1510,"more_decls":null}{"pl":"const arm1176jzf_s = CpuModel{\n        .name = \"arm1176jzf_s\",\n        .llvm_name = \"arm1176jzf-s\",\n        .features = featureSet(&[_]Feature{\n            .v6kz,\n            .slowfpvmlx,\n            .vfp2,\n        }),\n    }","src":1517,"more_decls":null}{"pl":"const arm710t = CpuModel{\n        .name = \"arm710t\",\n        .llvm_name = \"arm710t\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":1526,"more_decls":null}{"pl":"const arm720t = CpuModel{\n        .name = \"arm720t\",\n        .llvm_name = \"arm720t\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":1533,"more_decls":null}{"pl":"const arm7tdmi = CpuModel{\n        .name = \"arm7tdmi\",\n        .llvm_name = \"arm7tdmi\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":1540,"more_decls":null}{"pl":"const arm7tdmi_s = CpuModel{\n        .name = \"arm7tdmi_s\",\n        .llvm_name = \"arm7tdmi-s\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":1547,"more_decls":null}{"pl":"const arm8 = CpuModel{\n        .name = \"arm8\",\n        .llvm_name = \"arm8\",\n        .features = featureSet(&[_]Feature{\n            .v4,\n        }),\n    }","src":1554,"more_decls":null}{"pl":"const arm810 = CpuModel{\n        .name = \"arm810\",\n        .llvm_name = \"arm810\",\n        .features = featureSet(&[_]Feature{\n            .v4,\n        }),\n    }","src":1561,"more_decls":null}{"pl":"const arm9 = CpuModel{\n        .name = \"arm9\",\n        .llvm_name = \"arm9\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":1568,"more_decls":null}{"pl":"const arm920 = CpuModel{\n        .name = \"arm920\",\n        .llvm_name = \"arm920\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":1575,"more_decls":null}{"pl":"const arm920t = CpuModel{\n        .name = \"arm920t\",\n        .llvm_name = \"arm920t\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":1582,"more_decls":null}{"pl":"const arm922t = CpuModel{\n        .name = \"arm922t\",\n        .llvm_name = \"arm922t\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":1589,"more_decls":null}{"pl":"const arm926ej_s = CpuModel{\n        .name = \"arm926ej_s\",\n        .llvm_name = \"arm926ej-s\",\n        .features = featureSet(&[_]Feature{\n            .v5te,\n        }),\n    }","src":1596,"more_decls":null}{"pl":"const arm940t = CpuModel{\n        .name = \"arm940t\",\n        .llvm_name = \"arm940t\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":1603,"more_decls":null}{"pl":"const arm946e_s = CpuModel{\n        .name = \"arm946e_s\",\n        .llvm_name = \"arm946e-s\",\n        .features = featureSet(&[_]Feature{\n            .v5te,\n        }),\n    }","src":1610,"more_decls":null}{"pl":"const arm966e_s = CpuModel{\n        .name = \"arm966e_s\",\n        .llvm_name = \"arm966e-s\",\n        .features = featureSet(&[_]Feature{\n            .v5te,\n        }),\n    }","src":1617,"more_decls":null}{"pl":"const arm968e_s = CpuModel{\n        .name = \"arm968e_s\",\n        .llvm_name = \"arm968e-s\",\n        .features = featureSet(&[_]Feature{\n            .v5te,\n        }),\n    }","src":1624,"more_decls":null}{"pl":"const arm9e = CpuModel{\n        .name = \"arm9e\",\n        .llvm_name = \"arm9e\",\n        .features = featureSet(&[_]Feature{\n            .v5te,\n        }),\n    }","src":1631,"more_decls":null}{"pl":"const arm9tdmi = CpuModel{\n        .name = \"arm9tdmi\",\n        .llvm_name = \"arm9tdmi\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":1638,"more_decls":null}{"pl":"const baseline = CpuModel{\n        .name = \"baseline\",\n        .llvm_name = \"generic\",\n        .features = featureSet(&[_]Feature{\n            .v7a,\n        }),\n    }","src":1645,"more_decls":null}{"pl":"const cortex_a12 = CpuModel{\n        .name = \"cortex_a12\",\n        .llvm_name = \"cortex-a12\",\n        .features = featureSet(&[_]Feature{\n            .v7a,\n            .avoid_partial_cpsr,\n            .mp,\n            .ret_addr_stack,\n            .trustzone,\n            .vfp4,\n            .virtualization,\n            .vmlx_forwarding,\n        }),\n    }","src":1652,"more_decls":null}{"pl":"const cortex_a15 = CpuModel{\n        .name = \"cortex_a15\",\n        .llvm_name = \"cortex-a15\",\n        .features = featureSet(&[_]Feature{\n            .v7a,\n            .avoid_partial_cpsr,\n            .dont_widen_vmovs,\n            .mp,\n            .muxed_units,\n            .ret_addr_stack,\n            .splat_vfp_neon,\n            .trustzone,\n            .vfp4,\n            .virtualization,\n            .vldn_align,\n        }),\n    }","src":1666,"more_decls":null}{"pl":"const cortex_a17 = CpuModel{\n        .name = \"cortex_a17\",\n        .llvm_name = \"cortex-a17\",\n        .features = featureSet(&[_]Feature{\n            .v7a,\n            .avoid_partial_cpsr,\n            .mp,\n            .ret_addr_stack,\n            .trustzone,\n            .vfp4,\n            .virtualization,\n            .vmlx_forwarding,\n        }),\n    }","src":1683,"more_decls":null}{"pl":"const cortex_a32 = CpuModel{\n        .name = \"cortex_a32\",\n        .llvm_name = \"cortex-a32\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .hwdiv,\n            .hwdiv_arm,\n            .v8a,\n        }),\n    }","src":1697,"more_decls":null}{"pl":"const cortex_a35 = CpuModel{\n        .name = \"cortex_a35\",\n        .llvm_name = \"cortex-a35\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .hwdiv,\n            .hwdiv_arm,\n            .v8a,\n        }),\n    }","src":1708,"more_decls":null}{"pl":"const cortex_a5 = CpuModel{\n        .name = \"cortex_a5\",\n        .llvm_name = \"cortex-a5\",\n        .features = featureSet(&[_]Feature{\n            .v7a,\n            .mp,\n            .ret_addr_stack,\n            .slow_fp_brcc,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .trustzone,\n            .vfp4,\n            .vmlx_forwarding,\n        }),\n    }","src":1719,"more_decls":null}{"pl":"const cortex_a53 = CpuModel{\n        .name = \"cortex_a53\",\n        .llvm_name = \"cortex-a53\",\n        .features = featureSet(&[_]Feature{\n            .v8a,\n            .crc,\n            .crypto,\n            .fpao,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":1734,"more_decls":null}{"pl":"const cortex_a55 = CpuModel{\n        .name = \"cortex_a55\",\n        .llvm_name = \"cortex-a55\",\n        .features = featureSet(&[_]Feature{\n            .v8_2a,\n            .dotprod,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":1746,"more_decls":null}{"pl":"const cortex_a57 = CpuModel{\n        .name = \"cortex_a57\",\n        .llvm_name = \"cortex-a57\",\n        .features = featureSet(&[_]Feature{\n            .v8a,\n            .avoid_partial_cpsr,\n            .cheap_predicable_cpsr,\n            .crc,\n            .crypto,\n            .fpao,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":1756,"more_decls":null}{"pl":"const cortex_a7 = CpuModel{\n        .name = \"cortex_a7\",\n        .llvm_name = \"cortex-a7\",\n        .features = featureSet(&[_]Feature{\n            .v7a,\n            .mp,\n            .ret_addr_stack,\n            .slow_fp_brcc,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .trustzone,\n            .vfp4,\n            .virtualization,\n            .vmlx_forwarding,\n            .vmlx_hazards,\n        }),\n    }","src":1770,"more_decls":null}{"pl":"const cortex_a72 = CpuModel{\n        .name = \"cortex_a72\",\n        .llvm_name = \"cortex-a72\",\n        .features = featureSet(&[_]Feature{\n            .v8a,\n            .crc,\n            .crypto,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":1787,"more_decls":null}{"pl":"const cortex_a73 = CpuModel{\n        .name = \"cortex_a73\",\n        .llvm_name = \"cortex-a73\",\n        .features = featureSet(&[_]Feature{\n            .v8a,\n            .crc,\n            .crypto,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":1798,"more_decls":null}{"pl":"const cortex_a75 = CpuModel{\n        .name = \"cortex_a75\",\n        .llvm_name = \"cortex-a75\",\n        .features = featureSet(&[_]Feature{\n            .v8_2a,\n            .dotprod,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":1809,"more_decls":null}{"pl":"const cortex_a76 = CpuModel{\n        .name = \"cortex_a76\",\n        .llvm_name = \"cortex-a76\",\n        .features = featureSet(&[_]Feature{\n            .a76,\n            .v8_2a,\n            .crc,\n            .crypto,\n            .dotprod,\n            .fullfp16,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":1819,"more_decls":null}{"pl":"const cortex_a76ae = CpuModel{\n        .name = \"cortex_a76ae\",\n        .llvm_name = \"cortex-a76ae\",\n        .features = featureSet(&[_]Feature{\n            .a76,\n            .v8_2a,\n            .crc,\n            .crypto,\n            .dotprod,\n            .fullfp16,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":1833,"more_decls":null}{"pl":"const cortex_a77 = CpuModel{\n        .name = \"cortex_a77\",\n        .llvm_name = \"cortex-a77\",\n        .features = featureSet(&[_]Feature{\n            .v8_2a,\n            .crc,\n            .crypto,\n            .dotprod,\n            .fullfp16,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":1847,"more_decls":null}{"pl":"const cortex_a78 = CpuModel{\n        .name = \"cortex_a78\",\n        .llvm_name = \"cortex-a78\",\n        .features = featureSet(&[_]Feature{\n            .v8_2a,\n            .crc,\n            .crypto,\n            .dotprod,\n            .fullfp16,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":1860,"more_decls":null}{"pl":"const cortex_a8 = CpuModel{\n        .name = \"cortex_a8\",\n        .llvm_name = \"cortex-a8\",\n        .features = featureSet(&[_]Feature{\n            .v7a,\n            .nonpipelined_vfp,\n            .ret_addr_stack,\n            .slow_fp_brcc,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .trustzone,\n            .vmlx_forwarding,\n            .vmlx_hazards,\n        }),\n    }","src":1873,"more_decls":null}{"pl":"const cortex_a9 = CpuModel{\n        .name = \"cortex_a9\",\n        .llvm_name = \"cortex-a9\",\n        .features = featureSet(&[_]Feature{\n            .v7a,\n            .avoid_partial_cpsr,\n            .expand_fp_mlx,\n            .fp16,\n            .mp,\n            .muxed_units,\n            .neon_fpmovs,\n            .prefer_vmovsr,\n            .ret_addr_stack,\n            .trustzone,\n            .vldn_align,\n            .vmlx_forwarding,\n            .vmlx_hazards,\n        }),\n    }","src":1888,"more_decls":null}{"pl":"const cortex_m0 = CpuModel{\n        .name = \"cortex_m0\",\n        .llvm_name = \"cortex-m0\",\n        .features = featureSet(&[_]Feature{\n            .v6m,\n        }),\n    }","src":1907,"more_decls":null}{"pl":"const cortex_m0plus = CpuModel{\n        .name = \"cortex_m0plus\",\n        .llvm_name = \"cortex-m0plus\",\n        .features = featureSet(&[_]Feature{\n            .v6m,\n        }),\n    }","src":1914,"more_decls":null}{"pl":"const cortex_m1 = CpuModel{\n        .name = \"cortex_m1\",\n        .llvm_name = \"cortex-m1\",\n        .features = featureSet(&[_]Feature{\n            .v6m,\n        }),\n    }","src":1921,"more_decls":null}{"pl":"const cortex_m23 = CpuModel{\n        .name = \"cortex_m23\",\n        .llvm_name = \"cortex-m23\",\n        .features = featureSet(&[_]Feature{\n            .v8m,\n            .no_movt,\n        }),\n    }","src":1928,"more_decls":null}{"pl":"const cortex_m3 = CpuModel{\n        .name = \"cortex_m3\",\n        .llvm_name = \"cortex-m3\",\n        .features = featureSet(&[_]Feature{\n            .v7m,\n            .loop_align,\n            .m3,\n            .no_branch_predictor,\n            .use_misched,\n        }),\n    }","src":1936,"more_decls":null}{"pl":"const cortex_m33 = CpuModel{\n        .name = \"cortex_m33\",\n        .llvm_name = \"cortex-m33\",\n        .features = featureSet(&[_]Feature{\n            .v8m_main,\n            .dsp,\n            .fp_armv8d16sp,\n            .loop_align,\n            .no_branch_predictor,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .use_misched,\n        }),\n    }","src":1947,"more_decls":null}{"pl":"const cortex_m35p = CpuModel{\n        .name = \"cortex_m35p\",\n        .llvm_name = \"cortex-m35p\",\n        .features = featureSet(&[_]Feature{\n            .v8m_main,\n            .dsp,\n            .fp_armv8d16sp,\n            .loop_align,\n            .no_branch_predictor,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .use_misched,\n        }),\n    }","src":1961,"more_decls":null}{"pl":"const cortex_m4 = CpuModel{\n        .name = \"cortex_m4\",\n        .llvm_name = \"cortex-m4\",\n        .features = featureSet(&[_]Feature{\n            .v7em,\n            .loop_align,\n            .no_branch_predictor,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .use_misched,\n            .vfp4d16sp,\n        }),\n    }","src":1975,"more_decls":null}{"pl":"const cortex_m55 = CpuModel{\n        .name = \"cortex_m55\",\n        .llvm_name = \"cortex-m55\",\n        .features = featureSet(&[_]Feature{\n            .v8_1m_main,\n            .dsp,\n            .fp_armv8d16,\n            .loop_align,\n            .mve_fp,\n            .no_branch_predictor,\n            .slowfpvmlx,\n            .use_misched,\n        }),\n    }","src":1988,"more_decls":null}{"pl":"const cortex_m7 = CpuModel{\n        .name = \"cortex_m7\",\n        .llvm_name = \"cortex-m7\",\n        .features = featureSet(&[_]Feature{\n            .v7em,\n            .fp_armv8d16,\n        }),\n    }","src":2002,"more_decls":null}{"pl":"const cortex_r4 = CpuModel{\n        .name = \"cortex_r4\",\n        .llvm_name = \"cortex-r4\",\n        .features = featureSet(&[_]Feature{\n            .v7r,\n            .avoid_partial_cpsr,\n            .r4,\n            .ret_addr_stack,\n        }),\n    }","src":2010,"more_decls":null}{"pl":"const cortex_r4f = CpuModel{\n        .name = \"cortex_r4f\",\n        .llvm_name = \"cortex-r4f\",\n        .features = featureSet(&[_]Feature{\n            .v7r,\n            .avoid_partial_cpsr,\n            .r4,\n            .ret_addr_stack,\n            .slow_fp_brcc,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .vfp3d16,\n        }),\n    }","src":2020,"more_decls":null}{"pl":"const cortex_r5 = CpuModel{\n        .name = \"cortex_r5\",\n        .llvm_name = \"cortex-r5\",\n        .features = featureSet(&[_]Feature{\n            .v7r,\n            .avoid_partial_cpsr,\n            .hwdiv_arm,\n            .ret_addr_stack,\n            .slow_fp_brcc,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .vfp3d16,\n        }),\n    }","src":2034,"more_decls":null}{"pl":"const cortex_r52 = CpuModel{\n        .name = \"cortex_r52\",\n        .llvm_name = \"cortex-r52\",\n        .features = featureSet(&[_]Feature{\n            .v8r,\n            .fpao,\n            .use_misched,\n        }),\n    }","src":2048,"more_decls":null}{"pl":"const cortex_r7 = CpuModel{\n        .name = \"cortex_r7\",\n        .llvm_name = \"cortex-r7\",\n        .features = featureSet(&[_]Feature{\n            .v7r,\n            .avoid_partial_cpsr,\n            .fp16,\n            .hwdiv_arm,\n            .mp,\n            .ret_addr_stack,\n            .slow_fp_brcc,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .vfp3d16,\n        }),\n    }","src":2057,"more_decls":null}{"pl":"const cortex_r8 = CpuModel{\n        .name = \"cortex_r8\",\n        .llvm_name = \"cortex-r8\",\n        .features = featureSet(&[_]Feature{\n            .v7r,\n            .avoid_partial_cpsr,\n            .fp16,\n            .hwdiv_arm,\n            .mp,\n            .ret_addr_stack,\n            .slow_fp_brcc,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .vfp3d16,\n        }),\n    }","src":2073,"more_decls":null}{"pl":"const cortex_x1 = CpuModel{\n        .name = \"cortex_x1\",\n        .llvm_name = \"cortex-x1\",\n        .features = featureSet(&[_]Feature{\n            .v8_2a,\n            .crc,\n            .crypto,\n            .dotprod,\n            .fullfp16,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":2089,"more_decls":null}{"pl":"const cyclone = CpuModel{\n        .name = \"cyclone\",\n        .llvm_name = \"cyclone\",\n        .features = featureSet(&[_]Feature{\n            .v8a,\n            .avoid_movs_shop,\n            .avoid_partial_cpsr,\n            .crypto,\n            .disable_postra_scheduler,\n            .hwdiv,\n            .hwdiv_arm,\n            .mp,\n            .neonfp,\n            .ret_addr_stack,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .swift,\n            .use_misched,\n            .vfp4,\n            .zcz,\n        }),\n    }","src":2102,"more_decls":null}{"pl":"const ep9312 = CpuModel{\n        .name = \"ep9312\",\n        .llvm_name = \"ep9312\",\n        .features = featureSet(&[_]Feature{\n            .v4t,\n        }),\n    }","src":2124,"more_decls":null}{"pl":"const exynos_m1 = CpuModel{\n        .name = \"exynos_m1\",\n        .llvm_name = null,\n        .features = featureSet(&[_]Feature{\n            .v8a,\n            .exynos,\n        }),\n    }","src":2131,"more_decls":null}{"pl":"const exynos_m2 = CpuModel{\n        .name = \"exynos_m2\",\n        .llvm_name = null,\n        .features = featureSet(&[_]Feature{\n            .v8a,\n            .exynos,\n        }),\n    }","src":2139,"more_decls":null}{"pl":"const exynos_m3 = CpuModel{\n        .name = \"exynos_m3\",\n        .llvm_name = \"exynos-m3\",\n        .features = featureSet(&[_]Feature{\n            .v8_2a,\n            .exynos,\n        }),\n    }","src":2147,"more_decls":null}{"pl":"const exynos_m4 = CpuModel{\n        .name = \"exynos_m4\",\n        .llvm_name = \"exynos-m4\",\n        .features = featureSet(&[_]Feature{\n            .v8_2a,\n            .dotprod,\n            .exynos,\n            .fullfp16,\n        }),\n    }","src":2155,"more_decls":null}{"pl":"const exynos_m5 = CpuModel{\n        .name = \"exynos_m5\",\n        .llvm_name = \"exynos-m5\",\n        .features = featureSet(&[_]Feature{\n            .dotprod,\n            .exynos,\n            .fullfp16,\n            .v8_2a,\n        }),\n    }","src":2165,"more_decls":null}{"pl":"const generic = CpuModel{\n        .name = \"generic\",\n        .llvm_name = \"generic\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":2175,"more_decls":null}{"pl":"const iwmmxt = CpuModel{\n        .name = \"iwmmxt\",\n        .llvm_name = \"iwmmxt\",\n        .features = featureSet(&[_]Feature{\n            .v5te,\n        }),\n    }","src":2180,"more_decls":null}{"pl":"const krait = CpuModel{\n        .name = \"krait\",\n        .llvm_name = \"krait\",\n        .features = featureSet(&[_]Feature{\n            .avoid_partial_cpsr,\n            .fp16,\n            .hwdiv,\n            .hwdiv_arm,\n            .muxed_units,\n            .ret_addr_stack,\n            .v7a,\n            .vfp4,\n            .vldn_align,\n            .vmlx_forwarding,\n        }),\n    }","src":2187,"more_decls":null}{"pl":"const kryo = CpuModel{\n        .name = \"kryo\",\n        .llvm_name = \"kryo\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .hwdiv,\n            .hwdiv_arm,\n            .v8a,\n        }),\n    }","src":2203,"more_decls":null}{"pl":"const mpcore = CpuModel{\n        .name = \"mpcore\",\n        .llvm_name = \"mpcore\",\n        .features = featureSet(&[_]Feature{\n            .v6k,\n            .slowfpvmlx,\n            .vfp2,\n        }),\n    }","src":2214,"more_decls":null}{"pl":"const mpcorenovfp = CpuModel{\n        .name = \"mpcorenovfp\",\n        .llvm_name = \"mpcorenovfp\",\n        .features = featureSet(&[_]Feature{\n            .v6k,\n        }),\n    }","src":2223,"more_decls":null}{"pl":"const neoverse_n1 = CpuModel{\n        .name = \"neoverse_n1\",\n        .llvm_name = \"neoverse-n1\",\n        .features = featureSet(&[_]Feature{\n            .v8_2a,\n            .crc,\n            .crypto,\n            .dotprod,\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    }","src":2230,"more_decls":null}{"pl":"const sc000 = CpuModel{\n        .name = \"sc000\",\n        .llvm_name = \"sc000\",\n        .features = featureSet(&[_]Feature{\n            .v6m,\n        }),\n    }","src":2242,"more_decls":null}{"pl":"const sc300 = CpuModel{\n        .name = \"sc300\",\n        .llvm_name = \"sc300\",\n        .features = featureSet(&[_]Feature{\n            .v7m,\n            .m3,\n            .no_branch_predictor,\n            .use_misched,\n        }),\n    }","src":2249,"more_decls":null}{"pl":"const strongarm = CpuModel{\n        .name = \"strongarm\",\n        .llvm_name = \"strongarm\",\n        .features = featureSet(&[_]Feature{\n            .v4,\n        }),\n    }","src":2259,"more_decls":null}{"pl":"const strongarm110 = CpuModel{\n        .name = \"strongarm110\",\n        .llvm_name = \"strongarm110\",\n        .features = featureSet(&[_]Feature{\n            .v4,\n        }),\n    }","src":2266,"more_decls":null}{"pl":"const strongarm1100 = CpuModel{\n        .name = \"strongarm1100\",\n        .llvm_name = \"strongarm1100\",\n        .features = featureSet(&[_]Feature{\n            .v4,\n        }),\n    }","src":2273,"more_decls":null}{"pl":"const strongarm1110 = CpuModel{\n        .name = \"strongarm1110\",\n        .llvm_name = \"strongarm1110\",\n        .features = featureSet(&[_]Feature{\n            .v4,\n        }),\n    }","src":2280,"more_decls":null}{"pl":"const swift = CpuModel{\n        .name = \"swift\",\n        .llvm_name = \"swift\",\n        .features = featureSet(&[_]Feature{\n            .v7a,\n            .avoid_movs_shop,\n            .avoid_partial_cpsr,\n            .disable_postra_scheduler,\n            .hwdiv,\n            .hwdiv_arm,\n            .mp,\n            .neonfp,\n            .prefer_ishst,\n            .prof_unpr,\n            .ret_addr_stack,\n            .slow_load_D_subreg,\n            .slow_odd_reg,\n            .slow_vdup32,\n            .slow_vgetlni32,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .swift,\n            .use_misched,\n            .vfp4,\n            .vmlx_hazards,\n            .wide_stride_vfp,\n        }),\n    }","src":2287,"more_decls":null}{"pl":"const xscale = CpuModel{\n        .name = \"xscale\",\n        .llvm_name = \"xscale\",\n        .features = featureSet(&[_]Feature{\n            .v5te,\n        }),\n    }","src":2315,"more_decls":null}}{"pl":"const all_features = blk: {\n    @setEvalBranchQuota(10000);\n    const len = @typeInfo(Feature).Enum.fields.len;\n    std.debug.assert(len <= CpuFeature.Set.needed_bit_count);\n    var result: [len]CpuFeature = undefined;\n    result[@enumToInt(Feature.@\"32bit\")] = .{\n        .llvm_name = \"32bit\",\n        .description = \"Prefer 32-bit Thumb instrs\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.@\"8msecext\")] = .{\n        .llvm_name = \"8msecext\",\n        .description = \"Enable support for ARMv8-M Security Extensions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.a76)] = .{\n        .llvm_name = \"a76\",\n        .description = \"Cortex-A76 ARM processors\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.aclass)] = .{\n        .llvm_name = \"aclass\",\n        .description = \"Is application profile ('A' series)\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.acquire_release)] = .{\n        .llvm_name = \"acquire-release\",\n        .description = \"Has v8 acquire/release (lda/ldaex  etc) instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.aes)] = .{\n        .llvm_name = \"aes\",\n        .description = \"Enable AES support\",\n        .dependencies = featureSet(&[_]Feature{\n            .neon,\n        }),\n    };\n    result[@enumToInt(Feature.avoid_movs_shop)] = .{\n        .llvm_name = \"avoid-movs-shop\",\n        .description = \"Avoid movs instructions with shifter operand\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.avoid_partial_cpsr)] = .{\n        .llvm_name = \"avoid-partial-cpsr\",\n        .description = \"Avoid CPSR partial update for OOO execution\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.bf16)] = .{\n        .llvm_name = \"bf16\",\n        .description = \"Enable support for BFloat16 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .neon,\n        }),\n    };\n    result[@enumToInt(Feature.cde)] = .{\n        .llvm_name = \"cde\",\n        .description = \"Support CDE instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .v8m_main,\n        }),\n    };\n    result[@enumToInt(Feature.cdecp0)] = .{\n        .llvm_name = \"cdecp0\",\n        .description = \"Coprocessor 0 ISA is CDEv1\",\n        .dependencies = featureSet(&[_]Feature{\n            .cde,\n        }),\n    };\n    result[@enumToInt(Feature.cdecp1)] = .{\n        .llvm_name = \"cdecp1\",\n        .description = \"Coprocessor 1 ISA is CDEv1\",\n        .dependencies = featureSet(&[_]Feature{\n            .cde,\n        }),\n    };\n    result[@enumToInt(Feature.cdecp2)] = .{\n        .llvm_name = \"cdecp2\",\n        .description = \"Coprocessor 2 ISA is CDEv1\",\n        .dependencies = featureSet(&[_]Feature{\n            .cde,\n        }),\n    };\n    result[@enumToInt(Feature.cdecp3)] = .{\n        .llvm_name = \"cdecp3\",\n        .description = \"Coprocessor 3 ISA is CDEv1\",\n        .dependencies = featureSet(&[_]Feature{\n            .cde,\n        }),\n    };\n    result[@enumToInt(Feature.cdecp4)] = .{\n        .llvm_name = \"cdecp4\",\n        .description = \"Coprocessor 4 ISA is CDEv1\",\n        .dependencies = featureSet(&[_]Feature{\n            .cde,\n        }),\n    };\n    result[@enumToInt(Feature.cdecp5)] = .{\n        .llvm_name = \"cdecp5\",\n        .description = \"Coprocessor 5 ISA is CDEv1\",\n        .dependencies = featureSet(&[_]Feature{\n            .cde,\n        }),\n    };\n    result[@enumToInt(Feature.cdecp6)] = .{\n        .llvm_name = \"cdecp6\",\n        .description = \"Coprocessor 6 ISA is CDEv1\",\n        .dependencies = featureSet(&[_]Feature{\n            .cde,\n        }),\n    };\n    result[@enumToInt(Feature.cdecp7)] = .{\n        .llvm_name = \"cdecp7\",\n        .description = \"Coprocessor 7 ISA is CDEv1\",\n        .dependencies = featureSet(&[_]Feature{\n            .cde,\n        }),\n    };\n    result[@enumToInt(Feature.cheap_predicable_cpsr)] = .{\n        .llvm_name = \"cheap-predicable-cpsr\",\n        .description = \"Disable +1 predication cost for instructions updating CPSR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.crc)] = .{\n        .llvm_name = \"crc\",\n        .description = \"Enable support for CRC instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.crypto)] = .{\n        .llvm_name = \"crypto\",\n        .description = \"Enable support for Cryptography extensions\",\n        .dependencies = featureSet(&[_]Feature{\n            .aes,\n            .neon,\n            .sha2,\n        }),\n    };\n    result[@enumToInt(Feature.d32)] = .{\n        .llvm_name = \"d32\",\n        .description = \"Extend FP to 32 double registers\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.db)] = .{\n        .llvm_name = \"db\",\n        .description = \"Has data barrier (dmb/dsb) instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.dfb)] = .{\n        .llvm_name = \"dfb\",\n        .description = \"Has full data barrier (dfb) instruction\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.disable_postra_scheduler)] = .{\n        .llvm_name = \"disable-postra-scheduler\",\n        .description = \"Don't schedule again after register allocation\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.dont_widen_vmovs)] = .{\n        .llvm_name = \"dont-widen-vmovs\",\n        .description = \"Don't widen VMOVS to VMOVD\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.dotprod)] = .{\n        .llvm_name = \"dotprod\",\n        .description = \"Enable support for dot product instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .neon,\n        }),\n    };\n    result[@enumToInt(Feature.dsp)] = .{\n        .llvm_name = \"dsp\",\n        .description = \"Supports DSP instructions in ARM and/or Thumb2\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.execute_only)] = .{\n        .llvm_name = \"execute-only\",\n        .description = \"Enable the generation of execute only code.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.expand_fp_mlx)] = .{\n        .llvm_name = \"expand-fp-mlx\",\n        .description = \"Expand VFP/NEON MLA/MLS instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.exynos)] = .{\n        .llvm_name = \"exynos\",\n        .description = \"Samsung Exynos processors\",\n        .dependencies = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .expand_fp_mlx,\n            .fuse_aes,\n            .fuse_literals,\n            .hwdiv,\n            .hwdiv_arm,\n            .prof_unpr,\n            .ret_addr_stack,\n            .slow_fp_brcc,\n            .slow_vdup32,\n            .slow_vgetlni32,\n            .slowfpvfmx,\n            .slowfpvmlx,\n            .splat_vfp_neon,\n            .wide_stride_vfp,\n            .zcz,\n        }),\n    };\n    result[@enumToInt(Feature.fp16)] = .{\n        .llvm_name = \"fp16\",\n        .description = \"Enable half-precision floating point\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fp16fml)] = .{\n        .llvm_name = \"fp16fml\",\n        .description = \"Enable full half-precision floating point fml instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .fullfp16,\n        }),\n    };\n    result[@enumToInt(Feature.fp64)] = .{\n        .llvm_name = \"fp64\",\n        .description = \"Floating point unit supports double precision\",\n        .dependencies = featureSet(&[_]Feature{\n            .fpregs64,\n        }),\n    };\n    result[@enumToInt(Feature.fp_armv8)] = .{\n        .llvm_name = \"fp-armv8\",\n        .description = \"Enable ARMv8 FP\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp_armv8d16,\n            .fp_armv8sp,\n            .vfp4,\n        }),\n    };\n    result[@enumToInt(Feature.fp_armv8d16)] = .{\n        .llvm_name = \"fp-armv8d16\",\n        .description = \"Enable ARMv8 FP with only 16 d-registers\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp_armv8d16sp,\n            .fp64,\n            .vfp4d16,\n        }),\n    };\n    result[@enumToInt(Feature.fp_armv8d16sp)] = .{\n        .llvm_name = \"fp-armv8d16sp\",\n        .description = \"Enable ARMv8 FP with only 16 d-registers and no double precision\",\n        .dependencies = featureSet(&[_]Feature{\n            .vfp4d16sp,\n        }),\n    };\n    result[@enumToInt(Feature.fp_armv8sp)] = .{\n        .llvm_name = \"fp-armv8sp\",\n        .description = \"Enable ARMv8 FP with no double precision\",\n        .dependencies = featureSet(&[_]Feature{\n            .d32,\n            .fp_armv8d16sp,\n            .vfp4sp,\n        }),\n    };\n    result[@enumToInt(Feature.fpao)] = .{\n        .llvm_name = \"fpao\",\n        .description = \"Enable fast computation of positive address offsets\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fpregs)] = .{\n        .llvm_name = \"fpregs\",\n        .description = \"Enable FP registers\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fpregs16)] = .{\n        .llvm_name = \"fpregs16\",\n        .description = \"Enable 16-bit FP registers\",\n        .dependencies = featureSet(&[_]Feature{\n            .fpregs,\n        }),\n    };\n    result[@enumToInt(Feature.fpregs64)] = .{\n        .llvm_name = \"fpregs64\",\n        .description = \"Enable 64-bit FP registers\",\n        .dependencies = featureSet(&[_]Feature{\n            .fpregs,\n        }),\n    };\n    result[@enumToInt(Feature.fullfp16)] = .{\n        .llvm_name = \"fullfp16\",\n        .description = \"Enable full half-precision floating point\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp_armv8d16sp,\n            .fpregs16,\n        }),\n    };\n    result[@enumToInt(Feature.fuse_aes)] = .{\n        .llvm_name = \"fuse-aes\",\n        .description = \"CPU fuses AES crypto operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fuse_literals)] = .{\n        .llvm_name = \"fuse-literals\",\n        .description = \"CPU fuses literal generation operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.has_v4t)] = .{\n        .llvm_name = \"v4t\",\n        .description = \"Support ARM v4T instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.has_v5t)] = .{\n        .llvm_name = \"v5t\",\n        .description = \"Support ARM v5T instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v4t,\n        }),\n    };\n    result[@enumToInt(Feature.has_v5te)] = .{\n        .llvm_name = \"v5te\",\n        .description = \"Support ARM v5TE, v5TEj, and v5TExp instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v5t,\n        }),\n    };\n    result[@enumToInt(Feature.has_v6)] = .{\n        .llvm_name = \"v6\",\n        .description = \"Support ARM v6 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v5te,\n        }),\n    };\n    result[@enumToInt(Feature.has_v6k)] = .{\n        .llvm_name = \"v6k\",\n        .description = \"Support ARM v6k instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v6,\n        }),\n    };\n    result[@enumToInt(Feature.has_v6m)] = .{\n        .llvm_name = \"v6m\",\n        .description = \"Support ARM v6M instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v6,\n        }),\n    };\n    result[@enumToInt(Feature.has_v6t2)] = .{\n        .llvm_name = \"v6t2\",\n        .description = \"Support ARM v6t2 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .thumb2,\n            .has_v6k,\n            .has_v8m,\n        }),\n    };\n    result[@enumToInt(Feature.has_v7)] = .{\n        .llvm_name = \"v7\",\n        .description = \"Support ARM v7 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .perfmon,\n            .has_v6t2,\n            .has_v7clrex,\n        }),\n    };\n    result[@enumToInt(Feature.has_v7clrex)] = .{\n        .llvm_name = \"v7clrex\",\n        .description = \"Has v7 clrex instruction\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.has_v8)] = .{\n        .llvm_name = \"v8\",\n        .description = \"Support ARM v8 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .acquire_release,\n            .has_v7,\n        }),\n    };\n    result[@enumToInt(Feature.has_v8_1a)] = .{\n        .llvm_name = \"v8.1a\",\n        .description = \"Support ARM v8.1a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v8,\n        }),\n    };\n    result[@enumToInt(Feature.has_v8_1m_main)] = .{\n        .llvm_name = \"v8.1m.main\",\n        .description = \"Support ARM v8-1M Mainline instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v8m_main,\n        }),\n    };\n    result[@enumToInt(Feature.has_v8_2a)] = .{\n        .llvm_name = \"v8.2a\",\n        .description = \"Support ARM v8.2a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v8_1a,\n        }),\n    };\n    result[@enumToInt(Feature.has_v8_3a)] = .{\n        .llvm_name = \"v8.3a\",\n        .description = \"Support ARM v8.3a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v8_2a,\n        }),\n    };\n    result[@enumToInt(Feature.has_v8_4a)] = .{\n        .llvm_name = \"v8.4a\",\n        .description = \"Support ARM v8.4a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .dotprod,\n            .has_v8_3a,\n        }),\n    };\n    result[@enumToInt(Feature.has_v8_5a)] = .{\n        .llvm_name = \"v8.5a\",\n        .description = \"Support ARM v8.5a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .sb,\n            .has_v8_4a,\n        }),\n    };\n    result[@enumToInt(Feature.has_v8_6a)] = .{\n        .llvm_name = \"v8.6a\",\n        .description = \"Support ARM v8.6a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .bf16,\n            .i8mm,\n            .has_v8_5a,\n        }),\n    };\n    result[@enumToInt(Feature.has_v8m)] = .{\n        .llvm_name = \"v8m\",\n        .description = \"Support ARM v8M Baseline instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v6m,\n        }),\n    };\n    result[@enumToInt(Feature.has_v8m_main)] = .{\n        .llvm_name = \"v8m.main\",\n        .description = \"Support ARM v8M Mainline instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v7,\n        }),\n    };\n    result[@enumToInt(Feature.hwdiv)] = .{\n        .llvm_name = \"hwdiv\",\n        .description = \"Enable divide instructions in Thumb\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.hwdiv_arm)] = .{\n        .llvm_name = \"hwdiv-arm\",\n        .description = \"Enable divide instructions in ARM mode\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.i8mm)] = .{\n        .llvm_name = \"i8mm\",\n        .description = \"Enable Matrix Multiply Int8 Extension\",\n        .dependencies = featureSet(&[_]Feature{\n            .neon,\n        }),\n    };\n    result[@enumToInt(Feature.iwmmxt)] = .{\n        .llvm_name = \"iwmmxt\",\n        .description = \"ARMv5te architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v5te,\n        }),\n    };\n    result[@enumToInt(Feature.iwmmxt2)] = .{\n        .llvm_name = \"iwmmxt2\",\n        .description = \"ARMv5te architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v5te,\n        }),\n    };\n    result[@enumToInt(Feature.lob)] = .{\n        .llvm_name = \"lob\",\n        .description = \"Enable Low Overhead Branch extensions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.long_calls)] = .{\n        .llvm_name = \"long-calls\",\n        .description = \"Generate calls via indirect call instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.loop_align)] = .{\n        .llvm_name = \"loop-align\",\n        .description = \"Prefer 32-bit alignment for loops\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.m3)] = .{\n        .llvm_name = \"m3\",\n        .description = \"Cortex-M3 ARM processors\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.mclass)] = .{\n        .llvm_name = \"mclass\",\n        .description = \"Is microcontroller profile ('M' series)\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.mp)] = .{\n        .llvm_name = \"mp\",\n        .description = \"Supports Multiprocessing extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.muxed_units)] = .{\n        .llvm_name = \"muxed-units\",\n        .description = \"Has muxed AGU and NEON/FPU\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.mve)] = .{\n        .llvm_name = \"mve\",\n        .description = \"Support M-Class Vector Extension with integer ops\",\n        .dependencies = featureSet(&[_]Feature{\n            .dsp,\n            .fpregs16,\n            .fpregs64,\n            .has_v8_1m_main,\n        }),\n    };\n    result[@enumToInt(Feature.mve_fp)] = .{\n        .llvm_name = \"mve.fp\",\n        .description = \"Support M-Class Vector Extension with integer and floating ops\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp_armv8d16sp,\n            .fullfp16,\n            .mve,\n        }),\n    };\n    result[@enumToInt(Feature.mve1beat)] = .{\n        .llvm_name = \"mve1beat\",\n        .description = \"Model MVE instructions as a 1 beat per tick architecture\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.mve2beat)] = .{\n        .llvm_name = \"mve2beat\",\n        .description = \"Model MVE instructions as a 2 beats per tick architecture\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.mve4beat)] = .{\n        .llvm_name = \"mve4beat\",\n        .description = \"Model MVE instructions as a 4 beats per tick architecture\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.nacl_trap)] = .{\n        .llvm_name = \"nacl-trap\",\n        .description = \"NaCl trap\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.neon)] = .{\n        .llvm_name = \"neon\",\n        .description = \"Enable NEON instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .vfp3,\n        }),\n    };\n    result[@enumToInt(Feature.neon_fpmovs)] = .{\n        .llvm_name = \"neon-fpmovs\",\n        .description = \"Convert VMOVSR, VMOVRS, VMOVS to NEON\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.neonfp)] = .{\n        .llvm_name = \"neonfp\",\n        .description = \"Use NEON for single precision FP\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.no_branch_predictor)] = .{\n        .llvm_name = \"no-branch-predictor\",\n        .description = \"Has no branch predictor\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.no_movt)] = .{\n        .llvm_name = \"no-movt\",\n        .description = \"Don't use movt/movw pairs for 32-bit imms\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.no_neg_immediates)] = .{\n        .llvm_name = \"no-neg-immediates\",\n        .description = \"Convert immediates and instructions to their negated or complemented equivalent when the immediate does not fit in the encoding.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.noarm)] = .{\n        .llvm_name = \"noarm\",\n        .description = \"Does not support ARM mode execution\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.nonpipelined_vfp)] = .{\n        .llvm_name = \"nonpipelined-vfp\",\n        .description = \"VFP instructions are not pipelined\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.perfmon)] = .{\n        .llvm_name = \"perfmon\",\n        .description = \"Enable support for Performance Monitor extensions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.prefer_ishst)] = .{\n        .llvm_name = \"prefer-ishst\",\n        .description = \"Prefer ISHST barriers\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.prefer_vmovsr)] = .{\n        .llvm_name = \"prefer-vmovsr\",\n        .description = \"Prefer VMOVSR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.prof_unpr)] = .{\n        .llvm_name = \"prof-unpr\",\n        .description = \"Is profitable to unpredicate\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.r4)] = .{\n        .llvm_name = \"r4\",\n        .description = \"Cortex-R4 ARM processors\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.ras)] = .{\n        .llvm_name = \"ras\",\n        .description = \"Enable Reliability, Availability and Serviceability extensions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.rclass)] = .{\n        .llvm_name = \"rclass\",\n        .description = \"Is realtime profile ('R' series)\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.read_tp_hard)] = .{\n        .llvm_name = \"read-tp-hard\",\n        .description = \"Reading thread pointer from register\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_r9)] = .{\n        .llvm_name = \"reserve-r9\",\n        .description = \"Reserve R9, making it unavailable as GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.ret_addr_stack)] = .{\n        .llvm_name = \"ret-addr-stack\",\n        .description = \"Has return address stack\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.sb)] = .{\n        .llvm_name = \"sb\",\n        .description = \"Enable v8.5a Speculation Barrier\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.sha2)] = .{\n        .llvm_name = \"sha2\",\n        .description = \"Enable SHA1 and SHA256 support\",\n        .dependencies = featureSet(&[_]Feature{\n            .neon,\n        }),\n    };\n    result[@enumToInt(Feature.slow_fp_brcc)] = .{\n        .llvm_name = \"slow-fp-brcc\",\n        .description = \"FP compare + branch is slow\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.slow_load_D_subreg)] = .{\n        .llvm_name = \"slow-load-D-subreg\",\n        .description = \"Loading into D subregs is slow\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.slow_odd_reg)] = .{\n        .llvm_name = \"slow-odd-reg\",\n        .description = \"VLDM/VSTM starting with an odd register is slow\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.slow_vdup32)] = .{\n        .llvm_name = \"slow-vdup32\",\n        .description = \"Has slow VDUP32 - prefer VMOV\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.slow_vgetlni32)] = .{\n        .llvm_name = \"slow-vgetlni32\",\n        .description = \"Has slow VGETLNi32 - prefer VMOV\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.slowfpvfmx)] = .{\n        .llvm_name = \"slowfpvfmx\",\n        .description = \"Disable VFP / NEON FMA instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.slowfpvmlx)] = .{\n        .llvm_name = \"slowfpvmlx\",\n        .description = \"Disable VFP / NEON MAC instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.soft_float)] = .{\n        .llvm_name = \"soft-float\",\n        .description = \"Use software floating point features.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.splat_vfp_neon)] = .{\n        .llvm_name = \"splat-vfp-neon\",\n        .description = \"Splat register from VFP to NEON\",\n        .dependencies = featureSet(&[_]Feature{\n            .dont_widen_vmovs,\n        }),\n    };\n    result[@enumToInt(Feature.strict_align)] = .{\n        .llvm_name = \"strict-align\",\n        .description = \"Disallow all unaligned memory access\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.swift)] = .{\n        .llvm_name = \"swift\",\n        .description = \"Swift ARM processors\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.thumb2)] = .{\n        .llvm_name = \"thumb2\",\n        .description = \"Enable Thumb2 instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.thumb_mode)] = .{\n        .llvm_name = \"thumb-mode\",\n        .description = \"Thumb mode\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.trustzone)] = .{\n        .llvm_name = \"trustzone\",\n        .description = \"Enable support for TrustZone security extensions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.use_misched)] = .{\n        .llvm_name = \"use-misched\",\n        .description = \"Use the MachineScheduler\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.v2)] = .{\n        .llvm_name = \"armv2\",\n        .description = \"ARMv2 architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .strict_align,\n        }),\n    };\n    result[@enumToInt(Feature.v2a)] = .{\n        .llvm_name = \"armv2a\",\n        .description = \"ARMv2a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .strict_align,\n        }),\n    };\n    result[@enumToInt(Feature.v3)] = .{\n        .llvm_name = \"armv3\",\n        .description = \"ARMv3 architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .strict_align,\n        }),\n    };\n    result[@enumToInt(Feature.v3m)] = .{\n        .llvm_name = \"armv3m\",\n        .description = \"ARMv3m architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .strict_align,\n        }),\n    };\n    result[@enumToInt(Feature.v4)] = .{\n        .llvm_name = \"armv4\",\n        .description = \"ARMv4 architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .strict_align,\n        }),\n    };\n    result[@enumToInt(Feature.v4t)] = .{\n        .llvm_name = \"armv4t\",\n        .description = \"ARMv4t architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .strict_align,\n            .has_v4t,\n        }),\n    };\n    result[@enumToInt(Feature.v5t)] = .{\n        .llvm_name = \"armv5t\",\n        .description = \"ARMv5t architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .strict_align,\n            .has_v5t,\n        }),\n    };\n    result[@enumToInt(Feature.v5te)] = .{\n        .llvm_name = \"armv5te\",\n        .description = \"ARMv5te architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .strict_align,\n            .has_v5te,\n        }),\n    };\n    result[@enumToInt(Feature.v5tej)] = .{\n        .llvm_name = \"armv5tej\",\n        .description = \"ARMv5tej architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .strict_align,\n            .has_v5te,\n        }),\n    };\n    result[@enumToInt(Feature.v6)] = .{\n        .llvm_name = \"armv6\",\n        .description = \"ARMv6 architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .dsp,\n            .has_v6,\n        }),\n    };\n    result[@enumToInt(Feature.v6m)] = .{\n        .llvm_name = \"armv6-m\",\n        .description = \"ARMv6m architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .db,\n            .mclass,\n            .noarm,\n            .strict_align,\n            .thumb_mode,\n            .has_v6m,\n        }),\n    };\n    result[@enumToInt(Feature.v6j)] = .{\n        .llvm_name = \"armv6j\",\n        .description = \"ARMv7a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .v6,\n        }),\n    };\n    result[@enumToInt(Feature.v6k)] = .{\n        .llvm_name = \"armv6k\",\n        .description = \"ARMv6k architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v6k,\n        }),\n    };\n    result[@enumToInt(Feature.v6kz)] = .{\n        .llvm_name = \"armv6kz\",\n        .description = \"ARMv6kz architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .trustzone,\n            .has_v6k,\n        }),\n    };\n    result[@enumToInt(Feature.v6sm)] = .{\n        .llvm_name = \"armv6s-m\",\n        .description = \"ARMv6sm architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .db,\n            .mclass,\n            .noarm,\n            .strict_align,\n            .thumb_mode,\n            .has_v6m,\n        }),\n    };\n    result[@enumToInt(Feature.v6t2)] = .{\n        .llvm_name = \"armv6t2\",\n        .description = \"ARMv6t2 architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .dsp,\n            .has_v6t2,\n        }),\n    };\n    result[@enumToInt(Feature.v7a)] = .{\n        .llvm_name = \"armv7-a\",\n        .description = \"ARMv7a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .aclass,\n            .db,\n            .dsp,\n            .neon,\n            .has_v7,\n        }),\n    };\n    result[@enumToInt(Feature.v7m)] = .{\n        .llvm_name = \"armv7-m\",\n        .description = \"ARMv7m architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .db,\n            .hwdiv,\n            .mclass,\n            .noarm,\n            .thumb_mode,\n            .thumb2,\n            .has_v7,\n        }),\n    };\n    result[@enumToInt(Feature.v7r)] = .{\n        .llvm_name = \"armv7-r\",\n        .description = \"ARMv7r architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .db,\n            .dsp,\n            .hwdiv,\n            .rclass,\n            .has_v7,\n        }),\n    };\n    result[@enumToInt(Feature.v7em)] = .{\n        .llvm_name = \"armv7e-m\",\n        .description = \"ARMv7em architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .db,\n            .dsp,\n            .hwdiv,\n            .mclass,\n            .noarm,\n            .thumb_mode,\n            .thumb2,\n            .has_v7,\n        }),\n    };\n    result[@enumToInt(Feature.v7k)] = .{\n        .llvm_name = \"armv7k\",\n        .description = \"ARMv7a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .v7a,\n        }),\n    };\n    result[@enumToInt(Feature.v7s)] = .{\n        .llvm_name = \"armv7s\",\n        .description = \"ARMv7a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .v7a,\n        }),\n    };\n    result[@enumToInt(Feature.v7ve)] = .{\n        .llvm_name = \"armv7ve\",\n        .description = \"ARMv7ve architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .aclass,\n            .db,\n            .dsp,\n            .mp,\n            .neon,\n            .trustzone,\n            .has_v7,\n            .virtualization,\n        }),\n    };\n    result[@enumToInt(Feature.v8a)] = .{\n        .llvm_name = \"armv8-a\",\n        .description = \"ARMv8a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .aclass,\n            .crc,\n            .crypto,\n            .db,\n            .dsp,\n            .fp_armv8,\n            .mp,\n            .neon,\n            .trustzone,\n            .has_v8,\n            .virtualization,\n        }),\n    };\n    result[@enumToInt(Feature.v8m)] = .{\n        .llvm_name = \"armv8-m.base\",\n        .description = \"ARMv8mBaseline architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .@\"8msecext\",\n            .acquire_release,\n            .db,\n            .hwdiv,\n            .mclass,\n            .noarm,\n            .strict_align,\n            .thumb_mode,\n            .has_v7clrex,\n            .has_v8m,\n        }),\n    };\n    result[@enumToInt(Feature.v8m_main)] = .{\n        .llvm_name = \"armv8-m.main\",\n        .description = \"ARMv8mMainline architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .@\"8msecext\",\n            .acquire_release,\n            .db,\n            .hwdiv,\n            .mclass,\n            .noarm,\n            .thumb_mode,\n            .has_v8m_main,\n        }),\n    };\n    result[@enumToInt(Feature.v8r)] = .{\n        .llvm_name = \"armv8-r\",\n        .description = \"ARMv8r architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .crc,\n            .db,\n            .dfb,\n            .dsp,\n            .fp_armv8,\n            .mp,\n            .neon,\n            .rclass,\n            .has_v8,\n            .virtualization,\n        }),\n    };\n    result[@enumToInt(Feature.v8_1a)] = .{\n        .llvm_name = \"armv8.1-a\",\n        .description = \"ARMv81a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .aclass,\n            .crc,\n            .crypto,\n            .db,\n            .dsp,\n            .fp_armv8,\n            .mp,\n            .neon,\n            .trustzone,\n            .has_v8_1a,\n            .virtualization,\n        }),\n    };\n    result[@enumToInt(Feature.v8_1m_main)] = .{\n        .llvm_name = \"armv8.1-m.main\",\n        .description = \"ARMv81mMainline architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .@\"8msecext\",\n            .acquire_release,\n            .db,\n            .hwdiv,\n            .lob,\n            .mclass,\n            .noarm,\n            .ras,\n            .thumb_mode,\n            .has_v8_1m_main,\n        }),\n    };\n    result[@enumToInt(Feature.v8_2a)] = .{\n        .llvm_name = \"armv8.2-a\",\n        .description = \"ARMv82a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .aclass,\n            .crc,\n            .crypto,\n            .db,\n            .dsp,\n            .fp_armv8,\n            .mp,\n            .neon,\n            .ras,\n            .trustzone,\n            .has_v8_2a,\n            .virtualization,\n        }),\n    };\n    result[@enumToInt(Feature.v8_3a)] = .{\n        .llvm_name = \"armv8.3-a\",\n        .description = \"ARMv83a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .aclass,\n            .crc,\n            .crypto,\n            .db,\n            .dsp,\n            .fp_armv8,\n            .mp,\n            .neon,\n            .ras,\n            .trustzone,\n            .has_v8_3a,\n            .virtualization,\n        }),\n    };\n    result[@enumToInt(Feature.v8_4a)] = .{\n        .llvm_name = \"armv8.4-a\",\n        .description = \"ARMv84a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .aclass,\n            .crc,\n            .crypto,\n            .db,\n            .dotprod,\n            .dsp,\n            .fp_armv8,\n            .mp,\n            .neon,\n            .ras,\n            .trustzone,\n            .has_v8_4a,\n            .virtualization,\n        }),\n    };\n    result[@enumToInt(Feature.v8_5a)] = .{\n        .llvm_name = \"armv8.5-a\",\n        .description = \"ARMv85a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .aclass,\n            .crc,\n            .crypto,\n            .db,\n            .dotprod,\n            .dsp,\n            .fp_armv8,\n            .mp,\n            .neon,\n            .ras,\n            .trustzone,\n            .has_v8_5a,\n            .virtualization,\n        }),\n    };\n    result[@enumToInt(Feature.v8_6a)] = .{\n        .llvm_name = \"armv8.6-a\",\n        .description = \"ARMv86a architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .aclass,\n            .crc,\n            .crypto,\n            .db,\n            .dotprod,\n            .dsp,\n            .fp_armv8,\n            .mp,\n            .neon,\n            .ras,\n            .trustzone,\n            .has_v8_6a,\n            .virtualization,\n        }),\n    };\n    result[@enumToInt(Feature.vfp2)] = .{\n        .llvm_name = \"vfp2\",\n        .description = \"Enable VFP2 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp64,\n            .vfp2sp,\n        }),\n    };\n    result[@enumToInt(Feature.vfp2sp)] = .{\n        .llvm_name = \"vfp2sp\",\n        .description = \"Enable VFP2 instructions with no double precision\",\n        .dependencies = featureSet(&[_]Feature{\n            .fpregs,\n        }),\n    };\n    result[@enumToInt(Feature.vfp3)] = .{\n        .llvm_name = \"vfp3\",\n        .description = \"Enable VFP3 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .vfp3d16,\n            .vfp3sp,\n        }),\n    };\n    result[@enumToInt(Feature.vfp3d16)] = .{\n        .llvm_name = \"vfp3d16\",\n        .description = \"Enable VFP3 instructions with only 16 d-registers\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp64,\n            .vfp2,\n            .vfp3d16sp,\n        }),\n    };\n    result[@enumToInt(Feature.vfp3d16sp)] = .{\n        .llvm_name = \"vfp3d16sp\",\n        .description = \"Enable VFP3 instructions with only 16 d-registers and no double precision\",\n        .dependencies = featureSet(&[_]Feature{\n            .vfp2sp,\n        }),\n    };\n    result[@enumToInt(Feature.vfp3sp)] = .{\n        .llvm_name = \"vfp3sp\",\n        .description = \"Enable VFP3 instructions with no double precision\",\n        .dependencies = featureSet(&[_]Feature{\n            .d32,\n            .vfp3d16sp,\n        }),\n    };\n    result[@enumToInt(Feature.vfp4)] = .{\n        .llvm_name = \"vfp4\",\n        .description = \"Enable VFP4 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp16,\n            .vfp3,\n            .vfp4d16,\n            .vfp4sp,\n        }),\n    };\n    result[@enumToInt(Feature.vfp4d16)] = .{\n        .llvm_name = \"vfp4d16\",\n        .description = \"Enable VFP4 instructions with only 16 d-registers\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp16,\n            .fp64,\n            .vfp3d16,\n            .vfp4d16sp,\n        }),\n    };\n    result[@enumToInt(Feature.vfp4d16sp)] = .{\n        .llvm_name = \"vfp4d16sp\",\n        .description = \"Enable VFP4 instructions with only 16 d-registers and no double precision\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp16,\n            .vfp3d16sp,\n        }),\n    };\n    result[@enumToInt(Feature.vfp4sp)] = .{\n        .llvm_name = \"vfp4sp\",\n        .description = \"Enable VFP4 instructions with no double precision\",\n        .dependencies = featureSet(&[_]Feature{\n            .d32,\n            .fp16,\n            .vfp3sp,\n            .vfp4d16sp,\n        }),\n    };\n    result[@enumToInt(Feature.virtualization)] = .{\n        .llvm_name = \"virtualization\",\n        .description = \"Supports Virtualization extension\",\n        .dependencies = featureSet(&[_]Feature{\n            .hwdiv,\n            .hwdiv_arm,\n        }),\n    };\n    result[@enumToInt(Feature.vldn_align)] = .{\n        .llvm_name = \"vldn-align\",\n        .description = \"Check for VLDn unaligned access\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.vmlx_forwarding)] = .{\n        .llvm_name = \"vmlx-forwarding\",\n        .description = \"Has multiplier accumulator forwarding\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.vmlx_hazards)] = .{\n        .llvm_name = \"vmlx-hazards\",\n        .description = \"Has VMLx hazards\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.wide_stride_vfp)] = .{\n        .llvm_name = \"wide-stride-vfp\",\n        .description = \"Use a wide stride when allocating VFP registers\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.xscale)] = .{\n        .llvm_name = \"xscale\",\n        .description = \"ARMv5te architecture\",\n        .dependencies = featureSet(&[_]Feature{\n            .has_v5te,\n        }),\n    };\n    result[@enumToInt(Feature.zcz)] = .{\n        .llvm_name = \"zcz\",\n        .description = \"Has zero-cycle zeroing instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    const ti = @typeInfo(Feature);\n    for (result) |*elem, i| {\n        elem.index = i;\n        elem.name = ti.Enum.fields[i].name;\n    }\n    break :blk result;\n}","src":182,"more_decls":null}]