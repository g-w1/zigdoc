[{"pl":"pub const Feature = enum ","src":9,"more_decls":{"pl":"a34","src":10,"more_decls":null}{"pl":"a65","src":11,"more_decls":null}{"pl":"a76","src":12,"more_decls":null}{"pl":"aes","src":13,"more_decls":null}{"pl":"aggressive_fma","src":14,"more_decls":null}{"pl":"alternate_sextload_cvt_f32_pattern","src":15,"more_decls":null}{"pl":"altnzcv","src":16,"more_decls":null}{"pl":"am","src":17,"more_decls":null}{"pl":"amvs","src":18,"more_decls":null}{"pl":"apple_a10","src":19,"more_decls":null}{"pl":"apple_a11","src":20,"more_decls":null}{"pl":"apple_a12","src":21,"more_decls":null}{"pl":"apple_a13","src":22,"more_decls":null}{"pl":"apple_a7","src":23,"more_decls":null}{"pl":"arith_bcc_fusion","src":24,"more_decls":null}{"pl":"arith_cbz_fusion","src":25,"more_decls":null}{"pl":"balance_fp_ops","src":26,"more_decls":null}{"pl":"bf16","src":27,"more_decls":null}{"pl":"bti","src":28,"more_decls":null}{"pl":"call_saved_x10","src":29,"more_decls":null}{"pl":"call_saved_x11","src":30,"more_decls":null}{"pl":"call_saved_x12","src":31,"more_decls":null}{"pl":"call_saved_x13","src":32,"more_decls":null}{"pl":"call_saved_x14","src":33,"more_decls":null}{"pl":"call_saved_x15","src":34,"more_decls":null}{"pl":"call_saved_x18","src":35,"more_decls":null}{"pl":"call_saved_x8","src":36,"more_decls":null}{"pl":"call_saved_x9","src":37,"more_decls":null}{"pl":"ccdp","src":38,"more_decls":null}{"pl":"ccidx","src":39,"more_decls":null}{"pl":"ccpp","src":40,"more_decls":null}{"pl":"complxnum","src":41,"more_decls":null}{"pl":"crc","src":42,"more_decls":null}{"pl":"crypto","src":43,"more_decls":null}{"pl":"custom_cheap_as_move","src":44,"more_decls":null}{"pl":"disable_latency_sched_heuristic","src":45,"more_decls":null}{"pl":"dit","src":46,"more_decls":null}{"pl":"dotprod","src":47,"more_decls":null}{"pl":"ecv","src":48,"more_decls":null}{"pl":"ete","src":49,"more_decls":null}{"pl":"exynos_cheap_as_move","src":50,"more_decls":null}{"pl":"exynosm4","src":51,"more_decls":null}{"pl":"f32mm","src":52,"more_decls":null}{"pl":"f64mm","src":53,"more_decls":null}{"pl":"fgt","src":54,"more_decls":null}{"pl":"fmi","src":55,"more_decls":null}{"pl":"force_32bit_jump_tables","src":56,"more_decls":null}{"pl":"fp_armv8","src":57,"more_decls":null}{"pl":"fp16fml","src":58,"more_decls":null}{"pl":"fptoint","src":59,"more_decls":null}{"pl":"fullfp16","src":60,"more_decls":null}{"pl":"fuse_address","src":61,"more_decls":null}{"pl":"fuse_aes","src":62,"more_decls":null}{"pl":"fuse_arith_logic","src":63,"more_decls":null}{"pl":"fuse_crypto_eor","src":64,"more_decls":null}{"pl":"fuse_csel","src":65,"more_decls":null}{"pl":"fuse_literals","src":66,"more_decls":null}{"pl":"harden_sls_blr","src":67,"more_decls":null}{"pl":"harden_sls_retbr","src":68,"more_decls":null}{"pl":"i8mm","src":69,"more_decls":null}{"pl":"jsconv","src":70,"more_decls":null}{"pl":"lor","src":71,"more_decls":null}{"pl":"lse","src":72,"more_decls":null}{"pl":"lsl_fast","src":73,"more_decls":null}{"pl":"mpam","src":74,"more_decls":null}{"pl":"mte","src":75,"more_decls":null}{"pl":"neon","src":76,"more_decls":null}{"pl":"neoversee1","src":77,"more_decls":null}{"pl":"neoversen1","src":78,"more_decls":null}{"pl":"no_neg_immediates","src":79,"more_decls":null}{"pl":"nv","src":80,"more_decls":null}{"pl":"pa","src":81,"more_decls":null}{"pl":"pan","src":82,"more_decls":null}{"pl":"pan_rwv","src":83,"more_decls":null}{"pl":"perfmon","src":84,"more_decls":null}{"pl":"pmu","src":85,"more_decls":null}{"pl":"predictable_select_expensive","src":86,"more_decls":null}{"pl":"predres","src":87,"more_decls":null}{"pl":"rand","src":88,"more_decls":null}{"pl":"ras","src":89,"more_decls":null}{"pl":"rasv8_4","src":90,"more_decls":null}{"pl":"rcpc","src":91,"more_decls":null}{"pl":"rcpc_immo","src":92,"more_decls":null}{"pl":"rdm","src":93,"more_decls":null}{"pl":"reserve_x1","src":94,"more_decls":null}{"pl":"reserve_x10","src":95,"more_decls":null}{"pl":"reserve_x11","src":96,"more_decls":null}{"pl":"reserve_x12","src":97,"more_decls":null}{"pl":"reserve_x13","src":98,"more_decls":null}{"pl":"reserve_x14","src":99,"more_decls":null}{"pl":"reserve_x15","src":100,"more_decls":null}{"pl":"reserve_x18","src":101,"more_decls":null}{"pl":"reserve_x2","src":102,"more_decls":null}{"pl":"reserve_x20","src":103,"more_decls":null}{"pl":"reserve_x21","src":104,"more_decls":null}{"pl":"reserve_x22","src":105,"more_decls":null}{"pl":"reserve_x23","src":106,"more_decls":null}{"pl":"reserve_x24","src":107,"more_decls":null}{"pl":"reserve_x25","src":108,"more_decls":null}{"pl":"reserve_x26","src":109,"more_decls":null}{"pl":"reserve_x27","src":110,"more_decls":null}{"pl":"reserve_x28","src":111,"more_decls":null}{"pl":"reserve_x3","src":112,"more_decls":null}{"pl":"reserve_x30","src":113,"more_decls":null}{"pl":"reserve_x4","src":114,"more_decls":null}{"pl":"reserve_x5","src":115,"more_decls":null}{"pl":"reserve_x6","src":116,"more_decls":null}{"pl":"reserve_x7","src":117,"more_decls":null}{"pl":"reserve_x9","src":118,"more_decls":null}{"pl":"sb","src":119,"more_decls":null}{"pl":"sel2","src":120,"more_decls":null}{"pl":"sha2","src":121,"more_decls":null}{"pl":"sha3","src":122,"more_decls":null}{"pl":"slow_misaligned_128store","src":123,"more_decls":null}{"pl":"slow_paired_128","src":124,"more_decls":null}{"pl":"slow_strqro_store","src":125,"more_decls":null}{"pl":"sm4","src":126,"more_decls":null}{"pl":"spe","src":127,"more_decls":null}{"pl":"specrestrict","src":128,"more_decls":null}{"pl":"ssbs","src":129,"more_decls":null}{"pl":"strict_align","src":130,"more_decls":null}{"pl":"sve","src":131,"more_decls":null}{"pl":"sve2","src":132,"more_decls":null}{"pl":"sve2_aes","src":133,"more_decls":null}{"pl":"sve2_bitperm","src":134,"more_decls":null}{"pl":"sve2_sha3","src":135,"more_decls":null}{"pl":"sve2_sm4","src":136,"more_decls":null}{"pl":"tagged_globals","src":137,"more_decls":null}{"pl":"tlb_rmi","src":138,"more_decls":null}{"pl":"tme","src":139,"more_decls":null}{"pl":"tpidr_el1","src":140,"more_decls":null}{"pl":"tpidr_el2","src":141,"more_decls":null}{"pl":"tpidr_el3","src":142,"more_decls":null}{"pl":"tracev8_4","src":143,"more_decls":null}{"pl":"trbe","src":144,"more_decls":null}{"pl":"uaops","src":145,"more_decls":null}{"pl":"use_aa","src":146,"more_decls":null}{"pl":"use_experimental_zeroing_pseudos","src":147,"more_decls":null}{"pl":"use_postra_scheduler","src":148,"more_decls":null}{"pl":"use_reciprocal_square_root","src":149,"more_decls":null}{"pl":"v8a","src":150,"more_decls":null}{"pl":"v8_1a","src":151,"more_decls":null}{"pl":"v8_2a","src":152,"more_decls":null}{"pl":"v8_3a","src":153,"more_decls":null}{"pl":"v8_4a","src":154,"more_decls":null}{"pl":"v8_5a","src":155,"more_decls":null}{"pl":"v8_6a","src":156,"more_decls":null}{"pl":"vh","src":157,"more_decls":null}{"pl":"zcm","src":158,"more_decls":null}{"pl":"zcz","src":159,"more_decls":null}{"pl":"zcz_fp","src":160,"more_decls":null}{"pl":"zcz_fp_workaround","src":161,"more_decls":null}{"pl":"zcz_gp","src":162,"more_decls":null}}{"pl":"pub const cpu = struct ","src":1193,"more_decls":{"pl":"const a64fx = CpuModel{\n        .name = \"a64fx\",\n        .llvm_name = \"a64fx\",\n        .features = featureSet(&[_]Feature{\n            .complxnum,\n            .fp_armv8,\n            .fullfp16,\n            .neon,\n            .perfmon,\n            .sha2,\n            .sve,\n            .use_postra_scheduler,\n            .v8_2a,\n        }),\n    }","src":1194,"more_decls":null}{"pl":"const apple_a10 = CpuModel{\n        .name = \"apple_a10\",\n        .llvm_name = \"apple-a10\",\n        .features = featureSet(&[_]Feature{\n            .apple_a10,\n        }),\n    }","src":1209,"more_decls":null}{"pl":"const apple_a11 = CpuModel{\n        .name = \"apple_a11\",\n        .llvm_name = \"apple-a11\",\n        .features = featureSet(&[_]Feature{\n            .apple_a11,\n        }),\n    }","src":1216,"more_decls":null}{"pl":"const apple_a12 = CpuModel{\n        .name = \"apple_a12\",\n        .llvm_name = \"apple-a12\",\n        .features = featureSet(&[_]Feature{\n            .apple_a12,\n        }),\n    }","src":1223,"more_decls":null}{"pl":"const apple_a13 = CpuModel{\n        .name = \"apple_a13\",\n        .llvm_name = \"apple-a13\",\n        .features = featureSet(&[_]Feature{\n            .apple_a13,\n        }),\n    }","src":1230,"more_decls":null}{"pl":"const apple_a7 = CpuModel{\n        .name = \"apple_a7\",\n        .llvm_name = \"apple-a7\",\n        .features = featureSet(&[_]Feature{\n            .apple_a7,\n        }),\n    }","src":1237,"more_decls":null}{"pl":"const apple_a8 = CpuModel{\n        .name = \"apple_a8\",\n        .llvm_name = \"apple-a8\",\n        .features = featureSet(&[_]Feature{\n            .apple_a7,\n        }),\n    }","src":1244,"more_decls":null}{"pl":"const apple_a9 = CpuModel{\n        .name = \"apple_a9\",\n        .llvm_name = \"apple-a9\",\n        .features = featureSet(&[_]Feature{\n            .apple_a7,\n        }),\n    }","src":1251,"more_decls":null}{"pl":"const apple_latest = CpuModel{\n        .name = \"apple_latest\",\n        .llvm_name = \"apple-latest\",\n        .features = featureSet(&[_]Feature{\n            .apple_a13,\n        }),\n    }","src":1258,"more_decls":null}{"pl":"const apple_s4 = CpuModel{\n        .name = \"apple_s4\",\n        .llvm_name = \"apple-s4\",\n        .features = featureSet(&[_]Feature{\n            .apple_a12,\n        }),\n    }","src":1265,"more_decls":null}{"pl":"const apple_s5 = CpuModel{\n        .name = \"apple_s5\",\n        .llvm_name = \"apple-s5\",\n        .features = featureSet(&[_]Feature{\n            .apple_a12,\n        }),\n    }","src":1272,"more_decls":null}{"pl":"const carmel = CpuModel{\n        .name = \"carmel\",\n        .llvm_name = \"carmel\",\n        .features = featureSet(&[_]Feature{\n            .crypto,\n            .fullfp16,\n            .neon,\n            .v8_2a,\n        }),\n    }","src":1279,"more_decls":null}{"pl":"const cortex_a34 = CpuModel{\n        .name = \"cortex_a34\",\n        .llvm_name = \"cortex-a34\",\n        .features = featureSet(&[_]Feature{\n            .a34,\n        }),\n    }","src":1289,"more_decls":null}{"pl":"const cortex_a35 = CpuModel{\n        .name = \"cortex_a35\",\n        .llvm_name = \"cortex-a35\",\n        .features = featureSet(&[_]Feature{\n            .a34,\n        }),\n    }","src":1296,"more_decls":null}{"pl":"const cortex_a53 = CpuModel{\n        .name = \"cortex_a53\",\n        .llvm_name = \"cortex-a53\",\n        .features = featureSet(&[_]Feature{\n            .balance_fp_ops,\n            .crc,\n            .crypto,\n            .custom_cheap_as_move,\n            .fuse_aes,\n            .perfmon,\n            .use_aa,\n            .use_postra_scheduler,\n            .v8a,\n        }),\n    }","src":1303,"more_decls":null}{"pl":"const cortex_a55 = CpuModel{\n        .name = \"cortex_a55\",\n        .llvm_name = \"cortex-a55\",\n        .features = featureSet(&[_]Feature{\n            .crypto,\n            .dotprod,\n            .fullfp16,\n            .fuse_aes,\n            .perfmon,\n            .rcpc,\n            .v8_2a,\n        }),\n    }","src":1318,"more_decls":null}{"pl":"const cortex_a57 = CpuModel{\n        .name = \"cortex_a57\",\n        .llvm_name = \"cortex-a57\",\n        .features = featureSet(&[_]Feature{\n            .balance_fp_ops,\n            .crc,\n            .crypto,\n            .custom_cheap_as_move,\n            .fuse_aes,\n            .fuse_literals,\n            .perfmon,\n            .predictable_select_expensive,\n            .use_postra_scheduler,\n            .v8a,\n        }),\n    }","src":1331,"more_decls":null}{"pl":"const cortex_a65 = CpuModel{\n        .name = \"cortex_a65\",\n        .llvm_name = \"cortex-a65\",\n        .features = featureSet(&[_]Feature{\n            .a65,\n        }),\n    }","src":1347,"more_decls":null}{"pl":"const cortex_a65ae = CpuModel{\n        .name = \"cortex_a65ae\",\n        .llvm_name = \"cortex-a65ae\",\n        .features = featureSet(&[_]Feature{\n            .a65,\n        }),\n    }","src":1354,"more_decls":null}{"pl":"const cortex_a72 = CpuModel{\n        .name = \"cortex_a72\",\n        .llvm_name = \"cortex-a72\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .fuse_aes,\n            .perfmon,\n            .v8a,\n        }),\n    }","src":1361,"more_decls":null}{"pl":"const cortex_a73 = CpuModel{\n        .name = \"cortex_a73\",\n        .llvm_name = \"cortex-a73\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .fuse_aes,\n            .perfmon,\n            .v8a,\n        }),\n    }","src":1372,"more_decls":null}{"pl":"const cortex_a75 = CpuModel{\n        .name = \"cortex_a75\",\n        .llvm_name = \"cortex-a75\",\n        .features = featureSet(&[_]Feature{\n            .crypto,\n            .dotprod,\n            .fullfp16,\n            .fuse_aes,\n            .perfmon,\n            .rcpc,\n            .v8_2a,\n        }),\n    }","src":1383,"more_decls":null}{"pl":"const cortex_a76 = CpuModel{\n        .name = \"cortex_a76\",\n        .llvm_name = \"cortex-a76\",\n        .features = featureSet(&[_]Feature{\n            .a76,\n        }),\n    }","src":1396,"more_decls":null}{"pl":"const cortex_a76ae = CpuModel{\n        .name = \"cortex_a76ae\",\n        .llvm_name = \"cortex-a76ae\",\n        .features = featureSet(&[_]Feature{\n            .a76,\n        }),\n    }","src":1403,"more_decls":null}{"pl":"const cortex_a77 = CpuModel{\n        .name = \"cortex_a77\",\n        .llvm_name = \"cortex-a77\",\n        .features = featureSet(&[_]Feature{\n            .crypto,\n            .dotprod,\n            .fp_armv8,\n            .fullfp16,\n            .neon,\n            .rcpc,\n            .v8_2a,\n        }),\n    }","src":1410,"more_decls":null}{"pl":"const cortex_a78 = CpuModel{\n        .name = \"cortex_a78\",\n        .llvm_name = \"cortex-a78\",\n        .features = featureSet(&[_]Feature{\n            .crypto,\n            .dotprod,\n            .fp_armv8,\n            .fullfp16,\n            .fuse_aes,\n            .neon,\n            .perfmon,\n            .rcpc,\n            .spe,\n            .ssbs,\n            .use_postra_scheduler,\n            .v8_2a,\n        }),\n    }","src":1423,"more_decls":null}{"pl":"const cortex_x1 = CpuModel{\n        .name = \"cortex_x1\",\n        .llvm_name = \"cortex-x1\",\n        .features = featureSet(&[_]Feature{\n            .crypto,\n            .dotprod,\n            .fp_armv8,\n            .fullfp16,\n            .fuse_aes,\n            .neon,\n            .perfmon,\n            .rcpc,\n            .spe,\n            .use_postra_scheduler,\n            .v8_2a,\n        }),\n    }","src":1441,"more_decls":null}{"pl":"const cyclone = CpuModel{\n        .name = \"cyclone\",\n        .llvm_name = \"cyclone\",\n        .features = featureSet(&[_]Feature{\n            .apple_a7,\n        }),\n    }","src":1458,"more_decls":null}{"pl":"const exynos_m1 = CpuModel{\n        .name = \"exynos_m1\",\n        .llvm_name = null,\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .exynos_cheap_as_move,\n            .force_32bit_jump_tables,\n            .fuse_aes,\n            .perfmon,\n            .slow_misaligned_128store,\n            .slow_paired_128,\n            .use_postra_scheduler,\n            .use_reciprocal_square_root,\n            .v8a,\n            .zcz_fp,\n        }),\n    }","src":1465,"more_decls":null}{"pl":"const exynos_m2 = CpuModel{\n        .name = \"exynos_m2\",\n        .llvm_name = null,\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .exynos_cheap_as_move,\n            .force_32bit_jump_tables,\n            .fuse_aes,\n            .perfmon,\n            .slow_misaligned_128store,\n            .slow_paired_128,\n            .use_postra_scheduler,\n            .v8a,\n            .zcz_fp,\n        }),\n    }","src":1483,"more_decls":null}{"pl":"const exynos_m3 = CpuModel{\n        .name = \"exynos_m3\",\n        .llvm_name = \"exynos-m3\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .exynos_cheap_as_move,\n            .force_32bit_jump_tables,\n            .fuse_address,\n            .fuse_aes,\n            .fuse_csel,\n            .fuse_literals,\n            .lsl_fast,\n            .perfmon,\n            .predictable_select_expensive,\n            .use_postra_scheduler,\n            .v8a,\n            .zcz_fp,\n        }),\n    }","src":1500,"more_decls":null}{"pl":"const exynos_m4 = CpuModel{\n        .name = \"exynos_m4\",\n        .llvm_name = \"exynos-m4\",\n        .features = featureSet(&[_]Feature{\n            .exynosm4,\n        }),\n    }","src":1520,"more_decls":null}{"pl":"const exynos_m5 = CpuModel{\n        .name = \"exynos_m5\",\n        .llvm_name = \"exynos-m5\",\n        .features = featureSet(&[_]Feature{\n            .exynosm4,\n        }),\n    }","src":1527,"more_decls":null}{"pl":"const falkor = CpuModel{\n        .name = \"falkor\",\n        .llvm_name = \"falkor\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .custom_cheap_as_move,\n            .lsl_fast,\n            .perfmon,\n            .predictable_select_expensive,\n            .rdm,\n            .slow_strqro_store,\n            .use_postra_scheduler,\n            .v8a,\n            .zcz,\n        }),\n    }","src":1534,"more_decls":null}{"pl":"const generic = CpuModel{\n        .name = \"generic\",\n        .llvm_name = \"generic\",\n        .features = featureSet(&[_]Feature{\n            .ete,\n            .fuse_aes,\n            .perfmon,\n            .use_postra_scheduler,\n            .v8a,\n        }),\n    }","src":1551,"more_decls":null}{"pl":"const kryo = CpuModel{\n        .name = \"kryo\",\n        .llvm_name = \"kryo\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .custom_cheap_as_move,\n            .lsl_fast,\n            .perfmon,\n            .predictable_select_expensive,\n            .use_postra_scheduler,\n            .zcz,\n            .v8a,\n        }),\n    }","src":1562,"more_decls":null}{"pl":"const neoverse_e1 = CpuModel{\n        .name = \"neoverse_e1\",\n        .llvm_name = \"neoverse-e1\",\n        .features = featureSet(&[_]Feature{\n            .neoversee1,\n        }),\n    }","src":1577,"more_decls":null}{"pl":"const neoverse_n1 = CpuModel{\n        .name = \"neoverse_n1\",\n        .llvm_name = \"neoverse-n1\",\n        .features = featureSet(&[_]Feature{\n            .neoversen1,\n        }),\n    }","src":1584,"more_decls":null}{"pl":"const saphira = CpuModel{\n        .name = \"saphira\",\n        .llvm_name = \"saphira\",\n        .features = featureSet(&[_]Feature{\n            .crypto,\n            .custom_cheap_as_move,\n            .lsl_fast,\n            .perfmon,\n            .predictable_select_expensive,\n            .spe,\n            .use_postra_scheduler,\n            .v8_4a,\n            .zcz,\n        }),\n    }","src":1591,"more_decls":null}{"pl":"const thunderx = CpuModel{\n        .name = \"thunderx\",\n        .llvm_name = \"thunderx\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .perfmon,\n            .predictable_select_expensive,\n            .use_postra_scheduler,\n            .v8a,\n        }),\n    }","src":1606,"more_decls":null}{"pl":"const thunderx2t99 = CpuModel{\n        .name = \"thunderx2t99\",\n        .llvm_name = \"thunderx2t99\",\n        .features = featureSet(&[_]Feature{\n            .aggressive_fma,\n            .arith_bcc_fusion,\n            .crc,\n            .crypto,\n            .lse,\n            .predictable_select_expensive,\n            .use_postra_scheduler,\n            .v8_1a,\n        }),\n    }","src":1618,"more_decls":null}{"pl":"const thunderx3t110 = CpuModel{\n        .name = \"thunderx3t110\",\n        .llvm_name = \"thunderx3t110\",\n        .features = featureSet(&[_]Feature{\n            .aggressive_fma,\n            .arith_bcc_fusion,\n            .balance_fp_ops,\n            .crc,\n            .crypto,\n            .fp_armv8,\n            .lse,\n            .neon,\n            .pa,\n            .perfmon,\n            .predictable_select_expensive,\n            .strict_align,\n            .use_aa,\n            .use_postra_scheduler,\n            .v8_3a,\n        }),\n    }","src":1632,"more_decls":null}{"pl":"const thunderxt81 = CpuModel{\n        .name = \"thunderxt81\",\n        .llvm_name = \"thunderxt81\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .perfmon,\n            .predictable_select_expensive,\n            .use_postra_scheduler,\n            .v8a,\n        }),\n    }","src":1653,"more_decls":null}{"pl":"const thunderxt83 = CpuModel{\n        .name = \"thunderxt83\",\n        .llvm_name = \"thunderxt83\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .perfmon,\n            .predictable_select_expensive,\n            .use_postra_scheduler,\n            .v8a,\n        }),\n    }","src":1665,"more_decls":null}{"pl":"const thunderxt88 = CpuModel{\n        .name = \"thunderxt88\",\n        .llvm_name = \"thunderxt88\",\n        .features = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .perfmon,\n            .predictable_select_expensive,\n            .use_postra_scheduler,\n            .v8a,\n        }),\n    }","src":1677,"more_decls":null}{"pl":"const tsv110 = CpuModel{\n        .name = \"tsv110\",\n        .llvm_name = \"tsv110\",\n        .features = featureSet(&[_]Feature{\n            .crypto,\n            .custom_cheap_as_move,\n            .dotprod,\n            .fp16fml,\n            .fullfp16,\n            .fuse_aes,\n            .perfmon,\n            .spe,\n            .use_postra_scheduler,\n            .v8_2a,\n        }),\n    }","src":1689,"more_decls":null}}{"pl":"const all_features = blk: {\n    @setEvalBranchQuota(2000);\n    const len = @typeInfo(Feature).Enum.fields.len;\n    std.debug.assert(len <= CpuFeature.Set.needed_bit_count);\n    var result: [len]CpuFeature = undefined;\n    result[@enumToInt(Feature.a34)] = .{\n        .llvm_name = \"a35\",\n        .description = \"Cortex-A34 ARM processors\",\n        .dependencies = featureSet(&[_]Feature{\n            .crc,\n            .crypto,\n            .perfmon,\n            .v8a,\n        }),\n    };\n    result[@enumToInt(Feature.a65)] = .{\n        .llvm_name = \"a65\",\n        .description = \"Cortex-A65 ARM processors\",\n        .dependencies = featureSet(&[_]Feature{\n            .crypto,\n            .dotprod,\n            .fp_armv8,\n            .fullfp16,\n            .neon,\n            .ras,\n            .rcpc,\n            .ssbs,\n            .v8_2a,\n        }),\n    };\n    result[@enumToInt(Feature.a76)] = .{\n        .llvm_name = \"a76\",\n        .description = \"Cortex-A76 ARM processors\",\n        .dependencies = featureSet(&[_]Feature{\n            .crypto,\n            .dotprod,\n            .fullfp16,\n            .rcpc,\n            .ssbs,\n            .v8_2a,\n        }),\n    };\n    result[@enumToInt(Feature.aes)] = .{\n        .llvm_name = \"aes\",\n        .description = \"Enable AES support\",\n        .dependencies = featureSet(&[_]Feature{\n            .neon,\n        }),\n    };\n    result[@enumToInt(Feature.aggressive_fma)] = .{\n        .llvm_name = \"aggressive-fma\",\n        .description = \"Enable Aggressive FMA for floating-point.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.alternate_sextload_cvt_f32_pattern)] = .{\n        .llvm_name = \"alternate-sextload-cvt-f32-pattern\",\n        .description = \"Use alternative pattern for sextload convert to f32\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.altnzcv)] = .{\n        .llvm_name = \"altnzcv\",\n        .description = \"Enable alternative NZCV format for floating point comparisons\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.am)] = .{\n        .llvm_name = \"am\",\n        .description = \"Enable v8.4-A Activity Monitors extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.amvs)] = .{\n        .llvm_name = \"amvs\",\n        .description = \"Enable v8.6-A Activity Monitors Virtualization support\",\n        .dependencies = featureSet(&[_]Feature{\n            .am,\n        }),\n    };\n    result[@enumToInt(Feature.apple_a10)] = .{\n        .llvm_name = \"apple-a10\",\n        .description = \"Apple A10\",\n        .dependencies = featureSet(&[_]Feature{\n            .alternate_sextload_cvt_f32_pattern,\n            .arith_bcc_fusion,\n            .arith_cbz_fusion,\n            .crc,\n            .crypto,\n            .disable_latency_sched_heuristic,\n            .fp_armv8,\n            .fuse_aes,\n            .fuse_crypto_eor,\n            .lor,\n            .neon,\n            .pan,\n            .perfmon,\n            .rdm,\n            .vh,\n            .zcm,\n            .zcz,\n        }),\n    };\n    result[@enumToInt(Feature.apple_a11)] = .{\n        .llvm_name = \"apple-a11\",\n        .description = \"Apple A11\",\n        .dependencies = featureSet(&[_]Feature{\n            .alternate_sextload_cvt_f32_pattern,\n            .arith_bcc_fusion,\n            .arith_cbz_fusion,\n            .crypto,\n            .disable_latency_sched_heuristic,\n            .fp_armv8,\n            .fullfp16,\n            .fuse_aes,\n            .fuse_crypto_eor,\n            .neon,\n            .perfmon,\n            .v8_2a,\n            .zcm,\n            .zcz,\n        }),\n    };\n    result[@enumToInt(Feature.apple_a12)] = .{\n        .llvm_name = \"apple-a12\",\n        .description = \"Apple A12\",\n        .dependencies = featureSet(&[_]Feature{\n            .alternate_sextload_cvt_f32_pattern,\n            .arith_bcc_fusion,\n            .arith_cbz_fusion,\n            .crypto,\n            .disable_latency_sched_heuristic,\n            .fp_armv8,\n            .fullfp16,\n            .fuse_aes,\n            .fuse_crypto_eor,\n            .neon,\n            .perfmon,\n            .v8_3a,\n            .zcm,\n            .zcz,\n        }),\n    };\n    result[@enumToInt(Feature.apple_a13)] = .{\n        .llvm_name = \"apple-a13\",\n        .description = \"Apple A13\",\n        .dependencies = featureSet(&[_]Feature{\n            .alternate_sextload_cvt_f32_pattern,\n            .arith_bcc_fusion,\n            .arith_cbz_fusion,\n            .crypto,\n            .disable_latency_sched_heuristic,\n            .fp_armv8,\n            .fp16fml,\n            .fullfp16,\n            .fuse_aes,\n            .fuse_crypto_eor,\n            .neon,\n            .perfmon,\n            .sha3,\n            .v8_4a,\n            .zcm,\n            .zcz,\n        }),\n    };\n    result[@enumToInt(Feature.apple_a7)] = .{\n        .llvm_name = \"apple-a7\",\n        .description = \"Apple A7 (the CPU formerly known as Cyclone)\",\n        .dependencies = featureSet(&[_]Feature{\n            .alternate_sextload_cvt_f32_pattern,\n            .arith_bcc_fusion,\n            .arith_cbz_fusion,\n            .crypto,\n            .disable_latency_sched_heuristic,\n            .fp_armv8,\n            .fuse_aes,\n            .fuse_crypto_eor,\n            .neon,\n            .perfmon,\n            .zcm,\n            .zcz,\n            .zcz_fp_workaround,\n        }),\n    };\n    result[@enumToInt(Feature.arith_bcc_fusion)] = .{\n        .llvm_name = \"arith-bcc-fusion\",\n        .description = \"CPU fuses arithmetic+bcc operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.arith_cbz_fusion)] = .{\n        .llvm_name = \"arith-cbz-fusion\",\n        .description = \"CPU fuses arithmetic + cbz/cbnz operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.balance_fp_ops)] = .{\n        .llvm_name = \"balance-fp-ops\",\n        .description = \"balance mix of odd and even D-registers for fp multiply(-accumulate) ops\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.bf16)] = .{\n        .llvm_name = \"bf16\",\n        .description = \"Enable BFloat16 Extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.bti)] = .{\n        .llvm_name = \"bti\",\n        .description = \"Enable Branch Target Identification\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.call_saved_x10)] = .{\n        .llvm_name = \"call-saved-x10\",\n        .description = \"Make X10 callee saved.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.call_saved_x11)] = .{\n        .llvm_name = \"call-saved-x11\",\n        .description = \"Make X11 callee saved.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.call_saved_x12)] = .{\n        .llvm_name = \"call-saved-x12\",\n        .description = \"Make X12 callee saved.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.call_saved_x13)] = .{\n        .llvm_name = \"call-saved-x13\",\n        .description = \"Make X13 callee saved.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.call_saved_x14)] = .{\n        .llvm_name = \"call-saved-x14\",\n        .description = \"Make X14 callee saved.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.call_saved_x15)] = .{\n        .llvm_name = \"call-saved-x15\",\n        .description = \"Make X15 callee saved.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.call_saved_x18)] = .{\n        .llvm_name = \"call-saved-x18\",\n        .description = \"Make X18 callee saved.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.call_saved_x8)] = .{\n        .llvm_name = \"call-saved-x8\",\n        .description = \"Make X8 callee saved.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.call_saved_x9)] = .{\n        .llvm_name = \"call-saved-x9\",\n        .description = \"Make X9 callee saved.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.ccdp)] = .{\n        .llvm_name = \"ccdp\",\n        .description = \"Enable v8.5 Cache Clean to Point of Deep Persistence\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.ccidx)] = .{\n        .llvm_name = \"ccidx\",\n        .description = \"Enable v8.3-A Extend of the CCSIDR number of sets\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.ccpp)] = .{\n        .llvm_name = \"ccpp\",\n        .description = \"Enable v8.2 data Cache Clean to Point of Persistence\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.complxnum)] = .{\n        .llvm_name = \"complxnum\",\n        .description = \"Enable v8.3-A Floating-point complex number support\",\n        .dependencies = featureSet(&[_]Feature{\n            .neon,\n        }),\n    };\n    result[@enumToInt(Feature.crc)] = .{\n        .llvm_name = \"crc\",\n        .description = \"Enable ARMv8 CRC-32 checksum instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.crypto)] = .{\n        .llvm_name = \"crypto\",\n        .description = \"Enable cryptographic instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .aes,\n            .neon,\n            .sha2,\n        }),\n    };\n    result[@enumToInt(Feature.custom_cheap_as_move)] = .{\n        .llvm_name = \"custom-cheap-as-move\",\n        .description = \"Use custom handling of cheap instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.disable_latency_sched_heuristic)] = .{\n        .llvm_name = \"disable-latency-sched-heuristic\",\n        .description = \"Disable latency scheduling heuristic\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.dit)] = .{\n        .llvm_name = \"dit\",\n        .description = \"Enable v8.4-A Data Independent Timing instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.dotprod)] = .{\n        .llvm_name = \"dotprod\",\n        .description = \"Enable dot product support\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.ecv)] = .{\n        .llvm_name = \"ecv\",\n        .description = \"Enable enhanced counter virtualization extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.ete)] = .{\n        .llvm_name = \"ete\",\n        .description = \"Enable Embedded Trace Extension\",\n        .dependencies = featureSet(&[_]Feature{\n            .trbe,\n        }),\n    };\n    result[@enumToInt(Feature.exynos_cheap_as_move)] = .{\n        .llvm_name = \"exynos-cheap-as-move\",\n        .description = \"Use Exynos specific handling of cheap instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .custom_cheap_as_move,\n        }),\n    };\n    result[@enumToInt(Feature.exynosm4)] = .{\n        .llvm_name = \"exynosm4\",\n        .description = \"Samsung Exynos-M4 processors\",\n        .dependencies = featureSet(&[_]Feature{\n            .arith_bcc_fusion,\n            .arith_cbz_fusion,\n            .crypto,\n            .dotprod,\n            .exynos_cheap_as_move,\n            .force_32bit_jump_tables,\n            .fullfp16,\n            .fuse_address,\n            .fuse_aes,\n            .fuse_arith_logic,\n            .fuse_csel,\n            .fuse_literals,\n            .lsl_fast,\n            .perfmon,\n            .use_postra_scheduler,\n            .v8_2a,\n            .zcz,\n        }),\n    };\n    result[@enumToInt(Feature.f32mm)] = .{\n        .llvm_name = \"f32mm\",\n        .description = \"Enable Matrix Multiply FP32 Extension\",\n        .dependencies = featureSet(&[_]Feature{\n            .sve,\n        }),\n    };\n    result[@enumToInt(Feature.f64mm)] = .{\n        .llvm_name = \"f64mm\",\n        .description = \"Enable Matrix Multiply FP64 Extension\",\n        .dependencies = featureSet(&[_]Feature{\n            .sve,\n        }),\n    };\n    result[@enumToInt(Feature.fgt)] = .{\n        .llvm_name = \"fgt\",\n        .description = \"Enable fine grained virtualization traps extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fmi)] = .{\n        .llvm_name = \"fmi\",\n        .description = \"Enable v8.4-A Flag Manipulation Instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.force_32bit_jump_tables)] = .{\n        .llvm_name = \"force-32bit-jump-tables\",\n        .description = \"Force jump table entries to be 32-bits wide except at MinSize\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fp_armv8)] = .{\n        .llvm_name = \"fp-armv8\",\n        .description = \"Enable ARMv8 FP\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fp16fml)] = .{\n        .llvm_name = \"fp16fml\",\n        .description = \"Enable FP16 FML instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .fullfp16,\n        }),\n    };\n    result[@enumToInt(Feature.fptoint)] = .{\n        .llvm_name = \"fptoint\",\n        .description = \"Enable FRInt[32|64][Z|X] instructions that round a floating-point number to an integer (in FP format) forcing it to fit into a 32- or 64-bit int\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fullfp16)] = .{\n        .llvm_name = \"fullfp16\",\n        .description = \"Full FP16\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp_armv8,\n        }),\n    };\n    result[@enumToInt(Feature.fuse_address)] = .{\n        .llvm_name = \"fuse-address\",\n        .description = \"CPU fuses address generation and memory operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fuse_aes)] = .{\n        .llvm_name = \"fuse-aes\",\n        .description = \"CPU fuses AES crypto operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fuse_arith_logic)] = .{\n        .llvm_name = \"fuse-arith-logic\",\n        .description = \"CPU fuses arithmetic and logic operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fuse_crypto_eor)] = .{\n        .llvm_name = \"fuse-crypto-eor\",\n        .description = \"CPU fuses AES/PMULL and EOR operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fuse_csel)] = .{\n        .llvm_name = \"fuse-csel\",\n        .description = \"CPU fuses conditional select operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fuse_literals)] = .{\n        .llvm_name = \"fuse-literals\",\n        .description = \"CPU fuses literal generation operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.harden_sls_blr)] = .{\n        .llvm_name = \"harden-sls-blr\",\n        .description = \"Harden against straight line speculation across BLR instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.harden_sls_retbr)] = .{\n        .llvm_name = \"harden-sls-retbr\",\n        .description = \"Harden against straight line speculation across RET and BR instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.i8mm)] = .{\n        .llvm_name = \"i8mm\",\n        .description = \"Enable Matrix Multiply Int8 Extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.jsconv)] = .{\n        .llvm_name = \"jsconv\",\n        .description = \"Enable v8.3-A JavaScript FP conversion instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp_armv8,\n        }),\n    };\n    result[@enumToInt(Feature.lor)] = .{\n        .llvm_name = \"lor\",\n        .description = \"Enables ARM v8.1 Limited Ordering Regions extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.lse)] = .{\n        .llvm_name = \"lse\",\n        .description = \"Enable ARMv8.1 Large System Extension (LSE) atomic instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.lsl_fast)] = .{\n        .llvm_name = \"lsl-fast\",\n        .description = \"CPU has a fastpath logical shift of up to 3 places\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.mpam)] = .{\n        .llvm_name = \"mpam\",\n        .description = \"Enable v8.4-A Memory system Partitioning and Monitoring extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.mte)] = .{\n        .llvm_name = \"mte\",\n        .description = \"Enable Memory Tagging Extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.neon)] = .{\n        .llvm_name = \"neon\",\n        .description = \"Enable Advanced SIMD instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp_armv8,\n        }),\n    };\n    result[@enumToInt(Feature.neoversee1)] = .{\n        .llvm_name = \"neoversee1\",\n        .description = \"Neoverse E1 ARM processors\",\n        .dependencies = featureSet(&[_]Feature{\n            .crypto,\n            .dotprod,\n            .fp_armv8,\n            .fullfp16,\n            .neon,\n            .rcpc,\n            .ssbs,\n            .v8_2a,\n        }),\n    };\n    result[@enumToInt(Feature.neoversen1)] = .{\n        .llvm_name = \"neoversen1\",\n        .description = \"Neoverse N1 ARM processors\",\n        .dependencies = featureSet(&[_]Feature{\n            .crypto,\n            .dotprod,\n            .fp_armv8,\n            .fullfp16,\n            .neon,\n            .rcpc,\n            .spe,\n            .ssbs,\n            .v8_2a,\n        }),\n    };\n    result[@enumToInt(Feature.no_neg_immediates)] = .{\n        .llvm_name = \"no-neg-immediates\",\n        .description = \"Convert immediates and instructions to their negated or complemented equivalent when the immediate does not fit in the encoding.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.nv)] = .{\n        .llvm_name = \"nv\",\n        .description = \"Enable v8.4-A Nested Virtualization extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.pa)] = .{\n        .llvm_name = \"pa\",\n        .description = \"Enable v8.3-A Pointer Authentication extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.pan)] = .{\n        .llvm_name = \"pan\",\n        .description = \"Enables ARM v8.1 Privileged Access-Never extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.pan_rwv)] = .{\n        .llvm_name = \"pan-rwv\",\n        .description = \"Enable v8.2 PAN s1e1R and s1e1W Variants\",\n        .dependencies = featureSet(&[_]Feature{\n            .pan,\n        }),\n    };\n    result[@enumToInt(Feature.perfmon)] = .{\n        .llvm_name = \"perfmon\",\n        .description = \"Enable ARMv8 PMUv3 Performance Monitors extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.pmu)] = .{\n        .llvm_name = \"pmu\",\n        .description = \"Enable v8.4-A PMU extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.predictable_select_expensive)] = .{\n        .llvm_name = \"predictable-select-expensive\",\n        .description = \"Prefer likely predicted branches over selects\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.predres)] = .{\n        .llvm_name = \"predres\",\n        .description = \"Enable v8.5a execution and data prediction invalidation instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.rand)] = .{\n        .llvm_name = \"rand\",\n        .description = \"Enable Random Number generation instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.ras)] = .{\n        .llvm_name = \"ras\",\n        .description = \"Enable ARMv8 Reliability, Availability and Serviceability Extensions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.rasv8_4)] = .{\n        .llvm_name = \"rasv8_4\",\n        .description = \"Enable v8.4-A Reliability, Availability and Serviceability extension\",\n        .dependencies = featureSet(&[_]Feature{\n            .ras,\n        }),\n    };\n    result[@enumToInt(Feature.rcpc)] = .{\n        .llvm_name = \"rcpc\",\n        .description = \"Enable support for RCPC extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.rcpc_immo)] = .{\n        .llvm_name = \"rcpc-immo\",\n        .description = \"Enable v8.4-A RCPC instructions with Immediate Offsets\",\n        .dependencies = featureSet(&[_]Feature{\n            .rcpc,\n        }),\n    };\n    result[@enumToInt(Feature.rdm)] = .{\n        .llvm_name = \"rdm\",\n        .description = \"Enable ARMv8.1 Rounding Double Multiply Add/Subtract instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x1)] = .{\n        .llvm_name = \"reserve-x1\",\n        .description = \"Reserve X1, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x10)] = .{\n        .llvm_name = \"reserve-x10\",\n        .description = \"Reserve X10, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x11)] = .{\n        .llvm_name = \"reserve-x11\",\n        .description = \"Reserve X11, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x12)] = .{\n        .llvm_name = \"reserve-x12\",\n        .description = \"Reserve X12, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x13)] = .{\n        .llvm_name = \"reserve-x13\",\n        .description = \"Reserve X13, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x14)] = .{\n        .llvm_name = \"reserve-x14\",\n        .description = \"Reserve X14, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x15)] = .{\n        .llvm_name = \"reserve-x15\",\n        .description = \"Reserve X15, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x18)] = .{\n        .llvm_name = \"reserve-x18\",\n        .description = \"Reserve X18, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x2)] = .{\n        .llvm_name = \"reserve-x2\",\n        .description = \"Reserve X2, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x20)] = .{\n        .llvm_name = \"reserve-x20\",\n        .description = \"Reserve X20, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x21)] = .{\n        .llvm_name = \"reserve-x21\",\n        .description = \"Reserve X21, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x22)] = .{\n        .llvm_name = \"reserve-x22\",\n        .description = \"Reserve X22, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x23)] = .{\n        .llvm_name = \"reserve-x23\",\n        .description = \"Reserve X23, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x24)] = .{\n        .llvm_name = \"reserve-x24\",\n        .description = \"Reserve X24, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x25)] = .{\n        .llvm_name = \"reserve-x25\",\n        .description = \"Reserve X25, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x26)] = .{\n        .llvm_name = \"reserve-x26\",\n        .description = \"Reserve X26, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x27)] = .{\n        .llvm_name = \"reserve-x27\",\n        .description = \"Reserve X27, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x28)] = .{\n        .llvm_name = \"reserve-x28\",\n        .description = \"Reserve X28, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x3)] = .{\n        .llvm_name = \"reserve-x3\",\n        .description = \"Reserve X3, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x30)] = .{\n        .llvm_name = \"reserve-x30\",\n        .description = \"Reserve X30, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x4)] = .{\n        .llvm_name = \"reserve-x4\",\n        .description = \"Reserve X4, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x5)] = .{\n        .llvm_name = \"reserve-x5\",\n        .description = \"Reserve X5, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x6)] = .{\n        .llvm_name = \"reserve-x6\",\n        .description = \"Reserve X6, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x7)] = .{\n        .llvm_name = \"reserve-x7\",\n        .description = \"Reserve X7, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reserve_x9)] = .{\n        .llvm_name = \"reserve-x9\",\n        .description = \"Reserve X9, making it unavailable as a GPR\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.sb)] = .{\n        .llvm_name = \"sb\",\n        .description = \"Enable v8.5 Speculation Barrier\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.sel2)] = .{\n        .llvm_name = \"sel2\",\n        .description = \"Enable v8.4-A Secure Exception Level 2 extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.sha2)] = .{\n        .llvm_name = \"sha2\",\n        .description = \"Enable SHA1 and SHA256 support\",\n        .dependencies = featureSet(&[_]Feature{\n            .neon,\n        }),\n    };\n    result[@enumToInt(Feature.sha3)] = .{\n        .llvm_name = \"sha3\",\n        .description = \"Enable SHA512 and SHA3 support\",\n        .dependencies = featureSet(&[_]Feature{\n            .neon,\n            .sha2,\n        }),\n    };\n    result[@enumToInt(Feature.slow_misaligned_128store)] = .{\n        .llvm_name = \"slow-misaligned-128store\",\n        .description = \"Misaligned 128 bit stores are slow\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.slow_paired_128)] = .{\n        .llvm_name = \"slow-paired-128\",\n        .description = \"Paired 128 bit loads and stores are slow\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.slow_strqro_store)] = .{\n        .llvm_name = \"slow-strqro-store\",\n        .description = \"STR of Q register with register offset is slow\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.sm4)] = .{\n        .llvm_name = \"sm4\",\n        .description = \"Enable SM3 and SM4 support\",\n        .dependencies = featureSet(&[_]Feature{\n            .neon,\n        }),\n    };\n    result[@enumToInt(Feature.spe)] = .{\n        .llvm_name = \"spe\",\n        .description = \"Enable Statistical Profiling extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.specrestrict)] = .{\n        .llvm_name = \"specrestrict\",\n        .description = \"Enable architectural speculation restriction\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.ssbs)] = .{\n        .llvm_name = \"ssbs\",\n        .description = \"Enable Speculative Store Bypass Safe bit\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.strict_align)] = .{\n        .llvm_name = \"strict-align\",\n        .description = \"Disallow all unaligned memory access\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.sve)] = .{\n        .llvm_name = \"sve\",\n        .description = \"Enable Scalable Vector Extension (SVE) instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.sve2)] = .{\n        .llvm_name = \"sve2\",\n        .description = \"Enable Scalable Vector Extension 2 (SVE2) instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .sve,\n        }),\n    };\n    result[@enumToInt(Feature.sve2_aes)] = .{\n        .llvm_name = \"sve2-aes\",\n        .description = \"Enable AES SVE2 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .aes,\n            .sve2,\n        }),\n    };\n    result[@enumToInt(Feature.sve2_bitperm)] = .{\n        .llvm_name = \"sve2-bitperm\",\n        .description = \"Enable bit permutation SVE2 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .sve2,\n        }),\n    };\n    result[@enumToInt(Feature.sve2_sha3)] = .{\n        .llvm_name = \"sve2-sha3\",\n        .description = \"Enable SHA3 SVE2 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .sha3,\n            .sve2,\n        }),\n    };\n    result[@enumToInt(Feature.sve2_sm4)] = .{\n        .llvm_name = \"sve2-sm4\",\n        .description = \"Enable SM4 SVE2 instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .sm4,\n            .sve2,\n        }),\n    };\n    result[@enumToInt(Feature.tagged_globals)] = .{\n        .llvm_name = \"tagged-globals\",\n        .description = \"Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.tlb_rmi)] = .{\n        .llvm_name = \"tlb-rmi\",\n        .description = \"Enable v8.4-A TLB Range and Maintenance Instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.tme)] = .{\n        .llvm_name = \"tme\",\n        .description = \"Enable Transactional Memory Extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.tpidr_el1)] = .{\n        .llvm_name = \"tpidr-el1\",\n        .description = \"Permit use of TPIDR_EL1 for the TLS base\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.tpidr_el2)] = .{\n        .llvm_name = \"tpidr-el2\",\n        .description = \"Permit use of TPIDR_EL2 for the TLS base\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.tpidr_el3)] = .{\n        .llvm_name = \"tpidr-el3\",\n        .description = \"Permit use of TPIDR_EL3 for the TLS base\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.tracev8_4)] = .{\n        .llvm_name = \"tracev8.4\",\n        .description = \"Enable v8.4-A Trace extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.trbe)] = .{\n        .llvm_name = \"trbe\",\n        .description = \"Enable Trace Buffer Extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.uaops)] = .{\n        .llvm_name = \"uaops\",\n        .description = \"Enable v8.2 UAO PState\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.use_aa)] = .{\n        .llvm_name = \"use-aa\",\n        .description = \"Use alias analysis during codegen\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.use_experimental_zeroing_pseudos)] = .{\n        .llvm_name = \"use-experimental-zeroing-pseudos\",\n        .description = \"Hint to the compiler that the MOVPRFX instruction is merged with destructive operations\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.use_postra_scheduler)] = .{\n        .llvm_name = \"use-postra-scheduler\",\n        .description = \"Schedule again after register allocation\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.use_reciprocal_square_root)] = .{\n        .llvm_name = \"use-reciprocal-square-root\",\n        .description = \"Use the reciprocal square root approximation\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.v8a)] = .{\n        .llvm_name = null,\n        .description = \"Support ARM v8a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .fp_armv8,\n            .neon,\n        }),\n    };\n    result[@enumToInt(Feature.v8_1a)] = .{\n        .llvm_name = \"v8.1a\",\n        .description = \"Support ARM v8.1a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .crc,\n            .lor,\n            .lse,\n            .pan,\n            .rdm,\n            .vh,\n            .v8a,\n        }),\n    };\n    result[@enumToInt(Feature.v8_2a)] = .{\n        .llvm_name = \"v8.2a\",\n        .description = \"Support ARM v8.2a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .ccpp,\n            .pan_rwv,\n            .ras,\n            .uaops,\n            .v8_1a,\n        }),\n    };\n    result[@enumToInt(Feature.v8_3a)] = .{\n        .llvm_name = \"v8.3a\",\n        .description = \"Support ARM v8.3a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .ccidx,\n            .complxnum,\n            .jsconv,\n            .pa,\n            .rcpc,\n            .v8_2a,\n        }),\n    };\n    result[@enumToInt(Feature.v8_4a)] = .{\n        .llvm_name = \"v8.4a\",\n        .description = \"Support ARM v8.4a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .am,\n            .dit,\n            .dotprod,\n            .fmi,\n            .mpam,\n            .nv,\n            .pmu,\n            .rasv8_4,\n            .rcpc_immo,\n            .sel2,\n            .tlb_rmi,\n            .tracev8_4,\n            .v8_3a,\n        }),\n    };\n    result[@enumToInt(Feature.v8_5a)] = .{\n        .llvm_name = \"v8.5a\",\n        .description = \"Support ARM v8.5a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .altnzcv,\n            .bti,\n            .ccdp,\n            .fptoint,\n            .predres,\n            .sb,\n            .specrestrict,\n            .ssbs,\n            .v8_4a,\n        }),\n    };\n    result[@enumToInt(Feature.v8_6a)] = .{\n        .llvm_name = \"v8.6a\",\n        .description = \"Support ARM v8.6a instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .amvs,\n            .bf16,\n            .ecv,\n            .fgt,\n            .i8mm,\n            .v8_5a,\n        }),\n    };\n    result[@enumToInt(Feature.vh)] = .{\n        .llvm_name = \"vh\",\n        .description = \"Enables ARM v8.1 Virtual Host extension\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.zcm)] = .{\n        .llvm_name = \"zcm\",\n        .description = \"Has zero-cycle register moves\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.zcz)] = .{\n        .llvm_name = \"zcz\",\n        .description = \"Has zero-cycle zeroing instructions\",\n        .dependencies = featureSet(&[_]Feature{\n            .zcz_fp,\n            .zcz_gp,\n        }),\n    };\n    result[@enumToInt(Feature.zcz_fp)] = .{\n        .llvm_name = \"zcz-fp\",\n        .description = \"Has zero-cycle zeroing instructions for FP registers\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.zcz_fp_workaround)] = .{\n        .llvm_name = \"zcz-fp-workaround\",\n        .description = \"The zero-cycle floating-point zeroing instruction has a bug\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.zcz_gp)] = .{\n        .llvm_name = \"zcz-gp\",\n        .description = \"Has zero-cycle zeroing instructions for generic registers\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    const ti = @typeInfo(Feature);\n    for (result) |*elem, i| {\n        elem.index = i;\n        elem.name = ti.Enum.fields[i].name;\n    }\n    break :blk result;\n}","src":167,"more_decls":null}]