[{"pl":"pub const Feature = enum ","src":9,"more_decls":{"pl":"ext","src":10,"more_decls":null}{"pl":"hwmult16","src":11,"more_decls":null}{"pl":"hwmult32","src":12,"more_decls":null}{"pl":"hwmultf5","src":13,"more_decls":null}}{"pl":"pub const cpu = struct ","src":50,"more_decls":{"pl":"const generic = CpuModel{\n        .name = \"generic\",\n        .llvm_name = \"generic\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":51,"more_decls":null}{"pl":"const msp430 = CpuModel{\n        .name = \"msp430\",\n        .llvm_name = \"msp430\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":56,"more_decls":null}{"pl":"const msp430x = CpuModel{\n        .name = \"msp430x\",\n        .llvm_name = \"msp430x\",\n        .features = featureSet(&[_]Feature{\n            .ext,\n        }),\n    }","src":61,"more_decls":null}}{"pl":"const all_features = blk: {\n    const len = @typeInfo(Feature).Enum.fields.len;\n    std.debug.assert(len <= CpuFeature.Set.needed_bit_count);\n    var result: [len]CpuFeature = undefined;\n    result[@enumToInt(Feature.ext)] = .{\n        .llvm_name = \"ext\",\n        .description = \"Enable MSP430-X extensions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.hwmult16)] = .{\n        .llvm_name = \"hwmult16\",\n        .description = \"Enable 16-bit hardware multiplier\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.hwmult32)] = .{\n        .llvm_name = \"hwmult32\",\n        .description = \"Enable 32-bit hardware multiplier\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.hwmultf5)] = .{\n        .llvm_name = \"hwmultf5\",\n        .description = \"Enable F5 series hardware multiplier\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    const ti = @typeInfo(Feature);\n    for (result) |*elem, i| {\n        elem.index = i;\n        elem.name = ti.Enum.fields[i].name;\n    }\n    break :blk result;\n}","src":18,"more_decls":null}]