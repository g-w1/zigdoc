[{"pl":"pub const Feature = enum ","src":9,"more_decls":{"pl":"deprecated_v8","src":10,"more_decls":null}{"pl":"detectroundchange","src":11,"more_decls":null}{"pl":"fixallfdivsqrt","src":12,"more_decls":null}{"pl":"hard_quad_float","src":13,"more_decls":null}{"pl":"hasleoncasa","src":14,"more_decls":null}{"pl":"hasumacsmac","src":15,"more_decls":null}{"pl":"insertnopload","src":16,"more_decls":null}{"pl":"leon","src":17,"more_decls":null}{"pl":"leoncyclecounter","src":18,"more_decls":null}{"pl":"leonpwrpsr","src":19,"more_decls":null}{"pl":"no_fmuls","src":20,"more_decls":null}{"pl":"no_fsmuld","src":21,"more_decls":null}{"pl":"popc","src":22,"more_decls":null}{"pl":"soft_float","src":23,"more_decls":null}{"pl":"soft_mul_div","src":24,"more_decls":null}{"pl":"v9","src":25,"more_decls":null}{"pl":"vis","src":26,"more_decls":null}{"pl":"vis2","src":27,"more_decls":null}{"pl":"vis3","src":28,"more_decls":null}}{"pl":"pub const cpu = struct ","src":140,"more_decls":{"pl":"const at697e = CpuModel{\n        .name = \"at697e\",\n        .llvm_name = \"at697e\",\n        .features = featureSet(&[_]Feature{\n            .insertnopload,\n            .leon,\n        }),\n    }","src":141,"more_decls":null}{"pl":"const at697f = CpuModel{\n        .name = \"at697f\",\n        .llvm_name = \"at697f\",\n        .features = featureSet(&[_]Feature{\n            .insertnopload,\n            .leon,\n        }),\n    }","src":149,"more_decls":null}{"pl":"const f934 = CpuModel{\n        .name = \"f934\",\n        .llvm_name = \"f934\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":157,"more_decls":null}{"pl":"const gr712rc = CpuModel{\n        .name = \"gr712rc\",\n        .llvm_name = \"gr712rc\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":162,"more_decls":null}{"pl":"const gr740 = CpuModel{\n        .name = \"gr740\",\n        .llvm_name = \"gr740\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .hasumacsmac,\n            .leon,\n            .leoncyclecounter,\n            .leonpwrpsr,\n        }),\n    }","src":170,"more_decls":null}{"pl":"const hypersparc = CpuModel{\n        .name = \"hypersparc\",\n        .llvm_name = \"hypersparc\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":181,"more_decls":null}{"pl":"const leon2 = CpuModel{\n        .name = \"leon2\",\n        .llvm_name = \"leon2\",\n        .features = featureSet(&[_]Feature{\n            .leon,\n        }),\n    }","src":186,"more_decls":null}{"pl":"const leon3 = CpuModel{\n        .name = \"leon3\",\n        .llvm_name = \"leon3\",\n        .features = featureSet(&[_]Feature{\n            .hasumacsmac,\n            .leon,\n        }),\n    }","src":193,"more_decls":null}{"pl":"const leon4 = CpuModel{\n        .name = \"leon4\",\n        .llvm_name = \"leon4\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .hasumacsmac,\n            .leon,\n        }),\n    }","src":201,"more_decls":null}{"pl":"const ma2080 = CpuModel{\n        .name = \"ma2080\",\n        .llvm_name = \"ma2080\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":210,"more_decls":null}{"pl":"const ma2085 = CpuModel{\n        .name = \"ma2085\",\n        .llvm_name = \"ma2085\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":218,"more_decls":null}{"pl":"const ma2100 = CpuModel{\n        .name = \"ma2100\",\n        .llvm_name = \"ma2100\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":226,"more_decls":null}{"pl":"const ma2150 = CpuModel{\n        .name = \"ma2150\",\n        .llvm_name = \"ma2150\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":234,"more_decls":null}{"pl":"const ma2155 = CpuModel{\n        .name = \"ma2155\",\n        .llvm_name = \"ma2155\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":242,"more_decls":null}{"pl":"const ma2450 = CpuModel{\n        .name = \"ma2450\",\n        .llvm_name = \"ma2450\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":250,"more_decls":null}{"pl":"const ma2455 = CpuModel{\n        .name = \"ma2455\",\n        .llvm_name = \"ma2455\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":258,"more_decls":null}{"pl":"const ma2480 = CpuModel{\n        .name = \"ma2480\",\n        .llvm_name = \"ma2480\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":266,"more_decls":null}{"pl":"const ma2485 = CpuModel{\n        .name = \"ma2485\",\n        .llvm_name = \"ma2485\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":274,"more_decls":null}{"pl":"const ma2x5x = CpuModel{\n        .name = \"ma2x5x\",\n        .llvm_name = \"ma2x5x\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":282,"more_decls":null}{"pl":"const ma2x8x = CpuModel{\n        .name = \"ma2x8x\",\n        .llvm_name = \"ma2x8x\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":290,"more_decls":null}{"pl":"const myriad2 = CpuModel{\n        .name = \"myriad2\",\n        .llvm_name = \"myriad2\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":298,"more_decls":null}{"pl":"const myriad2_1 = CpuModel{\n        .name = \"myriad2_1\",\n        .llvm_name = \"myriad2.1\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":306,"more_decls":null}{"pl":"const myriad2_2 = CpuModel{\n        .name = \"myriad2_2\",\n        .llvm_name = \"myriad2.2\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":314,"more_decls":null}{"pl":"const myriad2_3 = CpuModel{\n        .name = \"myriad2_3\",\n        .llvm_name = \"myriad2.3\",\n        .features = featureSet(&[_]Feature{\n            .hasleoncasa,\n            .leon,\n        }),\n    }","src":322,"more_decls":null}{"pl":"const niagara = CpuModel{\n        .name = \"niagara\",\n        .llvm_name = \"niagara\",\n        .features = featureSet(&[_]Feature{\n            .deprecated_v8,\n            .v9,\n            .vis,\n            .vis2,\n        }),\n    }","src":330,"more_decls":null}{"pl":"const niagara2 = CpuModel{\n        .name = \"niagara2\",\n        .llvm_name = \"niagara2\",\n        .features = featureSet(&[_]Feature{\n            .deprecated_v8,\n            .popc,\n            .v9,\n            .vis,\n            .vis2,\n        }),\n    }","src":340,"more_decls":null}{"pl":"const niagara3 = CpuModel{\n        .name = \"niagara3\",\n        .llvm_name = \"niagara3\",\n        .features = featureSet(&[_]Feature{\n            .deprecated_v8,\n            .popc,\n            .v9,\n            .vis,\n            .vis2,\n        }),\n    }","src":351,"more_decls":null}{"pl":"const niagara4 = CpuModel{\n        .name = \"niagara4\",\n        .llvm_name = \"niagara4\",\n        .features = featureSet(&[_]Feature{\n            .deprecated_v8,\n            .popc,\n            .v9,\n            .vis,\n            .vis2,\n            .vis3,\n        }),\n    }","src":362,"more_decls":null}{"pl":"const sparclet = CpuModel{\n        .name = \"sparclet\",\n        .llvm_name = \"sparclet\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":374,"more_decls":null}{"pl":"const sparclite = CpuModel{\n        .name = \"sparclite\",\n        .llvm_name = \"sparclite\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":379,"more_decls":null}{"pl":"const sparclite86x = CpuModel{\n        .name = \"sparclite86x\",\n        .llvm_name = \"sparclite86x\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":384,"more_decls":null}{"pl":"const supersparc = CpuModel{\n        .name = \"supersparc\",\n        .llvm_name = \"supersparc\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":389,"more_decls":null}{"pl":"const tsc701 = CpuModel{\n        .name = \"tsc701\",\n        .llvm_name = \"tsc701\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":394,"more_decls":null}{"pl":"const ultrasparc = CpuModel{\n        .name = \"ultrasparc\",\n        .llvm_name = \"ultrasparc\",\n        .features = featureSet(&[_]Feature{\n            .deprecated_v8,\n            .v9,\n            .vis,\n        }),\n    }","src":399,"more_decls":null}{"pl":"const ultrasparc3 = CpuModel{\n        .name = \"ultrasparc3\",\n        .llvm_name = \"ultrasparc3\",\n        .features = featureSet(&[_]Feature{\n            .deprecated_v8,\n            .v9,\n            .vis,\n            .vis2,\n        }),\n    }","src":408,"more_decls":null}{"pl":"const ut699 = CpuModel{\n        .name = \"ut699\",\n        .llvm_name = \"ut699\",\n        .features = featureSet(&[_]Feature{\n            .fixallfdivsqrt,\n            .insertnopload,\n            .leon,\n            .no_fmuls,\n            .no_fsmuld,\n        }),\n    }","src":418,"more_decls":null}{"pl":"const v7 = CpuModel{\n        .name = \"v7\",\n        .llvm_name = \"v7\",\n        .features = featureSet(&[_]Feature{\n            .no_fsmuld,\n            .soft_mul_div,\n        }),\n    }","src":429,"more_decls":null}{"pl":"const v8 = CpuModel{\n        .name = \"v8\",\n        .llvm_name = \"v8\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":437,"more_decls":null}{"pl":"const v9 = CpuModel{\n        .name = \"v9\",\n        .llvm_name = \"v9\",\n        .features = featureSet(&[_]Feature{\n            .v9,\n        }),\n    }","src":442,"more_decls":null}}{"pl":"const all_features = blk: {\n    const len = @typeInfo(Feature).Enum.fields.len;\n    std.debug.assert(len <= CpuFeature.Set.needed_bit_count);\n    var result: [len]CpuFeature = undefined;\n    result[@enumToInt(Feature.deprecated_v8)] = .{\n        .llvm_name = \"deprecated-v8\",\n        .description = \"Enable deprecated V8 instructions in V9 mode\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.detectroundchange)] = .{\n        .llvm_name = \"detectroundchange\",\n        .description = \"LEON3 erratum detection: Detects any rounding mode change request: use only the round-to-nearest rounding mode\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fixallfdivsqrt)] = .{\n        .llvm_name = \"fixallfdivsqrt\",\n        .description = \"LEON erratum fix: Fix FDIVS/FDIVD/FSQRTS/FSQRTD instructions with NOPs and floating-point store\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.hard_quad_float)] = .{\n        .llvm_name = \"hard-quad-float\",\n        .description = \"Enable quad-word floating point instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.hasleoncasa)] = .{\n        .llvm_name = \"hasleoncasa\",\n        .description = \"Enable CASA instruction for LEON3 and LEON4 processors\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.hasumacsmac)] = .{\n        .llvm_name = \"hasumacsmac\",\n        .description = \"Enable UMAC and SMAC for LEON3 and LEON4 processors\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.insertnopload)] = .{\n        .llvm_name = \"insertnopload\",\n        .description = \"LEON3 erratum fix: Insert a NOP instruction after every single-cycle load instruction when the next instruction is another load/store instruction\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.leon)] = .{\n        .llvm_name = \"leon\",\n        .description = \"Enable LEON extensions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.leoncyclecounter)] = .{\n        .llvm_name = \"leoncyclecounter\",\n        .description = \"Use the Leon cycle counter register\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.leonpwrpsr)] = .{\n        .llvm_name = \"leonpwrpsr\",\n        .description = \"Enable the PWRPSR instruction\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.no_fmuls)] = .{\n        .llvm_name = \"no-fmuls\",\n        .description = \"Disable the fmuls instruction.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.no_fsmuld)] = .{\n        .llvm_name = \"no-fsmuld\",\n        .description = \"Disable the fsmuld instruction.\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.popc)] = .{\n        .llvm_name = \"popc\",\n        .description = \"Use the popc (population count) instruction\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.soft_float)] = .{\n        .llvm_name = \"soft-float\",\n        .description = \"Use software emulation for floating point\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.soft_mul_div)] = .{\n        .llvm_name = \"soft-mul-div\",\n        .description = \"Use software emulation for integer multiply and divide\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.v9)] = .{\n        .llvm_name = \"v9\",\n        .description = \"Enable SPARC-V9 instructions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.vis)] = .{\n        .llvm_name = \"vis\",\n        .description = \"Enable UltraSPARC Visual Instruction Set extensions\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.vis2)] = .{\n        .llvm_name = \"vis2\",\n        .description = \"Enable Visual Instruction Set extensions II\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.vis3)] = .{\n        .llvm_name = \"vis3\",\n        .description = \"Enable Visual Instruction Set extensions III\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    const ti = @typeInfo(Feature);\n    for (result) |*elem, i| {\n        elem.index = i;\n        elem.name = ti.Enum.fields[i].name;\n    }\n    break :blk result;\n}","src":33,"more_decls":null}]