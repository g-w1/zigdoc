[{"pl":"pub const Feature = enum ","src":9,"more_decls":{"pl":"deflate_conversion","src":10,"more_decls":null}{"pl":"dfp_packed_conversion","src":11,"more_decls":null}{"pl":"dfp_zoned_conversion","src":12,"more_decls":null}{"pl":"distinct_ops","src":13,"more_decls":null}{"pl":"enhanced_dat_2","src":14,"more_decls":null}{"pl":"enhanced_sort","src":15,"more_decls":null}{"pl":"execution_hint","src":16,"more_decls":null}{"pl":"fast_serialization","src":17,"more_decls":null}{"pl":"fp_extension","src":18,"more_decls":null}{"pl":"guarded_storage","src":19,"more_decls":null}{"pl":"high_word","src":20,"more_decls":null}{"pl":"insert_reference_bits_multiple","src":21,"more_decls":null}{"pl":"interlocked_access1","src":22,"more_decls":null}{"pl":"load_and_trap","src":23,"more_decls":null}{"pl":"load_and_zero_rightmost_byte","src":24,"more_decls":null}{"pl":"load_store_on_cond","src":25,"more_decls":null}{"pl":"load_store_on_cond_2","src":26,"more_decls":null}{"pl":"message_security_assist_extension3","src":27,"more_decls":null}{"pl":"message_security_assist_extension4","src":28,"more_decls":null}{"pl":"message_security_assist_extension5","src":29,"more_decls":null}{"pl":"message_security_assist_extension7","src":30,"more_decls":null}{"pl":"message_security_assist_extension8","src":31,"more_decls":null}{"pl":"message_security_assist_extension9","src":32,"more_decls":null}{"pl":"miscellaneous_extensions","src":33,"more_decls":null}{"pl":"miscellaneous_extensions_2","src":34,"more_decls":null}{"pl":"miscellaneous_extensions_3","src":35,"more_decls":null}{"pl":"population_count","src":36,"more_decls":null}{"pl":"processor_assist","src":37,"more_decls":null}{"pl":"reset_reference_bits_multiple","src":38,"more_decls":null}{"pl":"soft_float","src":39,"more_decls":null}{"pl":"transactional_execution","src":40,"more_decls":null}{"pl":"vector","src":41,"more_decls":null}{"pl":"vector_enhancements_1","src":42,"more_decls":null}{"pl":"vector_enhancements_2","src":43,"more_decls":null}{"pl":"vector_packed_decimal","src":44,"more_decls":null}{"pl":"vector_packed_decimal_enhancement","src":45,"more_decls":null}}{"pl":"pub const cpu = struct ","src":242,"more_decls":{"pl":"const arch10 = CpuModel{\n        .name = \"arch10\",\n        .llvm_name = \"arch10\",\n        .features = featureSet(&[_]Feature{\n            .dfp_zoned_conversion,\n            .distinct_ops,\n            .enhanced_dat_2,\n            .execution_hint,\n            .fast_serialization,\n            .fp_extension,\n            .high_word,\n            .interlocked_access1,\n            .load_and_trap,\n            .load_store_on_cond,\n            .message_security_assist_extension3,\n            .message_security_assist_extension4,\n            .miscellaneous_extensions,\n            .population_count,\n            .processor_assist,\n            .reset_reference_bits_multiple,\n            .transactional_execution,\n        }),\n    }","src":243,"more_decls":null}{"pl":"const arch11 = CpuModel{\n        .name = \"arch11\",\n        .llvm_name = \"arch11\",\n        .features = featureSet(&[_]Feature{\n            .dfp_packed_conversion,\n            .dfp_zoned_conversion,\n            .distinct_ops,\n            .enhanced_dat_2,\n            .execution_hint,\n            .fast_serialization,\n            .fp_extension,\n            .high_word,\n            .interlocked_access1,\n            .load_and_trap,\n            .load_and_zero_rightmost_byte,\n            .load_store_on_cond,\n            .load_store_on_cond_2,\n            .message_security_assist_extension3,\n            .message_security_assist_extension4,\n            .message_security_assist_extension5,\n            .miscellaneous_extensions,\n            .population_count,\n            .processor_assist,\n            .reset_reference_bits_multiple,\n            .transactional_execution,\n            .vector,\n        }),\n    }","src":266,"more_decls":null}{"pl":"const arch12 = CpuModel{\n        .name = \"arch12\",\n        .llvm_name = \"arch12\",\n        .features = featureSet(&[_]Feature{\n            .dfp_packed_conversion,\n            .dfp_zoned_conversion,\n            .distinct_ops,\n            .enhanced_dat_2,\n            .execution_hint,\n            .fast_serialization,\n            .fp_extension,\n            .guarded_storage,\n            .high_word,\n            .insert_reference_bits_multiple,\n            .interlocked_access1,\n            .load_and_trap,\n            .load_and_zero_rightmost_byte,\n            .load_store_on_cond,\n            .load_store_on_cond_2,\n            .message_security_assist_extension3,\n            .message_security_assist_extension4,\n            .message_security_assist_extension5,\n            .message_security_assist_extension7,\n            .message_security_assist_extension8,\n            .miscellaneous_extensions,\n            .miscellaneous_extensions_2,\n            .population_count,\n            .processor_assist,\n            .reset_reference_bits_multiple,\n            .transactional_execution,\n            .vector,\n            .vector_enhancements_1,\n            .vector_packed_decimal,\n        }),\n    }","src":294,"more_decls":null}{"pl":"const arch13 = CpuModel{\n        .name = \"arch13\",\n        .llvm_name = \"arch13\",\n        .features = featureSet(&[_]Feature{\n            .deflate_conversion,\n            .dfp_packed_conversion,\n            .dfp_zoned_conversion,\n            .distinct_ops,\n            .enhanced_dat_2,\n            .enhanced_sort,\n            .execution_hint,\n            .fast_serialization,\n            .fp_extension,\n            .guarded_storage,\n            .high_word,\n            .insert_reference_bits_multiple,\n            .interlocked_access1,\n            .load_and_trap,\n            .load_and_zero_rightmost_byte,\n            .load_store_on_cond,\n            .load_store_on_cond_2,\n            .message_security_assist_extension3,\n            .message_security_assist_extension4,\n            .message_security_assist_extension5,\n            .message_security_assist_extension7,\n            .message_security_assist_extension8,\n            .message_security_assist_extension9,\n            .miscellaneous_extensions,\n            .miscellaneous_extensions_2,\n            .miscellaneous_extensions_3,\n            .population_count,\n            .processor_assist,\n            .reset_reference_bits_multiple,\n            .transactional_execution,\n            .vector,\n            .vector_enhancements_1,\n            .vector_enhancements_2,\n            .vector_packed_decimal,\n            .vector_packed_decimal_enhancement,\n        }),\n    }","src":329,"more_decls":null}{"pl":"const arch8 = CpuModel{\n        .name = \"arch8\",\n        .llvm_name = \"arch8\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":370,"more_decls":null}{"pl":"const arch9 = CpuModel{\n        .name = \"arch9\",\n        .llvm_name = \"arch9\",\n        .features = featureSet(&[_]Feature{\n            .distinct_ops,\n            .fast_serialization,\n            .fp_extension,\n            .high_word,\n            .interlocked_access1,\n            .load_store_on_cond,\n            .message_security_assist_extension3,\n            .message_security_assist_extension4,\n            .population_count,\n            .reset_reference_bits_multiple,\n        }),\n    }","src":375,"more_decls":null}{"pl":"const generic = CpuModel{\n        .name = \"generic\",\n        .llvm_name = \"generic\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":391,"more_decls":null}{"pl":"const z10 = CpuModel{\n        .name = \"z10\",\n        .llvm_name = \"z10\",\n        .features = featureSet(&[_]Feature{}),\n    }","src":396,"more_decls":null}{"pl":"const z13 = CpuModel{\n        .name = \"z13\",\n        .llvm_name = \"z13\",\n        .features = featureSet(&[_]Feature{\n            .dfp_packed_conversion,\n            .dfp_zoned_conversion,\n            .distinct_ops,\n            .enhanced_dat_2,\n            .execution_hint,\n            .fast_serialization,\n            .fp_extension,\n            .high_word,\n            .interlocked_access1,\n            .load_and_trap,\n            .load_and_zero_rightmost_byte,\n            .load_store_on_cond,\n            .load_store_on_cond_2,\n            .message_security_assist_extension3,\n            .message_security_assist_extension4,\n            .message_security_assist_extension5,\n            .miscellaneous_extensions,\n            .population_count,\n            .processor_assist,\n            .reset_reference_bits_multiple,\n            .transactional_execution,\n            .vector,\n        }),\n    }","src":401,"more_decls":null}{"pl":"const z14 = CpuModel{\n        .name = \"z14\",\n        .llvm_name = \"z14\",\n        .features = featureSet(&[_]Feature{\n            .dfp_packed_conversion,\n            .dfp_zoned_conversion,\n            .distinct_ops,\n            .enhanced_dat_2,\n            .execution_hint,\n            .fast_serialization,\n            .fp_extension,\n            .guarded_storage,\n            .high_word,\n            .insert_reference_bits_multiple,\n            .interlocked_access1,\n            .load_and_trap,\n            .load_and_zero_rightmost_byte,\n            .load_store_on_cond,\n            .load_store_on_cond_2,\n            .message_security_assist_extension3,\n            .message_security_assist_extension4,\n            .message_security_assist_extension5,\n            .message_security_assist_extension7,\n            .message_security_assist_extension8,\n            .miscellaneous_extensions,\n            .miscellaneous_extensions_2,\n            .population_count,\n            .processor_assist,\n            .reset_reference_bits_multiple,\n            .transactional_execution,\n            .vector,\n            .vector_enhancements_1,\n            .vector_packed_decimal,\n        }),\n    }","src":429,"more_decls":null}{"pl":"const z15 = CpuModel{\n        .name = \"z15\",\n        .llvm_name = \"z15\",\n        .features = featureSet(&[_]Feature{\n            .deflate_conversion,\n            .dfp_packed_conversion,\n            .dfp_zoned_conversion,\n            .distinct_ops,\n            .enhanced_dat_2,\n            .enhanced_sort,\n            .execution_hint,\n            .fast_serialization,\n            .fp_extension,\n            .guarded_storage,\n            .high_word,\n            .insert_reference_bits_multiple,\n            .interlocked_access1,\n            .load_and_trap,\n            .load_and_zero_rightmost_byte,\n            .load_store_on_cond,\n            .load_store_on_cond_2,\n            .message_security_assist_extension3,\n            .message_security_assist_extension4,\n            .message_security_assist_extension5,\n            .message_security_assist_extension7,\n            .message_security_assist_extension8,\n            .message_security_assist_extension9,\n            .miscellaneous_extensions,\n            .miscellaneous_extensions_2,\n            .miscellaneous_extensions_3,\n            .population_count,\n            .processor_assist,\n            .reset_reference_bits_multiple,\n            .transactional_execution,\n            .vector,\n            .vector_enhancements_1,\n            .vector_enhancements_2,\n            .vector_packed_decimal,\n            .vector_packed_decimal_enhancement,\n        }),\n    }","src":464,"more_decls":null}{"pl":"const z196 = CpuModel{\n        .name = \"z196\",\n        .llvm_name = \"z196\",\n        .features = featureSet(&[_]Feature{\n            .distinct_ops,\n            .fast_serialization,\n            .fp_extension,\n            .high_word,\n            .interlocked_access1,\n            .load_store_on_cond,\n            .message_security_assist_extension3,\n            .message_security_assist_extension4,\n            .population_count,\n            .reset_reference_bits_multiple,\n        }),\n    }","src":505,"more_decls":null}{"pl":"const zEC12 = CpuModel{\n        .name = \"zEC12\",\n        .llvm_name = \"zEC12\",\n        .features = featureSet(&[_]Feature{\n            .dfp_zoned_conversion,\n            .distinct_ops,\n            .enhanced_dat_2,\n            .execution_hint,\n            .fast_serialization,\n            .fp_extension,\n            .high_word,\n            .interlocked_access1,\n            .load_and_trap,\n            .load_store_on_cond,\n            .message_security_assist_extension3,\n            .message_security_assist_extension4,\n            .miscellaneous_extensions,\n            .population_count,\n            .processor_assist,\n            .reset_reference_bits_multiple,\n            .transactional_execution,\n        }),\n    }","src":521,"more_decls":null}}{"pl":"const all_features = blk: {\n    const len = @typeInfo(Feature).Enum.fields.len;\n    std.debug.assert(len <= CpuFeature.Set.needed_bit_count);\n    var result: [len]CpuFeature = undefined;\n    result[@enumToInt(Feature.deflate_conversion)] = .{\n        .llvm_name = \"deflate-conversion\",\n        .description = \"Assume that the deflate-conversion facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.dfp_packed_conversion)] = .{\n        .llvm_name = \"dfp-packed-conversion\",\n        .description = \"Assume that the DFP packed-conversion facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.dfp_zoned_conversion)] = .{\n        .llvm_name = \"dfp-zoned-conversion\",\n        .description = \"Assume that the DFP zoned-conversion facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.distinct_ops)] = .{\n        .llvm_name = \"distinct-ops\",\n        .description = \"Assume that the distinct-operands facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.enhanced_dat_2)] = .{\n        .llvm_name = \"enhanced-dat-2\",\n        .description = \"Assume that the enhanced-DAT facility 2 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.enhanced_sort)] = .{\n        .llvm_name = \"enhanced-sort\",\n        .description = \"Assume that the enhanced-sort facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.execution_hint)] = .{\n        .llvm_name = \"execution-hint\",\n        .description = \"Assume that the execution-hint facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fast_serialization)] = .{\n        .llvm_name = \"fast-serialization\",\n        .description = \"Assume that the fast-serialization facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.fp_extension)] = .{\n        .llvm_name = \"fp-extension\",\n        .description = \"Assume that the floating-point extension facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.guarded_storage)] = .{\n        .llvm_name = \"guarded-storage\",\n        .description = \"Assume that the guarded-storage facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.high_word)] = .{\n        .llvm_name = \"high-word\",\n        .description = \"Assume that the high-word facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.insert_reference_bits_multiple)] = .{\n        .llvm_name = \"insert-reference-bits-multiple\",\n        .description = \"Assume that the insert-reference-bits-multiple facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.interlocked_access1)] = .{\n        .llvm_name = \"interlocked-access1\",\n        .description = \"Assume that interlocked-access facility 1 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.load_and_trap)] = .{\n        .llvm_name = \"load-and-trap\",\n        .description = \"Assume that the load-and-trap facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.load_and_zero_rightmost_byte)] = .{\n        .llvm_name = \"load-and-zero-rightmost-byte\",\n        .description = \"Assume that the load-and-zero-rightmost-byte facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.load_store_on_cond)] = .{\n        .llvm_name = \"load-store-on-cond\",\n        .description = \"Assume that the load/store-on-condition facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.load_store_on_cond_2)] = .{\n        .llvm_name = \"load-store-on-cond-2\",\n        .description = \"Assume that the load/store-on-condition facility 2 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.message_security_assist_extension3)] = .{\n        .llvm_name = \"message-security-assist-extension3\",\n        .description = \"Assume that the message-security-assist extension facility 3 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.message_security_assist_extension4)] = .{\n        .llvm_name = \"message-security-assist-extension4\",\n        .description = \"Assume that the message-security-assist extension facility 4 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.message_security_assist_extension5)] = .{\n        .llvm_name = \"message-security-assist-extension5\",\n        .description = \"Assume that the message-security-assist extension facility 5 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.message_security_assist_extension7)] = .{\n        .llvm_name = \"message-security-assist-extension7\",\n        .description = \"Assume that the message-security-assist extension facility 7 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.message_security_assist_extension8)] = .{\n        .llvm_name = \"message-security-assist-extension8\",\n        .description = \"Assume that the message-security-assist extension facility 8 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.message_security_assist_extension9)] = .{\n        .llvm_name = \"message-security-assist-extension9\",\n        .description = \"Assume that the message-security-assist extension facility 9 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.miscellaneous_extensions)] = .{\n        .llvm_name = \"miscellaneous-extensions\",\n        .description = \"Assume that the miscellaneous-extensions facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.miscellaneous_extensions_2)] = .{\n        .llvm_name = \"miscellaneous-extensions-2\",\n        .description = \"Assume that the miscellaneous-extensions facility 2 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.miscellaneous_extensions_3)] = .{\n        .llvm_name = \"miscellaneous-extensions-3\",\n        .description = \"Assume that the miscellaneous-extensions facility 3 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.population_count)] = .{\n        .llvm_name = \"population-count\",\n        .description = \"Assume that the population-count facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.processor_assist)] = .{\n        .llvm_name = \"processor-assist\",\n        .description = \"Assume that the processor-assist facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.reset_reference_bits_multiple)] = .{\n        .llvm_name = \"reset-reference-bits-multiple\",\n        .description = \"Assume that the reset-reference-bits-multiple facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.soft_float)] = .{\n        .llvm_name = \"soft-float\",\n        .description = \"Use software emulation for floating point\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.transactional_execution)] = .{\n        .llvm_name = \"transactional-execution\",\n        .description = \"Assume that the transactional-execution facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.vector)] = .{\n        .llvm_name = \"vector\",\n        .description = \"Assume that the vectory facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.vector_enhancements_1)] = .{\n        .llvm_name = \"vector-enhancements-1\",\n        .description = \"Assume that the vector enhancements facility 1 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.vector_enhancements_2)] = .{\n        .llvm_name = \"vector-enhancements-2\",\n        .description = \"Assume that the vector enhancements facility 2 is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.vector_packed_decimal)] = .{\n        .llvm_name = \"vector-packed-decimal\",\n        .description = \"Assume that the vector packed decimal facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    result[@enumToInt(Feature.vector_packed_decimal_enhancement)] = .{\n        .llvm_name = \"vector-packed-decimal-enhancement\",\n        .description = \"Assume that the vector packed decimal enhancement facility is installed\",\n        .dependencies = featureSet(&[_]Feature{}),\n    };\n    const ti = @typeInfo(Feature);\n    for (result) |*elem, i| {\n        elem.index = i;\n        elem.name = ti.Enum.fields[i].name;\n    }\n    break :blk result;\n}","src":50,"more_decls":null}]