[{"pl":"pub const ZigTable = struct ","src":57,"more_decls":{"pl":"r: f64","src":58,"more_decls":null}{"pl":"x: [257]f64","src":59,"more_decls":null}{"pl":"f: [257]f64","src":60,"more_decls":null}{"pl":"pdf: fn (f64) f64","src":63,"more_decls":null}{"pl":"is_symmetric: bool","src":65,"more_decls":null}{"pl":"zero_case: fn (*Random, f64) f64","src":67,"more_decls":null}}{"pl":"fn next_f64(random: *Random, comptime tables: ZigTable) f64","src":19,"more_decls":null}{"pl":"const NormDist = blk: {\n    @setEvalBranchQuota(30000);\n    break :blk ZigTableGen(true, norm_r, norm_v, norm_f, norm_f_inv, norm_zero_case);\n}","src":103,"more_decls":null}{"pl":"const ExpDist = blk: {\n    @setEvalBranchQuota(30000);\n    break :blk ZigTableGen(false, exp_r, exp_v, exp_f, exp_f_inv, exp_zero_case);\n}","src":146,"more_decls":null}]