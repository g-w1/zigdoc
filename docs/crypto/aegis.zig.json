[{"doc_comment":"AEGIS is a very fast authenticated encryption system built on top of the core AES function.\n\nThe 128L variant of AEGIS has a 128 bit key, a 128 bit nonce, and processes 256 bit message blocks.\nIt was designed to fully exploit the parallelism and built-in AES support of recent Intel and ARM CPUs.\n\nhttps://competitions.cr.yp.to/round3/aegisv11.pdf","pl":"pub const Aegis128L = struct ","src":95,"more_decls":{"doc_comment":"c: ciphertext: output buffer should be of size m.len\ntag: authentication tag: output MAC\nm: message\nad: Associated Data\nnpub: public nonce\nk: private key","pl":"fn encrypt(c: []u8, tag: *[tag_length]u8, m: []const u8, ad: []const u8, npub: [nonce_length]u8, key: [key_length]u8) void","src":106,"more_decls":null}{"doc_comment":"m: message: output buffer should be of size c.len\nc: ciphertext\ntag: authentication tag\nad: Associated Data\nnpub: public nonce\nk: private key","pl":"fn decrypt(m: []u8, c: []const u8, tag: [tag_length]u8, ad: []const u8, npub: [nonce_length]u8, key: [key_length]u8) Error!void","src":139,"more_decls":null}{"pl":"const tag_length = 16","src":96,"more_decls":null}{"pl":"const nonce_length = 16","src":97,"more_decls":null}{"pl":"const key_length = 16","src":98,"more_decls":null}}{"doc_comment":"AEGIS is a very fast authenticated encryption system built on top of the core AES function.\n\nThe 256 bit variant of AEGIS has a 256 bit key, a 256 bit nonce, and processes 128 bit message blocks.\n\nhttps://competitions.cr.yp.to/round3/aegisv11.pdf","pl":"pub const Aegis256 = struct ","src":257,"more_decls":{"doc_comment":"c: ciphertext: output buffer should be of size m.len\ntag: authentication tag: output MAC\nm: message\nad: Associated Data\nnpub: public nonce\nk: private key","pl":"fn encrypt(c: []u8, tag: *[tag_length]u8, m: []const u8, ad: []const u8, npub: [nonce_length]u8, key: [key_length]u8) void","src":268,"more_decls":null}{"doc_comment":"m: message: output buffer should be of size c.len\nc: ciphertext\ntag: authentication tag\nad: Associated Data\nnpub: public nonce\nk: private key","pl":"fn decrypt(m: []u8, c: []const u8, tag: [tag_length]u8, ad: []const u8, npub: [nonce_length]u8, key: [key_length]u8) Error!void","src":301,"more_decls":null}{"pl":"const tag_length = 16","src":258,"more_decls":null}{"pl":"const nonce_length = 32","src":259,"more_decls":null}{"pl":"const key_length = 32","src":260,"more_decls":null}}]