[{"pl":"pub const sha2 = struct ","src":13,"more_decls":{"pl":"const HmacSha224 = Hmac(crypto.hash.sha2.Sha224)","src":14,"more_decls":null}{"pl":"const HmacSha256 = Hmac(crypto.hash.sha2.Sha256)","src":15,"more_decls":null}{"pl":"const HmacSha384 = Hmac(crypto.hash.sha2.Sha384)","src":16,"more_decls":null}{"pl":"const HmacSha512 = Hmac(crypto.hash.sha2.Sha512)","src":17,"more_decls":null}}{"pl":"fn Hmac(comptime Hash: type) type","sub_container_type":"struct ","src":20,"more_decls":{"pl":"o_key_pad: [Hash.block_length]u8","src":27,"more_decls":null}{"pl":"hash: Hash","src":28,"more_decls":null}{"pl":"pub fn create(out: *[mac_length]u8, msg: []const u8, key: []const u8) void {\n    var ctx = Self.init(key);\n    ctx.update(msg);\n    ctx.final(out);\n}","src":31,"more_decls":null}{"pl":"fn init(key: []const u8) Self","src":37,"more_decls":null}{"pl":"pub fn update(ctx: *Self, msg: []const u8) void {\n    ctx.hash.update(msg);\n}","src":66,"more_decls":null}{"pl":"fn final(ctx: *Self, out: *[mac_length]u8) void","src":70,"more_decls":null}{"pl":"const mac_length = Hash.digest_length","src":23,"more_decls":null}{"pl":"const key_length_min = 0","src":24,"more_decls":null}{"pl":"const key_length = 32","src":25,"more_decls":null}}{"pl":"const HmacMd5 = Hmac(crypto.hash.Md5)","src":10,"more_decls":null}{"pl":"const HmacSha1 = Hmac(crypto.hash.Sha1)","src":11,"more_decls":null}]