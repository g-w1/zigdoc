[{"doc_comment":"The Hkdf construction takes some source of initial keying material and\nderives one or more uniform keys from it.","pl":"fn Hkdf(comptime Hmac: type) type","sub_container_type":"struct ","src":19,"more_decls":{"doc_comment":"Return a master key from a salt and initial keying material.","pl":"pub fn extract(salt: []const u8, ikm: []const u8) [Hmac.mac_length]u8 {\n    var prk: [Hmac.mac_length]u8 = undefined;\n    Hmac.create(&prk, ikm, salt);\n    return prk;\n}","src":22,"more_decls":null}{"doc_comment":"Derive a subkey from a master key `prk` and a subkey description `ctx`.","pl":"fn expand(out: []u8, ctx: []const u8, prk: [Hmac.mac_length]u8) void","src":29,"more_decls":null}}{"doc_comment":"HKDF-SHA256","pl":"const HkdfSha256 = Hkdf(hmac.sha2.HmacSha256)","src":12,"more_decls":null}{"doc_comment":"HKDF-SHA512","pl":"const HkdfSha512 = Hkdf(hmac.sha2.HmacSha512)","src":15,"more_decls":null}]