[{"doc_comment":"Returns whether x is a nan.","pl":"pub fn isNan(x: anytype) bool {\n    return x != x;\n}","src":11,"more_decls":null}{"doc_comment":"Returns whether x is a signalling nan.","pl":"pub fn isSignalNan(x: anytype) bool {\n    // Note: A signalling nan is identical to a standard nan right now but may have a different bit\n    // representation in the future when required.\n    return isNan(x);\n}","src":16,"more_decls":null}]