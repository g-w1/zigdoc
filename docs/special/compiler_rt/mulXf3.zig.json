[{"pl":"pub fn __multf3(a: f128, b: f128) callconv(.C) f128 {\n    return mulXf3(f128, a, b);\n}","src":13,"more_decls":null}{"pl":"pub fn __muldf3(a: f64, b: f64) callconv(.C) f64 {\n    return mulXf3(f64, a, b);\n}","src":16,"more_decls":null}{"pl":"pub fn __mulsf3(a: f32, b: f32) callconv(.C) f32 {\n    return mulXf3(f32, a, b);\n}","src":19,"more_decls":null}{"pl":"pub fn __aeabi_fmul(a: f32, b: f32) callconv(.C) f32 {\n    @setRuntimeSafety(false);\n    return @call(.{ .modifier = .always_inline }, __mulsf3, .{ a, b });\n}","src":23,"more_decls":null}{"pl":"pub fn __aeabi_dmul(a: f64, b: f64) callconv(.C) f64 {\n    @setRuntimeSafety(false);\n    return @call(.{ .modifier = .always_inline }, __muldf3, .{ a, b });\n}","src":28,"more_decls":null}]