[{"pl":"pub fn __addsf3(a: f32, b: f32) callconv(.C) f32 {\n    return addXf3(f32, a, b);\n}","src":13,"more_decls":null}{"pl":"pub fn __adddf3(a: f64, b: f64) callconv(.C) f64 {\n    return addXf3(f64, a, b);\n}","src":17,"more_decls":null}{"pl":"pub fn __addtf3(a: f128, b: f128) callconv(.C) f128 {\n    return addXf3(f128, a, b);\n}","src":21,"more_decls":null}{"pl":"pub fn __subsf3(a: f32, b: f32) callconv(.C) f32 {\n    const neg_b = @bitCast(f32, @bitCast(u32, b) ^ (@as(u32, 1) << 31));\n    return addXf3(f32, a, neg_b);\n}","src":25,"more_decls":null}{"pl":"pub fn __subdf3(a: f64, b: f64) callconv(.C) f64 {\n    const neg_b = @bitCast(f64, @bitCast(u64, b) ^ (@as(u64, 1) << 63));\n    return addXf3(f64, a, neg_b);\n}","src":30,"more_decls":null}{"pl":"pub fn __subtf3(a: f128, b: f128) callconv(.C) f128 {\n    const neg_b = @bitCast(f128, @bitCast(u128, b) ^ (@as(u128, 1) << 127));\n    return addXf3(f128, a, neg_b);\n}","src":35,"more_decls":null}{"pl":"pub fn __aeabi_fadd(a: f32, b: f32) callconv(.AAPCS) f32 {\n    @setRuntimeSafety(false);\n    return @call(.{ .modifier = .always_inline }, __addsf3, .{ a, b });\n}","src":40,"more_decls":null}{"pl":"pub fn __aeabi_dadd(a: f64, b: f64) callconv(.AAPCS) f64 {\n    @setRuntimeSafety(false);\n    return @call(.{ .modifier = .always_inline }, __adddf3, .{ a, b });\n}","src":45,"more_decls":null}{"pl":"pub fn __aeabi_fsub(a: f32, b: f32) callconv(.AAPCS) f32 {\n    @setRuntimeSafety(false);\n    return @call(.{ .modifier = .always_inline }, __subsf3, .{ a, b });\n}","src":50,"more_decls":null}{"pl":"pub fn __aeabi_dsub(a: f64, b: f64) callconv(.AAPCS) f64 {\n    @setRuntimeSafety(false);\n    return @call(.{ .modifier = .always_inline }, __subdf3, .{ a, b });\n}","src":55,"more_decls":null}]