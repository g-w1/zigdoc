[{"pl":"pub const Options = struct ","src":19,"more_decls":{"doc_comment":"Warning or error","pl":"warn_as_err: union(enum) {\n        /// All warnings are warnings\n        None,\n\n        /// Some warnings are errors\n        Some: []std.meta.Tag(ast.Error),\n\n        /// All warnings are errors\n        All,\n    } = .All","src":23,"more_decls":null}}{"doc_comment":"Result should be freed with tree.deinit() when there are\nno more references to any of the tokens or nodes.","pl":"fn parse(allocator: *Allocator, source: []const u8, options: Options) !*Tree","src":37,"more_decls":null}{"pl":"const Error = error{ParseError} || Allocator.Error","src":17,"more_decls":null}]