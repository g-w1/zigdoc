[{"doc_comment":"Many producer, many consumer, thread-safe, runtime configurable buffer size.\nWhen buffer is empty, consumers suspend and are resumed by producers.\nWhen buffer is full, producers suspend and are resumed by consumers.","pl":"fn Channel(comptime T: type) type","sub_container_type":"struct ","src":14,"more_decls":{"pl":"getters: std.atomic.Queue(GetNode)","src":16,"more_decls":null}{"pl":"or_null_queue: std.atomic.Queue(*std.atomic.Queue(GetNode).Node)","src":17,"more_decls":null}{"pl":"putters: std.atomic.Queue(PutNode)","src":18,"more_decls":null}{"pl":"get_count: usize","src":19,"more_decls":null}{"pl":"put_count: usize","src":20,"more_decls":null}{"pl":"dispatch_lock: bool","src":21,"more_decls":null}{"pl":"need_dispatch: bool","src":22,"more_decls":null}{"pl":"buffer_nodes: []T","src":25,"more_decls":null}{"pl":"buffer_index: usize","src":26,"more_decls":null}{"pl":"buffer_len: usize","src":27,"more_decls":null}{"doc_comment":"Call `deinit` to free resources when done.\n`buffer` must live until `deinit` is called.\nFor a zero length buffer, use `[0]T{}`.\nTODO https://github.com/ziglang/zig/issues/2765","pl":"fn init(self: *SelfChannel, buffer: []T) void","src":60,"more_decls":null}{"doc_comment":"Must be called when all calls to put and get have suspended and no more calls occur.\nThis can be omitted if caller can guarantee that the suspended putters and getters\ndo not need to be run to completion. Note that this may leave awaiters hanging.","pl":"fn deinit(self: *SelfChannel) void","src":82,"more_decls":null}{"doc_comment":"puts a data item in the channel. The function returns when the value has been added to the\nbuffer, or in the case of a zero size buffer, when the item has been retrieved by a getter.\nOr when the channel is destroyed.","pl":"fn put(self: *SelfChannel, data: T) void","src":95,"more_decls":null}{"doc_comment":"await this function to get an item from the channel. If the buffer is empty, the frame will\ncomplete when the next item is put in the channel.","pl":"fn get(self: *SelfChannel) callconv(.Async) T","src":114,"more_decls":null}{"doc_comment":"Get an item from the channel. If the buffer is empty and there are no\nputs waiting, this returns `null`.","pl":"fn getOrNull(self: *SelfChannel) ?T","src":147,"more_decls":null}}]