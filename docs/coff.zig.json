[{"pl":"pub const MachineType = enum","src":20,"more_decls":{"pl":"Unknown = 0x0","src":21,"more_decls":null}{"doc_comment":"Matsushita AM33","pl":"AM33 = 0x1d3","src":23,"more_decls":null}{"doc_comment":"x64","pl":"X64 = 0x8664","src":25,"more_decls":null}{"doc_comment":"ARM little endian","pl":"ARM = 0x1c0","src":27,"more_decls":null}{"doc_comment":"ARM64 little endian","pl":"ARM64 = 0xaa64","src":29,"more_decls":null}{"doc_comment":"ARM Thumb-2 little endian","pl":"ARMNT = 0x1c4","src":31,"more_decls":null}{"doc_comment":"EFI byte code","pl":"EBC = 0xebc","src":33,"more_decls":null}{"doc_comment":"Intel 386 or later processors and compatible processors","pl":"I386 = 0x14c","src":35,"more_decls":null}{"doc_comment":"Intel Itanium processor family","pl":"IA64 = 0x200","src":37,"more_decls":null}{"doc_comment":"Mitsubishi M32R little endian","pl":"M32R = 0x9041","src":39,"more_decls":null}{"doc_comment":"MIPS16","pl":"MIPS16 = 0x266","src":41,"more_decls":null}{"doc_comment":"MIPS with FPU","pl":"MIPSFPU = 0x366","src":43,"more_decls":null}{"doc_comment":"MIPS16 with FPU","pl":"MIPSFPU16 = 0x466","src":45,"more_decls":null}{"doc_comment":"Power PC little endian","pl":"POWERPC = 0x1f0","src":47,"more_decls":null}{"doc_comment":"Power PC with floating point support","pl":"POWERPCFP = 0x1f1","src":49,"more_decls":null}{"doc_comment":"MIPS little endian","pl":"R4000 = 0x166","src":51,"more_decls":null}{"doc_comment":"RISC-V 32-bit address space","pl":"RISCV32 = 0x5032","src":53,"more_decls":null}{"doc_comment":"RISC-V 64-bit address space","pl":"RISCV64 = 0x5064","src":55,"more_decls":null}{"doc_comment":"RISC-V 128-bit address space","pl":"RISCV128 = 0x5128","src":57,"more_decls":null}{"doc_comment":"Hitachi SH3","pl":"SH3 = 0x1a2","src":59,"more_decls":null}{"doc_comment":"Hitachi SH3 DSP","pl":"SH3DSP = 0x1a3","src":61,"more_decls":null}{"doc_comment":"Hitachi SH4","pl":"SH4 = 0x1a6","src":63,"more_decls":null}{"doc_comment":"Hitachi SH5","pl":"SH5 = 0x1a8","src":65,"more_decls":null}{"doc_comment":"Thumb","pl":"Thumb = 0x1c2","src":67,"more_decls":null}{"doc_comment":"MIPS little-endian WCE v2","pl":"WCEMIPSV2 = 0x169","src":69,"more_decls":null}}{"pl":"pub const Coff = struct ","src":103,"more_decls":{"pl":"in_file: File","src":104,"more_decls":null}{"pl":"allocator: *mem.Allocator","src":105,"more_decls":null}{"pl":"coff_header: CoffHeader","src":107,"more_decls":null}{"pl":"pe_header: OptionalHeader","src":108,"more_decls":null}{"pl":"sections: ArrayList(Section)","src":109,"more_decls":null}{"pl":"guid: [16]u8","src":111,"more_decls":null}{"pl":"age: u32","src":112,"more_decls":null}{"pl":"fn init(allocator: *mem.Allocator, in_file: File) Coff","src":114,"more_decls":null}{"pl":"fn loadHeader(self: *Coff) !void","src":126,"more_decls":null}{"pl":"fn getPdbPath(self: *Coff, buffer: []u8) !usize","src":191,"more_decls":null}{"pl":"fn loadSections(self: *Coff) !void","src":252,"more_decls":null}{"pl":"fn getSection(self: *Coff, comptime name: []const u8) ?*Section","src":282,"more_decls":null}}{"pl":"pub const Section = struct ","src":323,"more_decls":{"pl":"header: SectionHeader","src":324,"more_decls":null}}{"pl":"const IMAGE_FILE_RELOCS_STRIPPED = 0x1","src":78,"more_decls":null}{"pl":"const IMAGE_FILE_DEBUG_STRIPPED = 0x200","src":79,"more_decls":null}{"pl":"const IMAGE_FILE_EXECUTABLE_IMAGE = 0x2","src":80,"more_decls":null}{"pl":"const IMAGE_FILE_32BIT_MACHINE = 0x100","src":81,"more_decls":null}{"pl":"const IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x20","src":82,"more_decls":null}{"pl":"const IMAGE_SCN_CNT_INITIALIZED_DATA = 0x40","src":85,"more_decls":null}{"pl":"const IMAGE_SCN_MEM_READ = 0x40000000","src":86,"more_decls":null}{"pl":"const IMAGE_SCN_CNT_CODE = 0x20","src":87,"more_decls":null}{"pl":"const IMAGE_SCN_MEM_EXECUTE = 0x20000000","src":88,"more_decls":null}{"pl":"const IMAGE_SCN_MEM_WRITE = 0x80000000","src":89,"more_decls":null}{"pl":"const CoffError = error{\n    InvalidPEMagic,\n    InvalidPEHeader,\n    InvalidMachine,\n    MissingCoffSection,\n}","src":95,"more_decls":null}]