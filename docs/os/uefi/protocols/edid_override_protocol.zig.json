[{"doc_comment":"Override EDID information","pl":"pub const EdidOverrideProtocol = extern struct ","src":11,"more_decls":{"pl":"_get_edid: fn (*const EdidOverrideProtocol, Handle, *u32, *usize, *?[*]u8) callconv(.C) Status","src":12,"more_decls":null}{"doc_comment":"Returns policy information and potentially a replacement EDID for the specified video output device.\nattributes must be align(4)","pl":"pub fn getEdid(self: *const EdidOverrideProtocol, handle: Handle, attributes: *EdidOverrideProtocolAttributes, edid_size: *usize, edid: *?[*]u8) Status {\n    return self._get_edid(self, handle, attributes, edid_size, edid);\n}","src":16,"more_decls":null}{"pl":"const guid align(8) = Guid{\n        .time_low = 0x48ecb431,\n        .time_mid = 0xfb72,\n        .time_high_and_version = 0x45c0,\n        .clock_seq_high_and_reserved = 0xa9,\n        .clock_seq_low = 0x22,\n        .node = [_]u8{ 0xf4, 0x58, 0xfe, 0x04, 0x0b, 0xd5 },\n    }","src":20,"more_decls":null}}{"pl":"pub const EdidOverrideProtocolAttributes = packed struct ","src":30,"more_decls":{"pl":"dont_override: bool","src":31,"more_decls":null}{"pl":"enable_hot_plug: bool","src":32,"more_decls":null}{"pl":"_pad1: u30","src":33,"more_decls":null}}]