[{"doc_comment":"Character output devices","pl":"pub const SimpleTextOutputProtocol = extern struct ","src":10,"more_decls":{"pl":"_reset: fn (*const SimpleTextOutputProtocol, bool) callconv(.C) Status","src":11,"more_decls":null}{"pl":"_output_string: fn (*const SimpleTextOutputProtocol, [*:0]const u16) callconv(.C) Status","src":12,"more_decls":null}{"pl":"_test_string: fn (*const SimpleTextOutputProtocol, [*:0]const u16) callconv(.C) Status","src":13,"more_decls":null}{"pl":"_query_mode: fn (*const SimpleTextOutputProtocol, usize, *usize, *usize) callconv(.C) Status","src":14,"more_decls":null}{"pl":"_set_mode: fn (*const SimpleTextOutputProtocol, usize) callconv(.C) Status","src":15,"more_decls":null}{"pl":"_set_attribute: fn (*const SimpleTextOutputProtocol, usize) callconv(.C) Status","src":16,"more_decls":null}{"pl":"_clear_screen: fn (*const SimpleTextOutputProtocol) callconv(.C) Status","src":17,"more_decls":null}{"pl":"_set_cursor_position: fn (*const SimpleTextOutputProtocol, usize, usize) callconv(.C) Status","src":18,"more_decls":null}{"pl":"_enable_cursor: fn (*const SimpleTextOutputProtocol, bool) callconv(.C) Status","src":19,"more_decls":null}{"pl":"mode: *SimpleTextOutputMode","src":20,"more_decls":null}{"doc_comment":"Resets the text output device hardware.","pl":"pub fn reset(self: *const SimpleTextOutputProtocol, verify: bool) Status {\n    return self._reset(self, verify);\n}","src":23,"more_decls":null}{"doc_comment":"Writes a string to the output device.","pl":"pub fn outputString(self: *const SimpleTextOutputProtocol, msg: [*:0]const u16) Status {\n    return self._output_string(self, msg);\n}","src":28,"more_decls":null}{"doc_comment":"Verifies that all characters in a string can be output to the target device.","pl":"pub fn testString(self: *const SimpleTextOutputProtocol, msg: [*:0]const u16) Status {\n    return self._test_string(self, msg);\n}","src":33,"more_decls":null}{"doc_comment":"Returns information for an available text mode that the output device(s) supports.","pl":"pub fn queryMode(self: *const SimpleTextOutputProtocol, mode_number: usize, columns: *usize, rows: *usize) Status {\n    return self._query_mode(self, mode_number, columns, rows);\n}","src":38,"more_decls":null}{"doc_comment":"Sets the output device(s) to a specified mode.","pl":"pub fn setMode(self: *const SimpleTextOutputProtocol, mode_number: usize) Status {\n    return self._set_mode(self, mode_number);\n}","src":43,"more_decls":null}{"doc_comment":"Sets the background and foreground colors for the outputString() and clearScreen() functions.","pl":"pub fn setAttribute(self: *const SimpleTextOutputProtocol, attribute: usize) Status {\n    return self._set_attribute(self, attribute);\n}","src":48,"more_decls":null}{"doc_comment":"Clears the output device(s) display to the currently selected background color.","pl":"pub fn clearScreen(self: *const SimpleTextOutputProtocol) Status {\n    return self._clear_screen(self);\n}","src":53,"more_decls":null}{"doc_comment":"Sets the current coordinates of the cursor position.","pl":"pub fn setCursorPosition(self: *const SimpleTextOutputProtocol, column: usize, row: usize) Status {\n    return self._set_cursor_position(self, column, row);\n}","src":58,"more_decls":null}{"doc_comment":"Makes the cursor visible or invisible.","pl":"pub fn enableCursor(self: *const SimpleTextOutputProtocol, visible: bool) Status {\n    return self._enable_cursor(self, visible);\n}","src":63,"more_decls":null}{"pl":"const guid align(8) = Guid{\n        .time_low = 0x387477c2,\n        .time_mid = 0x69c7,\n        .time_high_and_version = 0x11d2,\n        .clock_seq_high_and_reserved = 0x8e,\n        .clock_seq_low = 0x39,\n        .node = [_]u8{ 0x00, 0xa0, 0xc9, 0x69, 0x72, 0x3b },\n    }","src":67,"more_decls":null}{"pl":"const boxdraw_horizontal: u16 = 0x2500","src":75,"more_decls":null}{"pl":"const boxdraw_vertical: u16 = 0x2502","src":76,"more_decls":null}{"pl":"const boxdraw_down_right: u16 = 0x250c","src":77,"more_decls":null}{"pl":"const boxdraw_down_left: u16 = 0x2510","src":78,"more_decls":null}{"pl":"const boxdraw_up_right: u16 = 0x2514","src":79,"more_decls":null}{"pl":"const boxdraw_up_left: u16 = 0x2518","src":80,"more_decls":null}{"pl":"const boxdraw_vertical_right: u16 = 0x251c","src":81,"more_decls":null}{"pl":"const boxdraw_vertical_left: u16 = 0x2524","src":82,"more_decls":null}{"pl":"const boxdraw_down_horizontal: u16 = 0x252c","src":83,"more_decls":null}{"pl":"const boxdraw_up_horizontal: u16 = 0x2534","src":84,"more_decls":null}{"pl":"const boxdraw_vertical_horizontal: u16 = 0x253c","src":85,"more_decls":null}{"pl":"const boxdraw_double_horizontal: u16 = 0x2550","src":86,"more_decls":null}{"pl":"const boxdraw_double_vertical: u16 = 0x2551","src":87,"more_decls":null}{"pl":"const boxdraw_down_right_double: u16 = 0x2552","src":88,"more_decls":null}{"pl":"const boxdraw_down_double_right: u16 = 0x2553","src":89,"more_decls":null}{"pl":"const boxdraw_double_down_right: u16 = 0x2554","src":90,"more_decls":null}{"pl":"const boxdraw_down_left_double: u16 = 0x2555","src":91,"more_decls":null}{"pl":"const boxdraw_down_double_left: u16 = 0x2556","src":92,"more_decls":null}{"pl":"const boxdraw_double_down_left: u16 = 0x2557","src":93,"more_decls":null}{"pl":"const boxdraw_up_right_double: u16 = 0x2558","src":94,"more_decls":null}{"pl":"const boxdraw_up_double_right: u16 = 0x2559","src":95,"more_decls":null}{"pl":"const boxdraw_double_up_right: u16 = 0x255a","src":96,"more_decls":null}{"pl":"const boxdraw_up_left_double: u16 = 0x255b","src":97,"more_decls":null}{"pl":"const boxdraw_up_double_left: u16 = 0x255c","src":98,"more_decls":null}{"pl":"const boxdraw_double_up_left: u16 = 0x255d","src":99,"more_decls":null}{"pl":"const boxdraw_vertical_right_double: u16 = 0x255e","src":100,"more_decls":null}{"pl":"const boxdraw_vertical_double_right: u16 = 0x255f","src":101,"more_decls":null}{"pl":"const boxdraw_double_vertical_right: u16 = 0x2560","src":102,"more_decls":null}{"pl":"const boxdraw_vertical_left_double: u16 = 0x2561","src":103,"more_decls":null}{"pl":"const boxdraw_vertical_double_left: u16 = 0x2562","src":104,"more_decls":null}{"pl":"const boxdraw_double_vertical_left: u16 = 0x2563","src":105,"more_decls":null}{"pl":"const boxdraw_down_horizontal_double: u16 = 0x2564","src":106,"more_decls":null}{"pl":"const boxdraw_down_double_horizontal: u16 = 0x2565","src":107,"more_decls":null}{"pl":"const boxdraw_double_down_horizontal: u16 = 0x2566","src":108,"more_decls":null}{"pl":"const boxdraw_up_horizontal_double: u16 = 0x2567","src":109,"more_decls":null}{"pl":"const boxdraw_up_double_horizontal: u16 = 0x2568","src":110,"more_decls":null}{"pl":"const boxdraw_double_up_horizontal: u16 = 0x2569","src":111,"more_decls":null}{"pl":"const boxdraw_vertical_horizontal_double: u16 = 0x256a","src":112,"more_decls":null}{"pl":"const boxdraw_vertical_double_horizontal: u16 = 0x256b","src":113,"more_decls":null}{"pl":"const boxdraw_double_vertical_horizontal: u16 = 0x256c","src":114,"more_decls":null}{"pl":"const blockelement_full_block: u16 = 0x2588","src":115,"more_decls":null}{"pl":"const blockelement_light_shade: u16 = 0x2591","src":116,"more_decls":null}{"pl":"const geometricshape_up_triangle: u16 = 0x25b2","src":117,"more_decls":null}{"pl":"const geometricshape_right_triangle: u16 = 0x25ba","src":118,"more_decls":null}{"pl":"const geometricshape_down_triangle: u16 = 0x25bc","src":119,"more_decls":null}{"pl":"const geometricshape_left_triangle: u16 = 0x25c4","src":120,"more_decls":null}{"pl":"const arrow_up: u16 = 0x2591","src":121,"more_decls":null}{"pl":"const arrow_down: u16 = 0x2593","src":122,"more_decls":null}{"pl":"const black: u8 = 0x00","src":123,"more_decls":null}{"pl":"const blue: u8 = 0x01","src":124,"more_decls":null}{"pl":"const green: u8 = 0x02","src":125,"more_decls":null}{"pl":"const cyan: u8 = 0x03","src":126,"more_decls":null}{"pl":"const red: u8 = 0x04","src":127,"more_decls":null}{"pl":"const magenta: u8 = 0x05","src":128,"more_decls":null}{"pl":"const brown: u8 = 0x06","src":129,"more_decls":null}{"pl":"const lightgray: u8 = 0x07","src":130,"more_decls":null}{"pl":"const bright: u8 = 0x08","src":131,"more_decls":null}{"pl":"const darkgray: u8 = 0x08","src":132,"more_decls":null}{"pl":"const lightblue: u8 = 0x09","src":133,"more_decls":null}{"pl":"const lightgreen: u8 = 0x0a","src":134,"more_decls":null}{"pl":"const lightcyan: u8 = 0x0b","src":135,"more_decls":null}{"pl":"const lightred: u8 = 0x0c","src":136,"more_decls":null}{"pl":"const lightmagenta: u8 = 0x0d","src":137,"more_decls":null}{"pl":"const yellow: u8 = 0x0e","src":138,"more_decls":null}{"pl":"const white: u8 = 0x0f","src":139,"more_decls":null}{"pl":"const background_black: u8 = 0x00","src":140,"more_decls":null}{"pl":"const background_blue: u8 = 0x10","src":141,"more_decls":null}{"pl":"const background_green: u8 = 0x20","src":142,"more_decls":null}{"pl":"const background_cyan: u8 = 0x30","src":143,"more_decls":null}{"pl":"const background_red: u8 = 0x40","src":144,"more_decls":null}{"pl":"const background_magenta: u8 = 0x50","src":145,"more_decls":null}{"pl":"const background_brown: u8 = 0x60","src":146,"more_decls":null}{"pl":"const background_lightgray: u8 = 0x70","src":147,"more_decls":null}}{"pl":"pub const SimpleTextOutputMode = extern struct ","src":150,"more_decls":{"pl":"max_mode: u32","src":151,"more_decls":null}{"pl":"mode: u32","src":152,"more_decls":null}{"pl":"attribute: i32","src":153,"more_decls":null}{"pl":"cursor_column: i32","src":154,"more_decls":null}{"pl":"cursor_row: i32","src":155,"more_decls":null}{"pl":"cursor_visible: bool","src":156,"more_decls":null}}]