[{"pl":"pub const FileProtocol = extern struct ","src":10,"more_decls":{"pl":"revision: u64","src":11,"more_decls":null}{"pl":"_open: fn (*const FileProtocol, **const FileProtocol, [*:0]const u16, u64, u64) callconv(.C) Status","src":12,"more_decls":null}{"pl":"_close: fn (*const FileProtocol) callconv(.C) Status","src":13,"more_decls":null}{"pl":"_delete: fn (*const FileProtocol) callconv(.C) Status","src":14,"more_decls":null}{"pl":"_read: fn (*const FileProtocol, *usize, [*]u8) callconv(.C) Status","src":15,"more_decls":null}{"pl":"_write: fn (*const FileProtocol, *usize, [*]const u8) callconv(.C) Status","src":16,"more_decls":null}{"pl":"_get_position: fn (*const FileProtocol, *u64) callconv(.C) Status","src":17,"more_decls":null}{"pl":"_set_position: fn (*const FileProtocol, u64) callconv(.C) Status","src":18,"more_decls":null}{"pl":"_get_info: fn (*const FileProtocol, *align(8) const Guid, *const usize, [*]u8) callconv(.C) Status","src":19,"more_decls":null}{"pl":"_set_info: fn (*const FileProtocol, *align(8) const Guid, usize, [*]const u8) callconv(.C) Status","src":20,"more_decls":null}{"pl":"_flush: fn (*const FileProtocol) callconv(.C) Status","src":21,"more_decls":null}{"pl":"pub fn open(self: *const FileProtocol, new_handle: **const FileProtocol, file_name: [*:0]const u16, open_mode: u64, attributes: u64) Status {\n    return self._open(self, new_handle, file_name, open_mode, attributes);\n}","src":23,"more_decls":null}{"pl":"pub fn close(self: *const FileProtocol) Status {\n    return self._close(self);\n}","src":27,"more_decls":null}{"pl":"pub fn delete(self: *const FileProtocol) Status {\n    return self._delete(self);\n}","src":31,"more_decls":null}{"pl":"pub fn read(self: *const FileProtocol, buffer_size: *usize, buffer: [*]u8) Status {\n    return self._read(self, buffer_size, buffer);\n}","src":35,"more_decls":null}{"pl":"pub fn write(self: *const FileProtocol, buffer_size: *usize, buffer: [*]const u8) Status {\n    return self._write(self, buffer_size, buffer);\n}","src":39,"more_decls":null}{"pl":"pub fn getPosition(self: *const FileProtocol, position: *u64) Status {\n    return self._get_position(self, position);\n}","src":43,"more_decls":null}{"pl":"pub fn setPosition(self: *const FileProtocol, position: u64) Status {\n    return self._set_position(self, position);\n}","src":47,"more_decls":null}{"pl":"pub fn getInfo(self: *const FileProtocol, information_type: *align(8) Guid, buffer_size: *usize, buffer: [*]u8) Status {\n    return self._get_info(self, information_type, buffer_size, buffer);\n}","src":51,"more_decls":null}{"pl":"pub fn setInfo(self: *const FileProtocol, information_type: *align(8) Guid, buffer_size: usize, buffer: [*]const u8) Status {\n    return self._set_info(self, information_type, buffer_size, buffer);\n}","src":55,"more_decls":null}{"pl":"pub fn flush(self: *const FileProtocol) Status {\n    return self._flush(self);\n}","src":59,"more_decls":null}{"pl":"const guid align(8) = Guid{\n        .time_low = 0x09576e92,\n        .time_mid = 0x6d3f,\n        .time_high_and_version = 0x11d2,\n        .clock_seq_high_and_reserved = 0x8e,\n        .clock_seq_low = 0x39,\n        .node = [_]u8{ 0x00, 0xa0, 0xc9, 0x69, 0x72, 0x3b },\n    }","src":63,"more_decls":null}{"pl":"const efi_file_mode_read: u64 = 0x0000000000000001","src":72,"more_decls":null}{"pl":"const efi_file_mode_write: u64 = 0x0000000000000002","src":73,"more_decls":null}{"pl":"const efi_file_mode_create: u64 = 0x8000000000000000","src":74,"more_decls":null}{"pl":"const efi_file_read_only: u64 = 0x0000000000000001","src":76,"more_decls":null}{"pl":"const efi_file_hidden: u64 = 0x0000000000000002","src":77,"more_decls":null}{"pl":"const efi_file_system: u64 = 0x0000000000000004","src":78,"more_decls":null}{"pl":"const efi_file_reserved: u64 = 0x0000000000000008","src":79,"more_decls":null}{"pl":"const efi_file_directory: u64 = 0x0000000000000010","src":80,"more_decls":null}{"pl":"const efi_file_archive: u64 = 0x0000000000000020","src":81,"more_decls":null}{"pl":"const efi_file_valid_attr: u64 = 0x0000000000000037","src":82,"more_decls":null}{"pl":"const efi_file_position_end_of_file: u64 = 0xffffffffffffffff","src":84,"more_decls":null}}{"pl":"pub const FileInfo = extern struct ","src":87,"more_decls":{"pl":"size: u64","src":88,"more_decls":null}{"pl":"file_size: u64","src":89,"more_decls":null}{"pl":"physical_size: u64","src":90,"more_decls":null}{"pl":"create_time: Time","src":91,"more_decls":null}{"pl":"last_access_time: Time","src":92,"more_decls":null}{"pl":"modification_time: Time","src":93,"more_decls":null}{"pl":"attribute: u64","src":94,"more_decls":null}{"pl":"pub fn getFileName(self: *const FileInfo) [*:0]const u16 {\n    return @ptrCast([*:0]const u16, @ptrCast([*]const u8, self) + @sizeOf(FileInfo));\n}","src":96,"more_decls":null}{"pl":"const efi_file_read_only: u64 = 0x0000000000000001","src":100,"more_decls":null}{"pl":"const efi_file_hidden: u64 = 0x0000000000000002","src":101,"more_decls":null}{"pl":"const efi_file_system: u64 = 0x0000000000000004","src":102,"more_decls":null}{"pl":"const efi_file_reserved: u64 = 0x0000000000000008","src":103,"more_decls":null}{"pl":"const efi_file_directory: u64 = 0x0000000000000010","src":104,"more_decls":null}{"pl":"const efi_file_archive: u64 = 0x0000000000000020","src":105,"more_decls":null}{"pl":"const efi_file_valid_attr: u64 = 0x0000000000000037","src":106,"more_decls":null}}]