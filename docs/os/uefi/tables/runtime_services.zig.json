[{"doc_comment":"Runtime services are provided by the firmware before and after exitBootServices has been called.\n\nAs the runtime_services table may grow with new UEFI versions, it is important to check hdr.header_size.\n\nSome functions may not be supported. Check the RuntimeServicesSupported variable using getVariable.\ngetVariable is one of the functions that may not be supported.\n\nSome functions may not be called while other functions are running.","pl":"pub const RuntimeServices = extern struct ","src":20,"more_decls":{"pl":"hdr: TableHeader","src":21,"more_decls":null}{"doc_comment":"Returns the current time and date information, and the time-keeping capabilities of the hardware platform.","pl":"getTime: fn (*uefi.Time, ?*TimeCapabilities) callconv(.C) Status","src":24,"more_decls":null}{"pl":"setTime: Status","src":26,"more_decls":null}{"pl":"getWakeupTime: Status","src":27,"more_decls":null}{"pl":"setWakeupTime: Status","src":28,"more_decls":null}{"pl":"setVirtualAddressMap: Status","src":29,"more_decls":null}{"pl":"convertPointer: Status","src":30,"more_decls":null}{"doc_comment":"Returns the value of a variable.","pl":"getVariable: fn ([*:0]const u16, *align(8) const Guid, ?*u32, *usize, ?*c_void) callconv(.C) Status","src":33,"more_decls":null}{"doc_comment":"Enumerates the current variable names.","pl":"getNextVariableName: fn (*usize, [*:0]u16, *align(8) Guid) callconv(.C) Status","src":36,"more_decls":null}{"doc_comment":"Sets the value of a variable.","pl":"setVariable: fn ([*:0]const u16, *align(8) const Guid, u32, usize, *c_void) callconv(.C) Status","src":39,"more_decls":null}{"pl":"getNextHighMonotonicCount: Status","src":41,"more_decls":null}{"doc_comment":"Resets the entire platform.","pl":"resetSystem: fn (ResetType, Status, usize, ?*const c_void) callconv(.C) noreturn","src":44,"more_decls":null}{"pl":"updateCapsule: Status","src":46,"more_decls":null}{"pl":"queryCapsuleCapabilities: Status","src":47,"more_decls":null}{"pl":"queryVariableInfo: Status","src":48,"more_decls":null}{"pl":"const signature: u64 = 0x56524553544e5552","src":50,"more_decls":null}}{"pl":"pub const ResetType = extern enum","src":53,"more_decls":{"pl":"ResetCold","src":54,"more_decls":null}{"pl":"ResetWarm","src":55,"more_decls":null}{"pl":"ResetShutdown","src":56,"more_decls":null}{"pl":"ResetPlatformSpecific","src":57,"more_decls":null}}{"pl":"const global_variable align(8) = Guid{\n    .time_low = 0x8be4df61,\n    .time_mid = 0x93ca,\n    .time_high_and_version = 0x11d2,\n    .clock_seq_high_and_reserved = 0xaa,\n    .clock_seq_low = 0x0d,\n    .node = [_]u8{ 0x00, 0xe0, 0x98, 0x03, 0x2b, 0x8c },\n}","src":60,"more_decls":null}]