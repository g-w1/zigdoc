[{"pl":"pub const WSAPROTOCOLCHAIN = extern struct ","src":37,"more_decls":{"pl":"ChainLen: c_int","src":38,"more_decls":null}{"pl":"ChainEntries: [MAX_PROTOCOL_CHAIN]DWORD","src":39,"more_decls":null}}{"pl":"pub const WSAPROTOCOL_INFOA = extern struct ","src":44,"more_decls":{"pl":"dwServiceFlags1: DWORD","src":45,"more_decls":null}{"pl":"dwServiceFlags2: DWORD","src":46,"more_decls":null}{"pl":"dwServiceFlags3: DWORD","src":47,"more_decls":null}{"pl":"dwServiceFlags4: DWORD","src":48,"more_decls":null}{"pl":"dwProviderFlags: DWORD","src":49,"more_decls":null}{"pl":"ProviderId: GUID","src":50,"more_decls":null}{"pl":"dwCatalogEntryId: DWORD","src":51,"more_decls":null}{"pl":"ProtocolChain: WSAPROTOCOLCHAIN","src":52,"more_decls":null}{"pl":"iVersion: c_int","src":53,"more_decls":null}{"pl":"iAddressFamily: c_int","src":54,"more_decls":null}{"pl":"iMaxSockAddr: c_int","src":55,"more_decls":null}{"pl":"iMinSockAddr: c_int","src":56,"more_decls":null}{"pl":"iSocketType: c_int","src":57,"more_decls":null}{"pl":"iProtocol: c_int","src":58,"more_decls":null}{"pl":"iProtocolMaxOffset: c_int","src":59,"more_decls":null}{"pl":"iNetworkByteOrder: c_int","src":60,"more_decls":null}{"pl":"iSecurityScheme: c_int","src":61,"more_decls":null}{"pl":"dwMessageSize: DWORD","src":62,"more_decls":null}{"pl":"dwProviderReserved: DWORD","src":63,"more_decls":null}{"pl":"szProtocol: [WSAPROTOCOL_LEN + 1]CHAR","src":64,"more_decls":null}}{"pl":"pub const WSAPROTOCOL_INFOW = extern struct ","src":67,"more_decls":{"pl":"dwServiceFlags1: DWORD","src":68,"more_decls":null}{"pl":"dwServiceFlags2: DWORD","src":69,"more_decls":null}{"pl":"dwServiceFlags3: DWORD","src":70,"more_decls":null}{"pl":"dwServiceFlags4: DWORD","src":71,"more_decls":null}{"pl":"dwProviderFlags: DWORD","src":72,"more_decls":null}{"pl":"ProviderId: GUID","src":73,"more_decls":null}{"pl":"dwCatalogEntryId: DWORD","src":74,"more_decls":null}{"pl":"ProtocolChain: WSAPROTOCOLCHAIN","src":75,"more_decls":null}{"pl":"iVersion: c_int","src":76,"more_decls":null}{"pl":"iAddressFamily: c_int","src":77,"more_decls":null}{"pl":"iMaxSockAddr: c_int","src":78,"more_decls":null}{"pl":"iMinSockAddr: c_int","src":79,"more_decls":null}{"pl":"iSocketType: c_int","src":80,"more_decls":null}{"pl":"iProtocol: c_int","src":81,"more_decls":null}{"pl":"iProtocolMaxOffset: c_int","src":82,"more_decls":null}{"pl":"iNetworkByteOrder: c_int","src":83,"more_decls":null}{"pl":"iSecurityScheme: c_int","src":84,"more_decls":null}{"pl":"dwMessageSize: DWORD","src":85,"more_decls":null}{"pl":"dwProviderReserved: DWORD","src":86,"more_decls":null}{"pl":"szProtocol: [WSAPROTOCOL_LEN + 1]WCHAR","src":87,"more_decls":null}}{"pl":"pub const WSAOVERLAPPED = extern struct ","src":105,"more_decls":{"pl":"Internal: DWORD","src":106,"more_decls":null}{"pl":"InternalHigh: DWORD","src":107,"more_decls":null}{"pl":"Offset: DWORD","src":108,"more_decls":null}{"pl":"OffsetHigh: DWORD","src":109,"more_decls":null}{"pl":"hEvent: ?WSAEVENT","src":110,"more_decls":null}}{"pl":"pub const sockaddr = extern struct ","src":183,"more_decls":{"pl":"family: ADDRESS_FAMILY","src":184,"more_decls":null}{"pl":"data: [14]u8","src":185,"more_decls":null}}{"pl":"pub const addrinfo = extern struct ","src":188,"more_decls":{"pl":"flags: i32","src":189,"more_decls":null}{"pl":"family: i32","src":190,"more_decls":null}{"pl":"socktype: i32","src":191,"more_decls":null}{"pl":"protocol: i32","src":192,"more_decls":null}{"pl":"addrlen: usize","src":193,"more_decls":null}{"pl":"canonname: ?[*:0]u8","src":194,"more_decls":null}{"pl":"addr: ?*sockaddr","src":195,"more_decls":null}{"pl":"next: ?*addrinfo","src":196,"more_decls":null}}{"doc_comment":"IPv4 socket address","pl":"pub const sockaddr_in = extern struct ","src":200,"more_decls":{"pl":"family: ADDRESS_FAMILY = AF_INET","src":201,"more_decls":null}{"pl":"port: USHORT","src":202,"more_decls":null}{"pl":"addr: u32","src":203,"more_decls":null}{"pl":"zero: [8]u8 = [8]u8{ 0, 0, 0, 0, 0, 0, 0, 0 }","src":204,"more_decls":null}}{"doc_comment":"IPv6 socket address","pl":"pub const sockaddr_in6 = extern struct ","src":208,"more_decls":{"pl":"family: ADDRESS_FAMILY = AF_INET6","src":209,"more_decls":null}{"pl":"port: USHORT","src":210,"more_decls":null}{"pl":"flowinfo: u32","src":211,"more_decls":null}{"pl":"addr: [16]u8","src":212,"more_decls":null}{"pl":"scope_id: u32","src":213,"more_decls":null}}{"doc_comment":"UNIX domain socket address","pl":"pub const sockaddr_un = extern struct ","src":217,"more_decls":{"pl":"family: ADDRESS_FAMILY = AF_UNIX","src":218,"more_decls":null}{"pl":"path: [108]u8","src":219,"more_decls":null}}{"pl":"pub const WSABUF = extern struct ","src":222,"more_decls":{"pl":"len: ULONG","src":223,"more_decls":null}{"pl":"buf: [*]u8","src":224,"more_decls":null}}{"pl":"pub const WSAMSG = extern struct ","src":227,"more_decls":{"pl":"name: *const sockaddr","src":228,"more_decls":null}{"pl":"namelen: INT","src":229,"more_decls":null}{"pl":"lpBuffers: [*]WSABUF","src":230,"more_decls":null}{"pl":"dwBufferCount: DWORD","src":231,"more_decls":null}{"pl":"Control: WSABUF","src":232,"more_decls":null}{"pl":"dwFlags: DWORD","src":233,"more_decls":null}}{"pl":"pub const pollfd = extern struct ","src":236,"more_decls":{"pl":"fd: SOCKET","src":237,"more_decls":null}{"pl":"events: SHORT","src":238,"more_decls":null}{"pl":"revents: SHORT","src":239,"more_decls":null}}{"pl":"pub const WinsockError = extern enum","src":258,"more_decls":{"doc_comment":"Specified event object handle is invalid.\nAn application attempts to use an event object, but the specified handle is not valid.","pl":"WSA_INVALID_HANDLE = 6","src":261,"more_decls":null}{"doc_comment":"Insufficient memory available.\nAn application used a Windows Sockets function that directly maps to a Windows function.\nThe Windows function is indicating a lack of required memory resources.","pl":"WSA_NOT_ENOUGH_MEMORY = 8","src":266,"more_decls":null}{"doc_comment":"One or more parameters are invalid.\nAn application used a Windows Sockets function which directly maps to a Windows function.\nThe Windows function is indicating a problem with one or more parameters.","pl":"WSA_INVALID_PARAMETER = 87","src":271,"more_decls":null}{"doc_comment":"Overlapped operation aborted.\nAn overlapped operation was canceled due to the closure of the socket, or the execution of the SIO_FLUSH command in WSAIoctl.","pl":"WSA_OPERATION_ABORTED = 995","src":275,"more_decls":null}{"doc_comment":"Overlapped I/O event object not in signaled state.\nThe application has tried to determine the status of an overlapped operation which is not yet completed.\nApplications that use WSAGetOverlappedResult (with the fWait flag set to FALSE) in a polling mode to determine when an overlapped operation has completed, get this error code until the operation is complete.","pl":"WSA_IO_INCOMPLETE = 996","src":280,"more_decls":null}{"doc_comment":"The application has initiated an overlapped operation that cannot be completed immediately.\nA completion indication will be given later when the operation has been completed.","pl":"WSA_IO_PENDING = 997","src":284,"more_decls":null}{"doc_comment":"Interrupted function call.\nA blocking operation was interrupted by a call to WSACancelBlockingCall.","pl":"WSAEINTR = 10004","src":288,"more_decls":null}{"doc_comment":"File handle is not valid.\nThe file handle supplied is not valid.","pl":"WSAEBADF = 10009","src":292,"more_decls":null}{"doc_comment":"Permission denied.\nAn attempt was made to access a socket in a way forbidden by its access permissions.\nAn example is using a broadcast address for sendto without broadcast permission being set using setsockopt(SO_BROADCAST).\nAnother possible reason for the WSAEACCES error is that when the bind function is called (on Windows NT 4.0 with SP4 and later), another application, service, or kernel mode driver is bound to the same address with exclusive access.\nSuch exclusive access is a new feature of Windows NT 4.0 with SP4 and later, and is implemented by using the SO_EXCLUSIVEADDRUSE option.","pl":"WSAEACCES = 10013","src":299,"more_decls":null}{"doc_comment":"Bad address.\nThe system detected an invalid pointer address in attempting to use a pointer argument of a call.\nThis error occurs if an application passes an invalid pointer value, or if the length of the buffer is too small.\nFor instance, if the length of an argument, which is a sockaddr structure, is smaller than the sizeof(sockaddr).","pl":"WSAEFAULT = 10014","src":305,"more_decls":null}{"doc_comment":"Invalid argument.\nSome invalid argument was supplied (for example, specifying an invalid level to the setsockopt function).\nIn some instances, it also refers to the current state of the socket—for instance, calling accept on a socket that is not listening.","pl":"WSAEINVAL = 10022","src":310,"more_decls":null}{"doc_comment":"Too many open files.\nToo many open sockets. Each implementation may have a maximum number of socket handles available, either globally, per process, or per thread.","pl":"WSAEMFILE = 10024","src":314,"more_decls":null}{"doc_comment":"Resource temporarily unavailable.\nThis error is returned from operations on nonblocking sockets that cannot be completed immediately, for example recv when no data is queued to be read from the socket.\nIt is a nonfatal error, and the operation should be retried later.\nIt is normal for WSAEWOULDBLOCK to be reported as the result from calling connect on a nonblocking SOCK_STREAM socket, since some time must elapse for the connection to be established.","pl":"WSAEWOULDBLOCK = 10035","src":320,"more_decls":null}{"doc_comment":"Operation now in progress.\nA blocking operation is currently executing.\nWindows Sockets only allows a single blocking operation—per- task or thread—to be outstanding, and if any other function call is made (whether or not it references that or any other socket) the function fails with the WSAEINPROGRESS error.","pl":"WSAEINPROGRESS = 10036","src":325,"more_decls":null}{"doc_comment":"Operation already in progress.\nAn operation was attempted on a nonblocking socket with an operation already in progress—that is, calling connect a second time on a nonblocking socket that is already connecting, or canceling an asynchronous request (WSAAsyncGetXbyY) that has already been canceled or completed.","pl":"WSAEALREADY = 10037","src":329,"more_decls":null}{"doc_comment":"Socket operation on nonsocket.\nAn operation was attempted on something that is not a socket.\nEither the socket handle parameter did not reference a valid socket, or for select, a member of an fd_set was not valid.","pl":"WSAENOTSOCK = 10038","src":334,"more_decls":null}{"doc_comment":"Destination address required.\nA required address was omitted from an operation on a socket.\nFor example, this error is returned if sendto is called with the remote address of ADDR_ANY.","pl":"WSAEDESTADDRREQ = 10039","src":339,"more_decls":null}{"doc_comment":"Message too long.\nA message sent on a datagram socket was larger than the internal message buffer or some other network limit, or the buffer used to receive a datagram was smaller than the datagram itself.","pl":"WSAEMSGSIZE = 10040","src":343,"more_decls":null}{"doc_comment":"Protocol wrong type for socket.\nA protocol was specified in the socket function call that does not support the semantics of the socket type requested.\nFor example, the ARPA Internet UDP protocol cannot be specified with a socket type of SOCK_STREAM.","pl":"WSAEPROTOTYPE = 10041","src":348,"more_decls":null}{"doc_comment":"Bad protocol option.\nAn unknown, invalid or unsupported option or level was specified in a getsockopt or setsockopt call.","pl":"WSAENOPROTOOPT = 10042","src":352,"more_decls":null}{"doc_comment":"Protocol not supported.\nThe requested protocol has not been configured into the system, or no implementation for it exists.\nFor example, a socket call requests a SOCK_DGRAM socket, but specifies a stream protocol.","pl":"WSAEPROTONOSUPPORT = 10043","src":357,"more_decls":null}{"doc_comment":"Socket type not supported.\nThe support for the specified socket type does not exist in this address family.\nFor example, the optional type SOCK_RAW might be selected in a socket call, and the implementation does not support SOCK_RAW sockets at all.","pl":"WSAESOCKTNOSUPPORT = 10044","src":362,"more_decls":null}{"doc_comment":"Operation not supported.\nThe attempted operation is not supported for the type of object referenced.\nUsually this occurs when a socket descriptor to a socket that cannot support this operation is trying to accept a connection on a datagram socket.","pl":"WSAEOPNOTSUPP = 10045","src":367,"more_decls":null}{"doc_comment":"Protocol family not supported.\nThe protocol family has not been configured into the system or no implementation for it exists.\nThis message has a slightly different meaning from WSAEAFNOSUPPORT.\nHowever, it is interchangeable in most cases, and all Windows Sockets functions that return one of these messages also specify WSAEAFNOSUPPORT.","pl":"WSAEPFNOSUPPORT = 10046","src":373,"more_decls":null}{"doc_comment":"Address family not supported by protocol family.\nAn address incompatible with the requested protocol was used.\nAll sockets are created with an associated address family (that is, AF_INET for Internet Protocols) and a generic protocol type (that is, SOCK_STREAM).\nThis error is returned if an incorrect protocol is explicitly requested in the socket call, or if an address of the wrong family is used for a socket, for example, in sendto.","pl":"WSAEAFNOSUPPORT = 10047","src":379,"more_decls":null}{"doc_comment":"Address already in use.\nTypically, only one usage of each socket address (protocol/IP address/port) is permitted.\nThis error occurs if an application attempts to bind a socket to an IP address/port that has already been used for an existing socket, or a socket that was not closed properly, or one that is still in the process of closing.\nFor server applications that need to bind multiple sockets to the same port number, consider using setsockopt (SO_REUSEADDR).\nClient applications usually need not call bind at all—connect chooses an unused port automatically.\nWhen bind is called with a wildcard address (involving ADDR_ANY), a WSAEADDRINUSE error could be delayed until the specific address is committed.\nThis could happen with a call to another function later, including connect, listen, WSAConnect, or WSAJoinLeaf.","pl":"WSAEADDRINUSE = 10048","src":388,"more_decls":null}{"doc_comment":"Cannot assign requested address.\nThe requested address is not valid in its context.\nThis normally results from an attempt to bind to an address that is not valid for the local computer.\nThis can also result from connect, sendto, WSAConnect, WSAJoinLeaf, or WSASendTo when the remote address or port is not valid for a remote computer (for example, address or port 0).","pl":"WSAEADDRNOTAVAIL = 10049","src":394,"more_decls":null}{"doc_comment":"Network is down.\nA socket operation encountered a dead network.\nThis could indicate a serious failure of the network system (that is, the protocol stack that the Windows Sockets DLL runs over), the network interface, or the local network itself.","pl":"WSAENETDOWN = 10050","src":399,"more_decls":null}{"doc_comment":"Network is unreachable.\nA socket operation was attempted to an unreachable network.\nThis usually means the local software knows no route to reach the remote host.","pl":"WSAENETUNREACH = 10051","src":404,"more_decls":null}{"doc_comment":"Network dropped connection on reset.\nThe connection has been broken due to keep-alive activity detecting a failure while the operation was in progress.\nIt can also be returned by setsockopt if an attempt is made to set SO_KEEPALIVE on a connection that has already failed.","pl":"WSAENETRESET = 10052","src":409,"more_decls":null}{"doc_comment":"Software caused connection abort.\nAn established connection was aborted by the software in your host computer, possibly due to a data transmission time-out or protocol error.","pl":"WSAECONNABORTED = 10053","src":413,"more_decls":null}{"doc_comment":"Connection reset by peer.\nAn existing connection was forcibly closed by the remote host.\nThis normally results if the peer application on the remote host is suddenly stopped, the host is rebooted, the host or remote network interface is disabled, or the remote host uses a hard close (see setsockopt for more information on the SO_LINGER option on the remote socket).\nThis error may also result if a connection was broken due to keep-alive activity detecting a failure while one or more operations are in progress.\nOperations that were in progress fail with WSAENETRESET. Subsequent operations fail with WSAECONNRESET.","pl":"WSAECONNRESET = 10054","src":420,"more_decls":null}{"doc_comment":"No buffer space available.\nAn operation on a socket could not be performed because the system lacked sufficient buffer space or because a queue was full.","pl":"WSAENOBUFS = 10055","src":424,"more_decls":null}{"doc_comment":"Socket is already connected.\nA connect request was made on an already-connected socket.\nSome implementations also return this error if sendto is called on a connected SOCK_DGRAM socket (for SOCK_STREAM sockets, the to parameter in sendto is ignored) although other implementations treat this as a legal occurrence.","pl":"WSAEISCONN = 10056","src":429,"more_decls":null}{"doc_comment":"Socket is not connected.\nA request to send or receive data was disallowed because the socket is not connected and (when sending on a datagram socket using sendto) no address was supplied.\nAny other type of operation might also return this error—for example, setsockopt setting SO_KEEPALIVE if the connection has been reset.","pl":"WSAENOTCONN = 10057","src":434,"more_decls":null}{"doc_comment":"Cannot send after socket shutdown.\nA request to send or receive data was disallowed because the socket had already been shut down in that direction with a previous shutdown call.\nBy calling shutdown a partial close of a socket is requested, which is a signal that sending or receiving, or both have been discontinued.","pl":"WSAESHUTDOWN = 10058","src":439,"more_decls":null}{"doc_comment":"Too many references.\nToo many references to some kernel object.","pl":"WSAETOOMANYREFS = 10059","src":443,"more_decls":null}{"doc_comment":"Connection timed out.\nA connection attempt failed because the connected party did not properly respond after a period of time, or the established connection failed because the connected host has failed to respond.","pl":"WSAETIMEDOUT = 10060","src":447,"more_decls":null}{"doc_comment":"Connection refused.\nNo connection could be made because the target computer actively refused it.\nThis usually results from trying to connect to a service that is inactive on the foreign host—that is, one with no server application running.","pl":"WSAECONNREFUSED = 10061","src":452,"more_decls":null}{"doc_comment":"Cannot translate name.\nCannot translate a name.","pl":"WSAELOOP = 10062","src":456,"more_decls":null}{"doc_comment":"Name too long.\nA name component or a name was too long.","pl":"WSAENAMETOOLONG = 10063","src":460,"more_decls":null}{"doc_comment":"Host is down.\nA socket operation failed because the destination host is down. A socket operation encountered a dead host.\nNetworking activity on the local host has not been initiated.\nThese conditions are more likely to be indicated by the error WSAETIMEDOUT.","pl":"WSAEHOSTDOWN = 10064","src":466,"more_decls":null}{"doc_comment":"No route to host.\nA socket operation was attempted to an unreachable host. See WSAENETUNREACH.","pl":"WSAEHOSTUNREACH = 10065","src":470,"more_decls":null}{"doc_comment":"Directory not empty.\nCannot remove a directory that is not empty.","pl":"WSAENOTEMPTY = 10066","src":474,"more_decls":null}{"doc_comment":"Too many processes.\nA Windows Sockets implementation may have a limit on the number of applications that can use it simultaneously.\nWSAStartup may fail with this error if the limit has been reached.","pl":"WSAEPROCLIM = 10067","src":479,"more_decls":null}{"doc_comment":"User quota exceeded.\nRan out of user quota.","pl":"WSAEUSERS = 10068","src":483,"more_decls":null}{"doc_comment":"Disk quota exceeded.\nRan out of disk quota.","pl":"WSAEDQUOT = 10069","src":487,"more_decls":null}{"doc_comment":"Stale file handle reference.\nThe file handle reference is no longer available.","pl":"WSAESTALE = 10070","src":491,"more_decls":null}{"doc_comment":"Item is remote.\nThe item is not available locally.","pl":"WSAEREMOTE = 10071","src":495,"more_decls":null}{"doc_comment":"Network subsystem is unavailable.\nThis error is returned by WSAStartup if the Windows Sockets implementation cannot function at this time because the underlying system it uses to provide network services is currently unavailable.\nUsers should check:\n- That the appropriate Windows Sockets DLL file is in the current path.\n- That they are not trying to use more than one Windows Sockets implementation simultaneously.\n- If there is more than one Winsock DLL on your system, be sure the first one in the path is appropriate for the network subsystem currently loaded.\n- The Windows Sockets implementation documentation to be sure all necessary components are currently installed and configured correctly.","pl":"WSASYSNOTREADY = 10091","src":504,"more_decls":null}{"doc_comment":"Winsock.dll version out of range.\nThe current Windows Sockets implementation does not support the Windows Sockets specification version requested by the application.\nCheck that no old Windows Sockets DLL files are being accessed.","pl":"WSAVERNOTSUPPORTED = 10092","src":509,"more_decls":null}{"doc_comment":"Successful WSAStartup not yet performed.\nEither the application has not called WSAStartup or WSAStartup failed.\nThe application may be accessing a socket that the current active task does not own (that is, trying to share a socket between tasks), or WSACleanup has been called too many times.","pl":"WSANOTINITIALISED = 10093","src":514,"more_decls":null}{"doc_comment":"Graceful shutdown in progress.\nReturned by WSARecv and WSARecvFrom to indicate that the remote party has initiated a graceful shutdown sequence.","pl":"WSAEDISCON = 10101","src":518,"more_decls":null}{"doc_comment":"No more results.\nNo more results can be returned by the WSALookupServiceNext function.","pl":"WSAENOMORE = 10102","src":522,"more_decls":null}{"doc_comment":"Call has been canceled.\nA call to the WSALookupServiceEnd function was made while this call was still processing. The call has been canceled.","pl":"WSAECANCELLED = 10103","src":526,"more_decls":null}{"doc_comment":"Procedure call table is invalid.\nThe service provider procedure call table is invalid.\nA service provider returned a bogus procedure table to Ws2_32.dll.\nThis is usually caused by one or more of the function pointers being NULL.","pl":"WSAEINVALIDPROCTABLE = 10104","src":532,"more_decls":null}{"doc_comment":"Service provider is invalid.\nThe requested service provider is invalid.\nThis error is returned by the WSCGetProviderInfo and WSCGetProviderInfo32 functions if the protocol entry specified could not be found.\nThis error is also returned if the service provider returned a version number other than 2.0.","pl":"WSAEINVALIDPROVIDER = 10105","src":538,"more_decls":null}{"doc_comment":"Service provider failed to initialize.\nThe requested service provider could not be loaded or initialized.\nThis error is returned if either a service provider's DLL could not be loaded (LoadLibrary failed) or the provider's WSPStartup or NSPStartup function failed.","pl":"WSAEPROVIDERFAILEDINIT = 10106","src":543,"more_decls":null}{"doc_comment":"System call failure.\nA system call that should never fail has failed.\nThis is a generic error code, returned under various conditions.\nReturned when a system call that should never fail does fail.\nFor example, if a call to WaitForMultipleEvents fails or one of the registry functions fails trying to manipulate the protocol/namespace catalogs.\nReturned when a provider does not return SUCCESS and does not provide an extended error code.\nCan indicate a service provider implementation error.","pl":"WSASYSCALLFAILURE = 10107","src":552,"more_decls":null}{"doc_comment":"Service not found.\nNo such service is known. The service cannot be found in the specified name space.","pl":"WSASERVICE_NOT_FOUND = 10108","src":556,"more_decls":null}{"doc_comment":"Class type not found.\nThe specified class was not found.","pl":"WSATYPE_NOT_FOUND = 10109","src":560,"more_decls":null}{"doc_comment":"No more results.\nNo more results can be returned by the WSALookupServiceNext function.","pl":"WSA_E_NO_MORE = 10110","src":564,"more_decls":null}{"doc_comment":"Call was canceled.\nA call to the WSALookupServiceEnd function was made while this call was still processing. The call has been canceled.","pl":"WSA_E_CANCELLED = 10111","src":568,"more_decls":null}{"doc_comment":"Database query was refused.\nA database query failed because it was actively refused.","pl":"WSAEREFUSED = 10112","src":572,"more_decls":null}{"doc_comment":"Host not found.\nNo such host is known. The name is not an official host name or alias, or it cannot be found in the database(s) being queried.\nThis error may also be returned for protocol and service queries, and means that the specified name could not be found in the relevant database.","pl":"WSAHOST_NOT_FOUND = 11001","src":577,"more_decls":null}{"doc_comment":"Nonauthoritative host not found.\nThis is usually a temporary error during host name resolution and means that the local server did not receive a response from an authoritative server. A retry at some time later may be successful.","pl":"WSATRY_AGAIN = 11002","src":581,"more_decls":null}{"doc_comment":"This is a nonrecoverable error.\nThis indicates that some sort of nonrecoverable error occurred during a database lookup.\nThis may be because the database files (for example, BSD-compatible HOSTS, SERVICES, or PROTOCOLS files) could not be found, or a DNS request was returned by the server with a severe error.","pl":"WSANO_RECOVERY = 11003","src":586,"more_decls":null}{"doc_comment":"Valid name, no data record of requested type.\nThe requested name is valid and was found in the database, but it does not have the correct associated data being resolved for.\nThe usual example for this is a host name-to-address translation attempt (using gethostbyname or WSAAsyncGetHostByName) which uses the DNS (Domain Name Server).\nAn MX record is returned but no A record—indicating the host itself exists, but is not directly reachable.","pl":"WSANO_DATA = 11004","src":592,"more_decls":null}{"doc_comment":"QoS receivers.\nAt least one QoS reserve has arrived.","pl":"WSA_QOS_RECEIVERS = 11005","src":596,"more_decls":null}{"doc_comment":"QoS senders.\nAt least one QoS send path has arrived.","pl":"WSA_QOS_SENDERS = 11006","src":600,"more_decls":null}{"doc_comment":"No QoS senders.\nThere are no QoS senders.","pl":"WSA_QOS_NO_SENDERS = 11007","src":604,"more_decls":null}{"doc_comment":"QoS no receivers.\nThere are no QoS receivers.","pl":"WSA_QOS_NO_RECEIVERS = 11008","src":608,"more_decls":null}{"doc_comment":"QoS request confirmed.\nThe QoS reserve request has been confirmed.","pl":"WSA_QOS_REQUEST_CONFIRMED = 11009","src":612,"more_decls":null}{"doc_comment":"QoS admission error.\nA QoS error occurred due to lack of resources.","pl":"WSA_QOS_ADMISSION_FAILURE = 11010","src":616,"more_decls":null}{"doc_comment":"QoS policy failure.\nThe QoS request was rejected because the policy system couldn't allocate the requested resource within the existing policy.","pl":"WSA_QOS_POLICY_FAILURE = 11011","src":620,"more_decls":null}{"doc_comment":"QoS bad style.\nAn unknown or conflicting QoS style was encountered.","pl":"WSA_QOS_BAD_STYLE = 11012","src":624,"more_decls":null}{"doc_comment":"QoS bad object.\nA problem was encountered with some part of the filterspec or the provider-specific buffer in general.","pl":"WSA_QOS_BAD_OBJECT = 11013","src":628,"more_decls":null}{"doc_comment":"QoS traffic control error.\nAn error with the underlying traffic control (TC) API as the generic QoS request was converted for local enforcement by the TC API.\nThis could be due to an out of memory error or to an internal QoS provider error.","pl":"WSA_QOS_TRAFFIC_CTRL_ERROR = 11014","src":633,"more_decls":null}{"doc_comment":"QoS generic error.\nA general QoS error.","pl":"WSA_QOS_GENERIC_ERROR = 11015","src":637,"more_decls":null}{"doc_comment":"QoS service type error.\nAn invalid or unrecognized service type was found in the QoS flowspec.","pl":"WSA_QOS_ESERVICETYPE = 11016","src":641,"more_decls":null}{"doc_comment":"QoS flowspec error.\nAn invalid or inconsistent flowspec was found in the QOS structure.","pl":"WSA_QOS_EFLOWSPEC = 11017","src":645,"more_decls":null}{"doc_comment":"Invalid QoS provider buffer.\nAn invalid QoS provider-specific buffer.","pl":"WSA_QOS_EPROVSPECBUF = 11018","src":649,"more_decls":null}{"doc_comment":"Invalid QoS filter style.\nAn invalid QoS filter style was used.","pl":"WSA_QOS_EFILTERSTYLE = 11019","src":653,"more_decls":null}{"doc_comment":"Invalid QoS filter type.\nAn invalid QoS filter type was used.","pl":"WSA_QOS_EFILTERTYPE = 11020","src":657,"more_decls":null}{"doc_comment":"Incorrect QoS filter count.\nAn incorrect number of QoS FILTERSPECs were specified in the FLOWDESCRIPTOR.","pl":"WSA_QOS_EFILTERCOUNT = 11021","src":661,"more_decls":null}{"doc_comment":"Invalid QoS object length.\nAn object with an invalid ObjectLength field was specified in the QoS provider-specific buffer.","pl":"WSA_QOS_EOBJLENGTH = 11022","src":665,"more_decls":null}{"doc_comment":"Incorrect QoS flow count.\nAn incorrect number of flow descriptors was specified in the QoS structure.","pl":"WSA_QOS_EFLOWCOUNT = 11023","src":669,"more_decls":null}{"doc_comment":"Unrecognized QoS object.\nAn unrecognized object was found in the QoS provider-specific buffer.","pl":"WSA_QOS_EUNKOWNPSOBJ = 11024","src":673,"more_decls":null}{"doc_comment":"Invalid QoS policy object.\nAn invalid policy object was found in the QoS provider-specific buffer.","pl":"WSA_QOS_EPOLICYOBJ = 11025","src":677,"more_decls":null}{"doc_comment":"Invalid QoS flow descriptor.\nAn invalid QoS flow descriptor was found in the flow descriptor list.","pl":"WSA_QOS_EFLOWDESC = 11026","src":681,"more_decls":null}{"doc_comment":"Invalid QoS provider-specific flowspec.\nAn invalid or inconsistent flowspec was found in the QoS provider-specific buffer.","pl":"WSA_QOS_EPSFLOWSPEC = 11027","src":685,"more_decls":null}{"doc_comment":"Invalid QoS provider-specific filterspec.\nAn invalid FILTERSPEC was found in the QoS provider-specific buffer.","pl":"WSA_QOS_EPSFILTERSPEC = 11028","src":689,"more_decls":null}{"doc_comment":"Invalid QoS shape discard mode object.\nAn invalid shape discard mode object was found in the QoS provider-specific buffer.","pl":"WSA_QOS_ESDMODEOBJ = 11029","src":693,"more_decls":null}{"doc_comment":"Invalid QoS shaping rate object.\nAn invalid shaping rate object was found in the QoS provider-specific buffer.","pl":"WSA_QOS_ESHAPERATEOBJ = 11030","src":697,"more_decls":null}{"doc_comment":"Reserved policy QoS element type.\nA reserved policy element was found in the QoS provider-specific buffer.","pl":"WSA_QOS_RESERVED_PETYPE = 11031","src":701,"more_decls":null}{"pl":"_","src":703,"more_decls":null}}{"pl":"extern \"ws2_32\" fn WSAStartup(\n    wVersionRequired: WORD,\n    lpWSAData: *WSADATA,\n) callconv(WINAPI) c_int","src":755,"more_decls":null}{"pl":"extern \"ws2_32\" fn WSACleanup() callconv(WINAPI) c_int","src":759,"more_decls":null}{"pl":"extern \"ws2_32\" fn WSAGetLastError() callconv(WINAPI) WinsockError","src":760,"more_decls":null}{"pl":"extern \"ws2_32\" fn WSASocketA(\n    af: c_int,\n    type: c_int,\n    protocol: c_int,\n    lpProtocolInfo: ?*WSAPROTOCOL_INFOA,\n    g: GROUP,\n    dwFlags: DWORD,\n) callconv(WINAPI) SOCKET","src":761,"more_decls":null}{"pl":"extern \"ws2_32\" fn WSASocketW(\n    af: c_int,\n    type: c_int,\n    protocol: c_int,\n    lpProtocolInfo: ?*WSAPROTOCOL_INFOW,\n    g: GROUP,\n    dwFlags: DWORD,\n) callconv(WINAPI) SOCKET","src":769,"more_decls":null}{"pl":"extern \"ws2_32\" fn closesocket(s: SOCKET) callconv(WINAPI) c_int","src":777,"more_decls":null}{"pl":"extern \"ws2_32\" fn WSAIoctl(\n    s: SOCKET,\n    dwIoControlCode: DWORD,\n    lpvInBuffer: ?*const c_void,\n    cbInBuffer: DWORD,\n    lpvOutBuffer: ?LPVOID,\n    cbOutBuffer: DWORD,\n    lpcbBytesReturned: LPDWORD,\n    lpOverlapped: ?*WSAOVERLAPPED,\n    lpCompletionRoutine: ?WSAOVERLAPPED_COMPLETION_ROUTINE,\n) callconv(WINAPI) c_int","src":778,"more_decls":null}{"pl":"extern \"ws2_32\" fn accept(\n    s: SOCKET,\n    addr: ?*sockaddr,\n    addrlen: ?*c_int,\n) callconv(WINAPI) SOCKET","src":789,"more_decls":null}{"pl":"extern \"ws2_32\" fn bind(\n    s: SOCKET,\n    addr: ?*const sockaddr,\n    addrlen: c_int,\n) callconv(WINAPI) c_int","src":794,"more_decls":null}{"pl":"extern \"ws2_32\" fn connect(\n    s: SOCKET,\n    name: *const sockaddr,\n    namelen: c_int,\n) callconv(WINAPI) c_int","src":799,"more_decls":null}{"pl":"extern \"ws2_32\" fn listen(\n    s: SOCKET,\n    backlog: c_int,\n) callconv(WINAPI) c_int","src":804,"more_decls":null}{"pl":"extern \"ws2_32\" fn WSARecv(\n    s: SOCKET,\n    lpBuffers: [*]const WSABUF,\n    dwBufferCount: DWORD,\n    lpNumberOfBytesRecvd: ?*DWORD,\n    lpFlags: *DWORD,\n    lpOverlapped: ?*WSAOVERLAPPED,\n    lpCompletionRoutine: ?WSAOVERLAPPED_COMPLETION_ROUTINE,\n) callconv(WINAPI) c_int","src":808,"more_decls":null}{"pl":"extern \"ws2_32\" fn WSARecvFrom(\n    s: SOCKET,\n    lpBuffers: [*]const WSABUF,\n    dwBufferCount: DWORD,\n    lpNumberOfBytesRecvd: ?*DWORD,\n    lpFlags: *DWORD,\n    lpFrom: ?*sockaddr,\n    lpFromlen: ?*socklen_t,\n    lpOverlapped: ?*WSAOVERLAPPED,\n    lpCompletionRoutine: ?WSAOVERLAPPED_COMPLETION_ROUTINE,\n) callconv(WINAPI) c_int","src":817,"more_decls":null}{"pl":"extern \"ws2_32\" fn WSASend(\n    s: SOCKET,\n    lpBuffers: [*]WSABUF,\n    dwBufferCount: DWORD,\n    lpNumberOfBytesSent: ?*DWORD,\n    dwFlags: DWORD,\n    lpOverlapped: ?*WSAOVERLAPPED,\n    lpCompletionRoutine: ?WSAOVERLAPPED_COMPLETION_ROUTINE,\n) callconv(WINAPI) c_int","src":828,"more_decls":null}{"pl":"extern \"ws2_32\" fn WSASendTo(\n    s: SOCKET,\n    lpBuffers: [*]WSABUF,\n    dwBufferCount: DWORD,\n    lpNumberOfBytesSent: ?*DWORD,\n    dwFlags: DWORD,\n    lpTo: ?*const sockaddr,\n    iTolen: c_int,\n    lpOverlapped: ?*WSAOVERLAPPED,\n    lpCompletionRoutine: ?WSAOVERLAPPED_COMPLETION_ROUTINE,\n) callconv(WINAPI) c_int","src":837,"more_decls":null}{"pl":"extern \"ws2_32\" fn WSAPoll(\n    fdArray: [*]pollfd,\n    fds: c_ulong,\n    timeout: c_int,\n) callconv(WINAPI) c_int","src":848,"more_decls":null}{"pl":"extern \"ws2_32\" fn getaddrinfo(\n    pNodeName: [*:0]const u8,\n    pServiceName: [*:0]const u8,\n    pHints: *const addrinfo,\n    ppResult: **addrinfo,\n) callconv(WINAPI) i32","src":853,"more_decls":null}{"pl":"extern \"ws2_32\" fn freeaddrinfo(\n    pAddrInfo: *addrinfo,\n) callconv(WINAPI) void","src":859,"more_decls":null}{"pl":"extern \"ws2_32\" fn ioctlsocket(\n    s: SOCKET,\n    cmd: c_long,\n    argp: *c_ulong,\n) callconv(WINAPI) c_int","src":862,"more_decls":null}{"pl":"extern \"ws2_32\" fn getsockname(\n    s: SOCKET,\n    name: *sockaddr,\n    namelen: *c_int,\n) callconv(WINAPI) c_int","src":867,"more_decls":null}{"pl":"extern \"ws2_32\" fn setsockopt(\n    s: SOCKET,\n    level: u32,\n    optname: u32,\n    optval: ?*const c_void,\n    optlen: socklen_t,\n) callconv(WINAPI) c_int","src":872,"more_decls":null}{"pl":"extern \"ws2_32\" fn shutdown(\n    s: SOCKET,\n    how: c_int,\n) callconv(WINAPI) c_int","src":879,"more_decls":null}{"pl":"const SOCKET = *opaque {}","src":7,"more_decls":null}{"pl":"const INVALID_SOCKET = @intToPtr(SOCKET, ~@as(usize, 0))","src":8,"more_decls":null}{"pl":"const SOCKET_ERROR = -1","src":9,"more_decls":null}{"pl":"const WSADESCRIPTION_LEN = 256","src":11,"more_decls":null}{"pl":"const WSASYS_STATUS_LEN = 128","src":12,"more_decls":null}{"pl":"const WSADATA = if (@sizeOf(usize) == @sizeOf(u64))\n    extern struct {\n        wVersion: WORD,\n        wHighVersion: WORD,\n        iMaxSockets: u16,\n        iMaxUdpDg: u16,\n        lpVendorInfo: *u8,\n        szDescription: [WSADESCRIPTION_LEN + 1]u8,\n        szSystemStatus: [WSASYS_STATUS_LEN + 1]u8,\n    }\nelse\n    extern struct {\n        wVersion: WORD,\n        wHighVersion: WORD,\n        szDescription: [WSADESCRIPTION_LEN + 1]u8,\n        szSystemStatus: [WSASYS_STATUS_LEN + 1]u8,\n        iMaxSockets: u16,\n        iMaxUdpDg: u16,\n        lpVendorInfo: *u8,\n    }","src":14,"more_decls":null}{"pl":"const MAX_PROTOCOL_CHAIN = 7","src":35,"more_decls":null}{"pl":"const WSAPROTOCOL_LEN = 255","src":42,"more_decls":null}{"pl":"const GROUP = u32","src":90,"more_decls":null}{"pl":"const SG_UNCONSTRAINED_GROUP = 0x1","src":92,"more_decls":null}{"pl":"const SG_CONSTRAINED_GROUP = 0x2","src":93,"more_decls":null}{"pl":"const WSA_FLAG_OVERLAPPED = 0x01","src":95,"more_decls":null}{"pl":"const WSA_FLAG_MULTIPOINT_C_ROOT = 0x02","src":96,"more_decls":null}{"pl":"const WSA_FLAG_MULTIPOINT_C_LEAF = 0x04","src":97,"more_decls":null}{"pl":"const WSA_FLAG_MULTIPOINT_D_ROOT = 0x08","src":98,"more_decls":null}{"pl":"const WSA_FLAG_MULTIPOINT_D_LEAF = 0x10","src":99,"more_decls":null}{"pl":"const WSA_FLAG_ACCESS_SYSTEM_SECURITY = 0x40","src":100,"more_decls":null}{"pl":"const WSA_FLAG_NO_HANDLE_INHERIT = 0x80","src":101,"more_decls":null}{"pl":"const WSAEVENT = HANDLE","src":103,"more_decls":null}{"pl":"const WSAOVERLAPPED_COMPLETION_ROUTINE = fn (dwError: DWORD, cbTransferred: DWORD, lpOverlapped: *WSAOVERLAPPED, dwFlags: DWORD) callconv(.C) void","src":113,"more_decls":null}{"pl":"const ADDRESS_FAMILY = u16","src":115,"more_decls":null}{"pl":"const socklen_t = u32","src":118,"more_decls":null}{"pl":"const AF_UNSPEC = 0","src":120,"more_decls":null}{"pl":"const AF_UNIX = 1","src":121,"more_decls":null}{"pl":"const AF_INET = 2","src":122,"more_decls":null}{"pl":"const AF_IMPLINK = 3","src":123,"more_decls":null}{"pl":"const AF_PUP = 4","src":124,"more_decls":null}{"pl":"const AF_CHAOS = 5","src":125,"more_decls":null}{"pl":"const AF_NS = 6","src":126,"more_decls":null}{"pl":"const AF_IPX = AF_NS","src":127,"more_decls":null}{"pl":"const AF_ISO = 7","src":128,"more_decls":null}{"pl":"const AF_OSI = AF_ISO","src":129,"more_decls":null}{"pl":"const AF_ECMA = 8","src":130,"more_decls":null}{"pl":"const AF_DATAKIT = 9","src":131,"more_decls":null}{"pl":"const AF_CCITT = 10","src":132,"more_decls":null}{"pl":"const AF_SNA = 11","src":133,"more_decls":null}{"pl":"const AF_DECnet = 12","src":134,"more_decls":null}{"pl":"const AF_DLI = 13","src":135,"more_decls":null}{"pl":"const AF_LAT = 14","src":136,"more_decls":null}{"pl":"const AF_HYLINK = 15","src":137,"more_decls":null}{"pl":"const AF_APPLETALK = 16","src":138,"more_decls":null}{"pl":"const AF_NETBIOS = 17","src":139,"more_decls":null}{"pl":"const AF_VOICEVIEW = 18","src":140,"more_decls":null}{"pl":"const AF_FIREFOX = 19","src":141,"more_decls":null}{"pl":"const AF_UNKNOWN1 = 20","src":142,"more_decls":null}{"pl":"const AF_BAN = 21","src":143,"more_decls":null}{"pl":"const AF_ATM = 22","src":144,"more_decls":null}{"pl":"const AF_INET6 = 23","src":145,"more_decls":null}{"pl":"const AF_CLUSTER = 24","src":146,"more_decls":null}{"pl":"const AF_12844 = 25","src":147,"more_decls":null}{"pl":"const AF_IRDA = 26","src":148,"more_decls":null}{"pl":"const AF_NETDES = 28","src":149,"more_decls":null}{"pl":"const AF_TCNPROCESS = 29","src":150,"more_decls":null}{"pl":"const AF_TCNMESSAGE = 30","src":151,"more_decls":null}{"pl":"const AF_ICLFXBM = 31","src":152,"more_decls":null}{"pl":"const AF_BTH = 32","src":153,"more_decls":null}{"pl":"const AF_MAX = 33","src":154,"more_decls":null}{"pl":"const SOCK_STREAM = 1","src":156,"more_decls":null}{"pl":"const SOCK_DGRAM = 2","src":157,"more_decls":null}{"pl":"const SOCK_RAW = 3","src":158,"more_decls":null}{"pl":"const SOCK_RDM = 4","src":159,"more_decls":null}{"pl":"const SOCK_SEQPACKET = 5","src":160,"more_decls":null}{"pl":"const IPPROTO_ICMP = 1","src":162,"more_decls":null}{"pl":"const IPPROTO_IGMP = 2","src":163,"more_decls":null}{"pl":"const BTHPROTO_RFCOMM = 3","src":164,"more_decls":null}{"pl":"const IPPROTO_TCP = 6","src":165,"more_decls":null}{"pl":"const IPPROTO_UDP = 17","src":166,"more_decls":null}{"pl":"const IPPROTO_ICMPV6 = 58","src":167,"more_decls":null}{"pl":"const IPPROTO_RM = 113","src":168,"more_decls":null}{"pl":"const AI_PASSIVE = 0x00001","src":170,"more_decls":null}{"pl":"const AI_CANONNAME = 0x00002","src":171,"more_decls":null}{"pl":"const AI_NUMERICHOST = 0x00004","src":172,"more_decls":null}{"pl":"const AI_NUMERICSERV = 0x00008","src":173,"more_decls":null}{"pl":"const AI_ADDRCONFIG = 0x00400","src":174,"more_decls":null}{"pl":"const AI_V4MAPPED = 0x00800","src":175,"more_decls":null}{"pl":"const AI_NON_AUTHORITATIVE = 0x04000","src":176,"more_decls":null}{"pl":"const AI_SECURE = 0x08000","src":177,"more_decls":null}{"pl":"const AI_RETURN_PREFERRED_NAMES = 0x10000","src":178,"more_decls":null}{"pl":"const AI_DISABLE_IDN_ENCODING = 0x80000","src":179,"more_decls":null}{"pl":"const FIONBIO = -2147195266","src":181,"more_decls":null}{"pl":"const POLLRDNORM = 0x0100","src":244,"more_decls":null}{"pl":"const POLLRDBAND = 0x0200","src":245,"more_decls":null}{"pl":"const POLLIN = (POLLRDNORM | POLLRDBAND)","src":246,"more_decls":null}{"pl":"const POLLPRI = 0x0400","src":247,"more_decls":null}{"pl":"const POLLWRNORM = 0x0010","src":249,"more_decls":null}{"pl":"const POLLOUT = (POLLWRNORM)","src":250,"more_decls":null}{"pl":"const POLLWRBAND = 0x0020","src":251,"more_decls":null}{"pl":"const POLLERR = 0x0001","src":253,"more_decls":null}{"pl":"const POLLHUP = 0x0002","src":254,"more_decls":null}{"pl":"const POLLNVAL = 0x0004","src":255,"more_decls":null}{"pl":"const SIO_BASE_HANDLE = IOC_OUT | IOC_WS2 | 34","src":718,"more_decls":null}{"pl":"const SOL_SOCKET = 0xffff","src":720,"more_decls":null}{"pl":"const SO_DEBUG = 0x0001","src":722,"more_decls":null}{"pl":"const SO_ACCEPTCONN = 0x0002","src":723,"more_decls":null}{"pl":"const SO_REUSEADDR = 0x0004","src":724,"more_decls":null}{"pl":"const SO_KEEPALIVE = 0x0008","src":725,"more_decls":null}{"pl":"const SO_DONTROUTE = 0x0010","src":726,"more_decls":null}{"pl":"const SO_BROADCAST = 0x0020","src":727,"more_decls":null}{"pl":"const SO_USELOOPBACK = 0x0040","src":728,"more_decls":null}{"pl":"const SO_LINGER = 0x0080","src":729,"more_decls":null}{"pl":"const SO_OOBINLINE = 0x0100","src":730,"more_decls":null}{"pl":"const SO_DONTLINGER = ~@as(u32, SO_LINGER)","src":732,"more_decls":null}{"pl":"const SO_EXCLUSIVEADDRUSE = ~@as(u32, SO_REUSEADDR)","src":733,"more_decls":null}{"pl":"const SO_SNDBUF = 0x1001","src":735,"more_decls":null}{"pl":"const SO_RCVBUF = 0x1002","src":736,"more_decls":null}{"pl":"const SO_SNDLOWAT = 0x1003","src":737,"more_decls":null}{"pl":"const SO_RCVLOWAT = 0x1004","src":738,"more_decls":null}{"pl":"const SO_SNDTIMEO = 0x1005","src":739,"more_decls":null}{"pl":"const SO_RCVTIMEO = 0x1006","src":740,"more_decls":null}{"pl":"const SO_ERROR = 0x1007","src":741,"more_decls":null}{"pl":"const SO_TYPE = 0x1008","src":742,"more_decls":null}{"pl":"const SO_GROUP_ID = 0x2001","src":744,"more_decls":null}{"pl":"const SO_GROUP_PRIORITY = 0x2002","src":745,"more_decls":null}{"pl":"const SO_MAX_MSG_SIZE = 0x2003","src":746,"more_decls":null}{"pl":"const SO_PROTOCOL_INFOA = 0x2004","src":747,"more_decls":null}{"pl":"const SO_PROTOCOL_INFOW = 0x2005","src":748,"more_decls":null}{"pl":"const PVD_CONFIG = 0x3001","src":750,"more_decls":null}{"pl":"const SO_CONDITIONAL_ACCEPT = 0x3002","src":751,"more_decls":null}{"pl":"const TCP_NODELAY = 0x0001","src":753,"more_decls":null}]