[{"doc_comment":"Renamed from `kevent` to `Kevent` to avoid conflict with function name.","pl":"pub const Kevent = extern struct ","src":27,"more_decls":{"pl":"ident: usize","src":28,"more_decls":null}{"pl":"filter: i32","src":29,"more_decls":null}{"pl":"flags: u32","src":30,"more_decls":null}{"pl":"fflags: u32","src":31,"more_decls":null}{"pl":"data: i64","src":32,"more_decls":null}{"pl":"udata: usize","src":33,"more_decls":null}}{"pl":"pub const dl_phdr_info = extern struct ","src":36,"more_decls":{"pl":"dlpi_addr: usize","src":37,"more_decls":null}{"pl":"dlpi_name: ?[*:0]const u8","src":38,"more_decls":null}{"pl":"dlpi_phdr: [*]std.elf.Phdr","src":39,"more_decls":null}{"pl":"dlpi_phnum: u16","src":40,"more_decls":null}}{"pl":"pub const Flock = extern struct ","src":43,"more_decls":{"pl":"l_start: off_t","src":44,"more_decls":null}{"pl":"l_len: off_t","src":45,"more_decls":null}{"pl":"l_pid: pid_t","src":46,"more_decls":null}{"pl":"l_type: i16","src":47,"more_decls":null}{"pl":"l_whence: i16","src":48,"more_decls":null}}{"pl":"pub const addrinfo = extern struct ","src":51,"more_decls":{"pl":"flags: i32","src":52,"more_decls":null}{"pl":"family: i32","src":53,"more_decls":null}{"pl":"socktype: i32","src":54,"more_decls":null}{"pl":"protocol: i32","src":55,"more_decls":null}{"pl":"addrlen: socklen_t","src":56,"more_decls":null}{"pl":"canonname: ?[*:0]u8","src":57,"more_decls":null}{"pl":"addr: ?*sockaddr","src":58,"more_decls":null}{"pl":"next: ?*addrinfo","src":59,"more_decls":null}}{"pl":"pub const EAI = extern enum","src":62,"more_decls":{"doc_comment":"address family for hostname not supported","pl":"ADDRFAMILY = 1","src":64,"more_decls":null}{"doc_comment":"name could not be resolved at this time","pl":"AGAIN = 2","src":67,"more_decls":null}{"doc_comment":"flags parameter had an invalid value","pl":"BADFLAGS = 3","src":70,"more_decls":null}{"doc_comment":"non-recoverable failure in name resolution","pl":"FAIL = 4","src":73,"more_decls":null}{"doc_comment":"address family not recognized","pl":"FAMILY = 5","src":76,"more_decls":null}{"doc_comment":"memory allocation failure","pl":"MEMORY = 6","src":79,"more_decls":null}{"doc_comment":"no address associated with hostname","pl":"NODATA = 7","src":82,"more_decls":null}{"doc_comment":"name does not resolve","pl":"NONAME = 8","src":85,"more_decls":null}{"doc_comment":"service not recognized for socket type","pl":"SERVICE = 9","src":88,"more_decls":null}{"doc_comment":"intended socket type was not recognized","pl":"SOCKTYPE = 10","src":91,"more_decls":null}{"doc_comment":"system error returned in errno","pl":"SYSTEM = 11","src":94,"more_decls":null}{"doc_comment":"invalid value for hints","pl":"BADHINTS = 12","src":97,"more_decls":null}{"doc_comment":"resolved protocol is unknown","pl":"PROTOCOL = 13","src":100,"more_decls":null}{"doc_comment":"argument buffer overflow","pl":"OVERFLOW = 14","src":103,"more_decls":null}{"pl":"_","src":105,"more_decls":null}}{"pl":"pub const msghdr = extern struct ","src":110,"more_decls":{"doc_comment":"optional address","pl":"msg_name: ?*sockaddr","src":112,"more_decls":null}{"doc_comment":"size of address","pl":"msg_namelen: socklen_t","src":115,"more_decls":null}{"doc_comment":"scatter/gather array","pl":"msg_iov: [*]iovec","src":118,"more_decls":null}{"doc_comment":"# elements in msg_iov","pl":"msg_iovlen: i32","src":121,"more_decls":null}{"doc_comment":"ancillary data","pl":"msg_control: ?*c_void","src":124,"more_decls":null}{"doc_comment":"ancillary data buffer len","pl":"msg_controllen: socklen_t","src":127,"more_decls":null}{"doc_comment":"flags on received message","pl":"msg_flags: i32","src":130,"more_decls":null}}{"pl":"pub const msghdr_const = extern struct ","src":133,"more_decls":{"doc_comment":"optional address","pl":"msg_name: ?*const sockaddr","src":135,"more_decls":null}{"doc_comment":"size of address","pl":"msg_namelen: socklen_t","src":138,"more_decls":null}{"doc_comment":"scatter/gather array","pl":"msg_iov: [*]iovec_const","src":141,"more_decls":null}{"doc_comment":"# elements in msg_iov","pl":"msg_iovlen: i32","src":144,"more_decls":null}{"doc_comment":"ancillary data","pl":"msg_control: ?*c_void","src":147,"more_decls":null}{"doc_comment":"ancillary data buffer len","pl":"msg_controllen: socklen_t","src":150,"more_decls":null}{"doc_comment":"flags on received message","pl":"msg_flags: i32","src":153,"more_decls":null}}{"pl":"pub const libc_stat = extern struct ","src":156,"more_decls":{"pl":"dev: dev_t","src":157,"more_decls":null}{"pl":"mode: mode_t","src":158,"more_decls":null}{"pl":"ino: ino_t","src":159,"more_decls":null}{"pl":"nlink: nlink_t","src":160,"more_decls":null}{"pl":"uid: uid_t","src":161,"more_decls":null}{"pl":"gid: gid_t","src":162,"more_decls":null}{"pl":"rdev: dev_t","src":163,"more_decls":null}{"pl":"atim: timespec","src":164,"more_decls":null}{"pl":"mtim: timespec","src":165,"more_decls":null}{"pl":"ctim: timespec","src":166,"more_decls":null}{"pl":"birthtim: timespec","src":167,"more_decls":null}{"pl":"size: off_t","src":168,"more_decls":null}{"pl":"blocks: blkcnt_t","src":169,"more_decls":null}{"pl":"blksize: blksize_t","src":170,"more_decls":null}{"pl":"flags: u32","src":171,"more_decls":null}{"pl":"gen: u32","src":172,"more_decls":null}{"pl":"__spare: [2]u32","src":173,"more_decls":null}{"pl":"pub fn atime(self: @This()) timespec {\n    return self.atim;\n}","src":175,"more_decls":null}{"pl":"pub fn mtime(self: @This()) timespec {\n    return self.mtim;\n}","src":179,"more_decls":null}{"pl":"pub fn ctime(self: @This()) timespec {\n    return self.ctim;\n}","src":183,"more_decls":null}}{"pl":"pub const timespec = extern struct ","src":188,"more_decls":{"pl":"tv_sec: i64","src":189,"more_decls":null}{"pl":"tv_nsec: isize","src":190,"more_decls":null}}{"pl":"pub const timeval = extern struct ","src":193,"more_decls":{"doc_comment":"seconds","pl":"tv_sec: time_t","src":195,"more_decls":null}{"doc_comment":"microseconds","pl":"tv_usec: suseconds_t","src":197,"more_decls":null}}{"pl":"pub const dirent = extern struct ","src":202,"more_decls":{"pl":"d_fileno: ino_t","src":203,"more_decls":null}{"pl":"d_reclen: u16","src":204,"more_decls":null}{"pl":"d_namlen: u16","src":205,"more_decls":null}{"pl":"d_type: u8","src":206,"more_decls":null}{"pl":"d_name: [MAXNAMLEN:0]u8","src":207,"more_decls":null}{"pl":"pub fn reclen(self: dirent) u16 {\n    return self.d_reclen;\n}","src":209,"more_decls":null}}{"pl":"pub const sockaddr = extern struct ","src":217,"more_decls":{"doc_comment":"total length","pl":"len: u8","src":219,"more_decls":null}{"doc_comment":"address family","pl":"family: sa_family_t","src":222,"more_decls":null}{"doc_comment":"actually longer; address value","pl":"data: [14]u8","src":225,"more_decls":null}}{"pl":"pub const sockaddr_in = extern struct ","src":228,"more_decls":{"pl":"len: u8 = @sizeOf(sockaddr_in)","src":229,"more_decls":null}{"pl":"family: sa_family_t = AF_INET","src":230,"more_decls":null}{"pl":"port: in_port_t","src":231,"more_decls":null}{"pl":"addr: u32","src":232,"more_decls":null}{"pl":"zero: [8]u8 = [8]u8{ 0, 0, 0, 0, 0, 0, 0, 0 }","src":233,"more_decls":null}}{"pl":"pub const sockaddr_in6 = extern struct ","src":236,"more_decls":{"pl":"len: u8 = @sizeOf(sockaddr_in6)","src":237,"more_decls":null}{"pl":"family: sa_family_t = AF_INET6","src":238,"more_decls":null}{"pl":"port: in_port_t","src":239,"more_decls":null}{"pl":"flowinfo: u32","src":240,"more_decls":null}{"pl":"addr: [16]u8","src":241,"more_decls":null}{"pl":"scope_id: u32","src":242,"more_decls":null}}{"doc_comment":"Definitions for UNIX IPC domain.","pl":"pub const sockaddr_un = extern struct ","src":246,"more_decls":{"doc_comment":"total sockaddr length","pl":"len: u8 = @sizeOf(sockaddr_un)","src":248,"more_decls":null}{"doc_comment":"AF_LOCAL","pl":"family: sa_family_t = AF_LOCAL","src":251,"more_decls":null}{"doc_comment":"path name","pl":"path: [104]u8","src":254,"more_decls":null}}{"pl":"pub const winsize = extern struct ","src":711,"more_decls":{"pl":"ws_row: u16","src":712,"more_decls":null}{"pl":"ws_col: u16","src":713,"more_decls":null}{"pl":"ws_xpixel: u16","src":714,"more_decls":null}{"pl":"ws_ypixel: u16","src":715,"more_decls":null}}{"doc_comment":"Renamed from `sigaction` to `Sigaction` to avoid conflict with the syscall.","pl":"pub const Sigaction = extern struct ","src":725,"more_decls":{"doc_comment":"signal handler","pl":"handler: extern union {\n        handler: ?handler_fn,\n        sigaction: ?sigaction_fn,\n    }","src":730,"more_decls":null}{"doc_comment":"signal mask to apply","pl":"mask: sigset_t","src":735,"more_decls":null}{"doc_comment":"signal options","pl":"flags: c_uint","src":737,"more_decls":null}{"pl":"const handler_fn = fn (c_int) callconv(.C) void","src":726,"more_decls":null}{"pl":"const sigaction_fn = fn (c_int, *const siginfo_t, ?*const c_void) callconv(.C) void","src":727,"more_decls":null}}{"pl":"pub const sigval_t = extern union ","src":740,"more_decls":{"pl":"int: i32","src":741,"more_decls":null}{"pl":"ptr: ?*c_void","src":742,"more_decls":null}}{"pl":"pub const siginfo_t = extern union ","src":745,"more_decls":{"pl":"pad: [128]u8","src":746,"more_decls":null}{"pl":"info: _ksiginfo","src":747,"more_decls":null}}{"pl":"pub const _ksiginfo = extern struct ","src":750,"more_decls":{"pl":"signo: i32","src":751,"more_decls":null}{"pl":"code: i32","src":752,"more_decls":null}{"pl":"errno: i32","src":753,"more_decls":null}{"pl":"reason: extern union {\n        rt: extern struct {\n            pid: pid_t,\n            uid: uid_t,\n            value: sigval_t,\n        },\n        child: extern struct {\n            pid: pid_t,\n            uid: uid_t,\n            status: i32,\n            utime: clock_t,\n            stime: clock_t,\n        },\n        fault: extern struct {\n            addr: ?*c_void,\n            trap: i32,\n            trap2: i32,\n            trap3: i32,\n        },\n        poll: extern struct {\n            band: i32,\n            fd: i32,\n        },\n        syscall: extern struct {\n            sysnum: i32,\n            retval: [2]i32,\n            @\"error\": i32,\n            args: [8]u64,\n        },\n        ptrace_state: extern struct {\n            pe_report_event: i32,\n            option: extern union {\n                pe_other_pid: pid_t,\n                pe_lwp: lwpid_t,\n            },\n        },\n    } align(@sizeOf(usize))","src":756,"more_decls":null}}{"pl":"pub const sigset_t = extern struct ","src":811,"more_decls":{"pl":"__bits: [_SIG_WORDS]u32","src":812,"more_decls":null}}{"pl":"pub const mcontext_t = extern struct ","src":822,"more_decls":{"pl":"gregs: [26]u64","src":823,"more_decls":null}{"pl":"mc_tlsbase: u64","src":824,"more_decls":null}{"pl":"fpregs: [512]u8 align(8)","src":825,"more_decls":null}}{"pl":"pub const ucontext_t = extern struct ","src":832,"more_decls":{"pl":"flags: u32","src":833,"more_decls":null}{"pl":"link: ?*ucontext_t","src":834,"more_decls":null}{"pl":"sigmask: sigset_t","src":835,"more_decls":null}{"pl":"stack: stack_t","src":836,"more_decls":null}{"pl":"mcontext: mcontext_t","src":837,"more_decls":null}{"pl":"__pad: [\n        switch (builtin.arch) {\n            .i386 => 4,\n            .mips, .mipsel, .mips64, .mips64el => 14,\n            .arm, .armeb, .thumb, .thumbeb => 1,\n            .sparc, .sparcel, .sparcv9 => if (@sizeOf(usize) == 4) 43 else 8,\n            else => 0,\n        }\n    ]u32","src":838,"more_decls":null}}{"pl":"pub const stack_t = extern struct ","src":990,"more_decls":{"pl":"ss_sp: [*]u8","src":991,"more_decls":null}{"pl":"ss_size: isize","src":992,"more_decls":null}{"pl":"ss_flags: i32","src":993,"more_decls":null}}{"pl":"pub const rlimit_resource = extern enum","src":1185,"more_decls":{"pl":"CPU = 0","src":1186,"more_decls":null}{"pl":"FSIZE = 1","src":1187,"more_decls":null}{"pl":"DATA = 2","src":1188,"more_decls":null}{"pl":"STACK = 3","src":1189,"more_decls":null}{"pl":"CORE = 4","src":1190,"more_decls":null}{"pl":"RSS = 5","src":1191,"more_decls":null}{"pl":"MEMLOCK = 6","src":1192,"more_decls":null}{"pl":"NPROC = 7","src":1193,"more_decls":null}{"pl":"NOFILE = 8","src":1194,"more_decls":null}{"pl":"SBSIZE = 9","src":1195,"more_decls":null}{"pl":"AS = 10","src":1196,"more_decls":null}{"pl":"VMEM = 10","src":1197,"more_decls":null}{"pl":"NTHR = 11","src":1198,"more_decls":null}{"pl":"_","src":1200,"more_decls":null}}{"pl":"pub const rlimit = extern struct ","src":1211,"more_decls":{"doc_comment":"Soft limit","pl":"cur: rlim_t","src":1213,"more_decls":null}{"doc_comment":"Hard limit","pl":"max: rlim_t","src":1215,"more_decls":null}}{"pl":"pub fn WEXITSTATUS(s: u32) u32 {\n    return (s >> 8) & 0xff;\n}","src":686,"more_decls":null}{"pl":"pub fn WTERMSIG(s: u32) u32 {\n    return s & 0x7f;\n}","src":689,"more_decls":null}{"pl":"pub fn WSTOPSIG(s: u32) u32 {\n    return WEXITSTATUS(s);\n}","src":692,"more_decls":null}{"pl":"pub fn WIFEXITED(s: u32) bool {\n    return WTERMSIG(s) == 0;\n}","src":695,"more_decls":null}{"pl":"pub fn WIFCONTINUED(s: u32) bool {\n    return ((s & 0x7f) == 0xffff);\n}","src":699,"more_decls":null}{"pl":"pub fn WIFSTOPPED(s: u32) bool {\n    return ((s & 0x7f != 0x7f) and !WIFCONTINUED(s));\n}","src":703,"more_decls":null}{"pl":"pub fn WIFSIGNALED(s: u32) bool {\n    return !WIFSTOPPED(s) and !WIFCONTINUED(s) and !WIFEXITED(s);\n}","src":707,"more_decls":null}{"pl":"pub fn _SIG_IDX(sig: usize) callconv(.Inline) usize {\n    return sig - 1;\n}","src":798,"more_decls":null}{"pl":"pub fn _SIG_WORD(sig: usize) callconv(.Inline) usize {\n    return_SIG_IDX(sig) >> 5;\n}","src":801,"more_decls":null}{"pl":"pub fn _SIG_BIT(sig: usize) callconv(.Inline) usize {\n    return 1 << (_SIG_IDX(sig) & 31);\n}","src":804,"more_decls":null}{"pl":"pub fn _SIG_VALID(sig: usize) callconv(.Inline) usize {\n    return sig <= _SIG_MAXSIG and sig > 0;\n}","src":807,"more_decls":null}{"pl":"pub fn S_ISFIFO(m: u32) bool {\n    return m & S_IFMT == S_IFIFO;\n}","src":1023,"more_decls":null}{"pl":"pub fn S_ISCHR(m: u32) bool {\n    return m & S_IFMT == S_IFCHR;\n}","src":1027,"more_decls":null}{"pl":"pub fn S_ISDIR(m: u32) bool {\n    return m & S_IFMT == S_IFDIR;\n}","src":1031,"more_decls":null}{"pl":"pub fn S_ISBLK(m: u32) bool {\n    return m & S_IFMT == S_IFBLK;\n}","src":1035,"more_decls":null}{"pl":"pub fn S_ISREG(m: u32) bool {\n    return m & S_IFMT == S_IFREG;\n}","src":1039,"more_decls":null}{"pl":"pub fn S_ISLNK(m: u32) bool {\n    return m & S_IFMT == S_IFLNK;\n}","src":1043,"more_decls":null}{"pl":"pub fn S_ISSOCK(m: u32) bool {\n    return m & S_IFMT == S_IFSOCK;\n}","src":1047,"more_decls":null}{"pl":"pub fn S_IWHT(m: u32) bool {\n    return m & S_IFMT == S_IFWHT;\n}","src":1051,"more_decls":null}{"pl":"const blkcnt_t = i64","src":9,"more_decls":null}{"pl":"const blksize_t = i32","src":10,"more_decls":null}{"pl":"const clock_t = u32","src":11,"more_decls":null}{"pl":"const dev_t = u64","src":12,"more_decls":null}{"pl":"const fd_t = i32","src":13,"more_decls":null}{"pl":"const gid_t = u32","src":14,"more_decls":null}{"pl":"const ino_t = u64","src":15,"more_decls":null}{"pl":"const mode_t = u32","src":16,"more_decls":null}{"pl":"const nlink_t = u32","src":17,"more_decls":null}{"pl":"const off_t = i64","src":18,"more_decls":null}{"pl":"const pid_t = i32","src":19,"more_decls":null}{"pl":"const socklen_t = u32","src":20,"more_decls":null}{"pl":"const time_t = i64","src":21,"more_decls":null}{"pl":"const uid_t = u32","src":22,"more_decls":null}{"pl":"const lwpid_t = i32","src":23,"more_decls":null}{"pl":"const suseconds_t = c_int","src":24,"more_decls":null}{"pl":"const EAI_MAX = 15","src":108,"more_decls":null}{"pl":"const MAXNAMLEN = 511","src":200,"more_decls":null}{"pl":"const in_port_t = u16","src":214,"more_decls":null}{"pl":"const sa_family_t = u8","src":215,"more_decls":null}{"doc_comment":"get address to use bind()","pl":"const AI_PASSIVE = 0x00000001","src":258,"more_decls":null}{"doc_comment":"fill ai_canonname","pl":"const AI_CANONNAME = 0x00000002","src":261,"more_decls":null}{"doc_comment":"prevent host name resolution","pl":"const AI_NUMERICHOST = 0x00000004","src":264,"more_decls":null}{"doc_comment":"prevent service name resolution","pl":"const AI_NUMERICSERV = 0x00000008","src":267,"more_decls":null}{"doc_comment":"only if any address is assigned","pl":"const AI_ADDRCONFIG = 0x00000400","src":270,"more_decls":null}{"pl":"const CTL_KERN = 1","src":272,"more_decls":null}{"pl":"const CTL_DEBUG = 5","src":273,"more_decls":null}{"pl":"const KERN_PROC_ARGS = 48","src":275,"more_decls":null}{"pl":"const KERN_PROC_PATHNAME = 5","src":276,"more_decls":null}{"pl":"const PATH_MAX = 1024","src":278,"more_decls":null}{"pl":"const STDIN_FILENO = 0","src":280,"more_decls":null}{"pl":"const STDOUT_FILENO = 1","src":281,"more_decls":null}{"pl":"const STDERR_FILENO = 2","src":282,"more_decls":null}{"pl":"const PROT_NONE = 0","src":284,"more_decls":null}{"pl":"const PROT_READ = 1","src":285,"more_decls":null}{"pl":"const PROT_WRITE = 2","src":286,"more_decls":null}{"pl":"const PROT_EXEC = 4","src":287,"more_decls":null}{"pl":"const CLOCK_REALTIME = 0","src":289,"more_decls":null}{"pl":"const CLOCK_VIRTUAL = 1","src":290,"more_decls":null}{"pl":"const CLOCK_PROF = 2","src":291,"more_decls":null}{"pl":"const CLOCK_MONOTONIC = 3","src":292,"more_decls":null}{"pl":"const CLOCK_THREAD_CPUTIME_ID = 0x20000000","src":293,"more_decls":null}{"pl":"const CLOCK_PROCESS_CPUTIME_ID = 0x40000000","src":294,"more_decls":null}{"pl":"const MAP_FAILED = @intToPtr(*c_void, maxInt(usize))","src":296,"more_decls":null}{"pl":"const MAP_SHARED = 0x0001","src":297,"more_decls":null}{"pl":"const MAP_PRIVATE = 0x0002","src":298,"more_decls":null}{"pl":"const MAP_REMAPDUP = 0x0004","src":299,"more_decls":null}{"pl":"const MAP_FIXED = 0x0010","src":300,"more_decls":null}{"pl":"const MAP_RENAME = 0x0020","src":301,"more_decls":null}{"pl":"const MAP_NORESERVE = 0x0040","src":302,"more_decls":null}{"pl":"const MAP_INHERIT = 0x0080","src":303,"more_decls":null}{"pl":"const MAP_HASSEMAPHORE = 0x0200","src":304,"more_decls":null}{"pl":"const MAP_TRYFIXED = 0x0400","src":305,"more_decls":null}{"pl":"const MAP_WIRED = 0x0800","src":306,"more_decls":null}{"pl":"const MAP_FILE = 0x0000","src":308,"more_decls":null}{"pl":"const MAP_NOSYNC = 0x0800","src":309,"more_decls":null}{"pl":"const MAP_ANON = 0x1000","src":310,"more_decls":null}{"pl":"const MAP_ANONYMOUS = MAP_ANON","src":311,"more_decls":null}{"pl":"const MAP_STACK = 0x2000","src":312,"more_decls":null}{"pl":"const WNOHANG = 0x00000001","src":314,"more_decls":null}{"pl":"const WUNTRACED = 0x00000002","src":315,"more_decls":null}{"pl":"const WSTOPPED = WUNTRACED","src":316,"more_decls":null}{"pl":"const WCONTINUED = 0x00000010","src":317,"more_decls":null}{"pl":"const WNOWAIT = 0x00010000","src":318,"more_decls":null}{"pl":"const WEXITED = 0x00000020","src":319,"more_decls":null}{"pl":"const WTRAPPED = 0x00000040","src":320,"more_decls":null}{"pl":"const SA_ONSTACK = 0x0001","src":322,"more_decls":null}{"pl":"const SA_RESTART = 0x0002","src":323,"more_decls":null}{"pl":"const SA_RESETHAND = 0x0004","src":324,"more_decls":null}{"pl":"const SA_NOCLDSTOP = 0x0008","src":325,"more_decls":null}{"pl":"const SA_NODEFER = 0x0010","src":326,"more_decls":null}{"pl":"const SA_NOCLDWAIT = 0x0020","src":327,"more_decls":null}{"pl":"const SA_SIGINFO = 0x0040","src":328,"more_decls":null}{"pl":"const SIGHUP = 1","src":330,"more_decls":null}{"pl":"const SIGINT = 2","src":331,"more_decls":null}{"pl":"const SIGQUIT = 3","src":332,"more_decls":null}{"pl":"const SIGILL = 4","src":333,"more_decls":null}{"pl":"const SIGTRAP = 5","src":334,"more_decls":null}{"pl":"const SIGABRT = 6","src":335,"more_decls":null}{"pl":"const SIGIOT = SIGABRT","src":336,"more_decls":null}{"pl":"const SIGEMT = 7","src":337,"more_decls":null}{"pl":"const SIGFPE = 8","src":338,"more_decls":null}{"pl":"const SIGKILL = 9","src":339,"more_decls":null}{"pl":"const SIGBUS = 10","src":340,"more_decls":null}{"pl":"const SIGSEGV = 11","src":341,"more_decls":null}{"pl":"const SIGSYS = 12","src":342,"more_decls":null}{"pl":"const SIGPIPE = 13","src":343,"more_decls":null}{"pl":"const SIGALRM = 14","src":344,"more_decls":null}{"pl":"const SIGTERM = 15","src":345,"more_decls":null}{"pl":"const SIGURG = 16","src":346,"more_decls":null}{"pl":"const SIGSTOP = 17","src":347,"more_decls":null}{"pl":"const SIGTSTP = 18","src":348,"more_decls":null}{"pl":"const SIGCONT = 19","src":349,"more_decls":null}{"pl":"const SIGCHLD = 20","src":350,"more_decls":null}{"pl":"const SIGTTIN = 21","src":351,"more_decls":null}{"pl":"const SIGTTOU = 22","src":352,"more_decls":null}{"pl":"const SIGIO = 23","src":353,"more_decls":null}{"pl":"const SIGXCPU = 24","src":354,"more_decls":null}{"pl":"const SIGXFSZ = 25","src":355,"more_decls":null}{"pl":"const SIGVTALRM = 26","src":356,"more_decls":null}{"pl":"const SIGPROF = 27","src":357,"more_decls":null}{"pl":"const SIGWINCH = 28","src":358,"more_decls":null}{"pl":"const SIGINFO = 29","src":359,"more_decls":null}{"pl":"const SIGUSR1 = 30","src":360,"more_decls":null}{"pl":"const SIGUSR2 = 31","src":361,"more_decls":null}{"pl":"const SIGPWR = 32","src":362,"more_decls":null}{"pl":"const SIGRTMIN = 33","src":364,"more_decls":null}{"pl":"const SIGRTMAX = 63","src":365,"more_decls":null}{"pl":"const F_OK = 0","src":368,"more_decls":null}{"pl":"const X_OK = 1","src":369,"more_decls":null}{"pl":"const W_OK = 2","src":370,"more_decls":null}{"pl":"const R_OK = 4","src":371,"more_decls":null}{"doc_comment":"open for reading only","pl":"const O_RDONLY = 0x00000000","src":374,"more_decls":null}{"doc_comment":"open for writing only","pl":"const O_WRONLY = 0x00000001","src":377,"more_decls":null}{"doc_comment":"open for reading and writing","pl":"const O_RDWR = 0x00000002","src":380,"more_decls":null}{"doc_comment":"mask for above modes","pl":"const O_ACCMODE = 0x00000003","src":383,"more_decls":null}{"doc_comment":"no delay","pl":"const O_NONBLOCK = 0x00000004","src":386,"more_decls":null}{"doc_comment":"set append mode","pl":"const O_APPEND = 0x00000008","src":389,"more_decls":null}{"doc_comment":"open with shared file lock","pl":"const O_SHLOCK = 0x00000010","src":392,"more_decls":null}{"doc_comment":"open with exclusive file lock","pl":"const O_EXLOCK = 0x00000020","src":395,"more_decls":null}{"doc_comment":"signal pgrp when data ready","pl":"const O_ASYNC = 0x00000040","src":398,"more_decls":null}{"doc_comment":"synchronous writes","pl":"const O_SYNC = 0x00000080","src":401,"more_decls":null}{"doc_comment":"don't follow symlinks on the last","pl":"const O_NOFOLLOW = 0x00000100","src":404,"more_decls":null}{"doc_comment":"create if nonexistent","pl":"const O_CREAT = 0x00000200","src":407,"more_decls":null}{"doc_comment":"truncate to zero length","pl":"const O_TRUNC = 0x00000400","src":410,"more_decls":null}{"doc_comment":"error if already exists","pl":"const O_EXCL = 0x00000800","src":413,"more_decls":null}{"doc_comment":"don't assign controlling terminal","pl":"const O_NOCTTY = 0x00008000","src":416,"more_decls":null}{"doc_comment":"write: I/O data completion","pl":"const O_DSYNC = 0x00010000","src":419,"more_decls":null}{"doc_comment":"read: I/O completion as for write","pl":"const O_RSYNC = 0x00020000","src":422,"more_decls":null}{"doc_comment":"use alternate i/o semantics","pl":"const O_ALT_IO = 0x00040000","src":425,"more_decls":null}{"doc_comment":"direct I/O hint","pl":"const O_DIRECT = 0x00080000","src":428,"more_decls":null}{"doc_comment":"fail if not a directory","pl":"const O_DIRECTORY = 0x00200000","src":431,"more_decls":null}{"doc_comment":"set close on exec","pl":"const O_CLOEXEC = 0x00400000","src":434,"more_decls":null}{"doc_comment":"skip search permission checks","pl":"const O_SEARCH = 0x00800000","src":437,"more_decls":null}{"pl":"const F_DUPFD = 0","src":439,"more_decls":null}{"pl":"const F_GETFD = 1","src":440,"more_decls":null}{"pl":"const F_SETFD = 2","src":441,"more_decls":null}{"pl":"const F_GETFL = 3","src":442,"more_decls":null}{"pl":"const F_SETFL = 4","src":443,"more_decls":null}{"pl":"const F_GETOWN = 5","src":445,"more_decls":null}{"pl":"const F_SETOWN = 6","src":446,"more_decls":null}{"pl":"const F_GETLK = 7","src":448,"more_decls":null}{"pl":"const F_SETLK = 8","src":449,"more_decls":null}{"pl":"const F_SETLKW = 9","src":450,"more_decls":null}{"pl":"const F_RDLCK = 1","src":452,"more_decls":null}{"pl":"const F_WRLCK = 3","src":453,"more_decls":null}{"pl":"const F_UNLCK = 2","src":454,"more_decls":null}{"pl":"const LOCK_SH = 1","src":456,"more_decls":null}{"pl":"const LOCK_EX = 2","src":457,"more_decls":null}{"pl":"const LOCK_UN = 8","src":458,"more_decls":null}{"pl":"const LOCK_NB = 4","src":459,"more_decls":null}{"pl":"const FD_CLOEXEC = 1","src":461,"more_decls":null}{"pl":"const SEEK_SET = 0","src":463,"more_decls":null}{"pl":"const SEEK_CUR = 1","src":464,"more_decls":null}{"pl":"const SEEK_END = 2","src":465,"more_decls":null}{"pl":"const SIG_BLOCK = 1","src":467,"more_decls":null}{"pl":"const SIG_UNBLOCK = 2","src":468,"more_decls":null}{"pl":"const SIG_SETMASK = 3","src":469,"more_decls":null}{"pl":"const SOCK_STREAM = 1","src":471,"more_decls":null}{"pl":"const SOCK_DGRAM = 2","src":472,"more_decls":null}{"pl":"const SOCK_RAW = 3","src":473,"more_decls":null}{"pl":"const SOCK_RDM = 4","src":474,"more_decls":null}{"pl":"const SOCK_SEQPACKET = 5","src":475,"more_decls":null}{"pl":"const SOCK_CLOEXEC = 0x10000000","src":477,"more_decls":null}{"pl":"const SOCK_NONBLOCK = 0x20000000","src":478,"more_decls":null}{"pl":"const PF_UNSPEC = 0","src":480,"more_decls":null}{"pl":"const PF_LOCAL = 1","src":481,"more_decls":null}{"pl":"const PF_UNIX = PF_LOCAL","src":482,"more_decls":null}{"pl":"const PF_FILE = PF_LOCAL","src":483,"more_decls":null}{"pl":"const PF_INET = 2","src":484,"more_decls":null}{"pl":"const PF_APPLETALK = 16","src":485,"more_decls":null}{"pl":"const PF_INET6 = 24","src":486,"more_decls":null}{"pl":"const PF_DECnet = 12","src":487,"more_decls":null}{"pl":"const PF_KEY = 29","src":488,"more_decls":null}{"pl":"const PF_ROUTE = 34","src":489,"more_decls":null}{"pl":"const PF_SNA = 11","src":490,"more_decls":null}{"pl":"const PF_MPLS = 33","src":491,"more_decls":null}{"pl":"const PF_CAN = 35","src":492,"more_decls":null}{"pl":"const PF_BLUETOOTH = 31","src":493,"more_decls":null}{"pl":"const PF_ISDN = 26","src":494,"more_decls":null}{"pl":"const PF_MAX = 37","src":495,"more_decls":null}{"pl":"const AF_UNSPEC = PF_UNSPEC","src":497,"more_decls":null}{"pl":"const AF_LOCAL = PF_LOCAL","src":498,"more_decls":null}{"pl":"const AF_UNIX = AF_LOCAL","src":499,"more_decls":null}{"pl":"const AF_FILE = AF_LOCAL","src":500,"more_decls":null}{"pl":"const AF_INET = PF_INET","src":501,"more_decls":null}{"pl":"const AF_APPLETALK = PF_APPLETALK","src":502,"more_decls":null}{"pl":"const AF_INET6 = PF_INET6","src":503,"more_decls":null}{"pl":"const AF_KEY = PF_KEY","src":504,"more_decls":null}{"pl":"const AF_ROUTE = PF_ROUTE","src":505,"more_decls":null}{"pl":"const AF_SNA = PF_SNA","src":506,"more_decls":null}{"pl":"const AF_MPLS = PF_MPLS","src":507,"more_decls":null}{"pl":"const AF_CAN = PF_CAN","src":508,"more_decls":null}{"pl":"const AF_BLUETOOTH = PF_BLUETOOTH","src":509,"more_decls":null}{"pl":"const AF_ISDN = PF_ISDN","src":510,"more_decls":null}{"pl":"const AF_MAX = PF_MAX","src":511,"more_decls":null}{"pl":"const DT_UNKNOWN = 0","src":513,"more_decls":null}{"pl":"const DT_FIFO = 1","src":514,"more_decls":null}{"pl":"const DT_CHR = 2","src":515,"more_decls":null}{"pl":"const DT_DIR = 4","src":516,"more_decls":null}{"pl":"const DT_BLK = 6","src":517,"more_decls":null}{"pl":"const DT_REG = 8","src":518,"more_decls":null}{"pl":"const DT_LNK = 10","src":519,"more_decls":null}{"pl":"const DT_SOCK = 12","src":520,"more_decls":null}{"pl":"const DT_WHT = 14","src":521,"more_decls":null}{"doc_comment":"add event to kq (implies enable)","pl":"const EV_ADD = 0x0001","src":524,"more_decls":null}{"doc_comment":"delete event from kq","pl":"const EV_DELETE = 0x0002","src":527,"more_decls":null}{"doc_comment":"enable event","pl":"const EV_ENABLE = 0x0004","src":530,"more_decls":null}{"doc_comment":"disable event (not reported)","pl":"const EV_DISABLE = 0x0008","src":533,"more_decls":null}{"doc_comment":"only report one occurrence","pl":"const EV_ONESHOT = 0x0010","src":536,"more_decls":null}{"doc_comment":"clear event state after reporting","pl":"const EV_CLEAR = 0x0020","src":539,"more_decls":null}{"doc_comment":"force immediate event output\n... with or without EV_ERROR\n... use KEVENT_FLAG_ERROR_EVENTS\non syscalls supporting flags","pl":"const EV_RECEIPT = 0x0040","src":545,"more_decls":null}{"doc_comment":"disable event after reporting","pl":"const EV_DISPATCH = 0x0080","src":548,"more_decls":null}{"pl":"const EVFILT_READ = 0","src":550,"more_decls":null}{"pl":"const EVFILT_WRITE = 1","src":551,"more_decls":null}{"doc_comment":"attached to aio requests","pl":"const EVFILT_AIO = 2","src":554,"more_decls":null}{"doc_comment":"attached to vnodes","pl":"const EVFILT_VNODE = 3","src":557,"more_decls":null}{"doc_comment":"attached to struct proc","pl":"const EVFILT_PROC = 4","src":560,"more_decls":null}{"doc_comment":"attached to struct proc","pl":"const EVFILT_SIGNAL = 5","src":563,"more_decls":null}{"doc_comment":"timers","pl":"const EVFILT_TIMER = 6","src":566,"more_decls":null}{"doc_comment":"Filesystem events","pl":"const EVFILT_FS = 7","src":569,"more_decls":null}{"doc_comment":"On input, NOTE_TRIGGER causes the event to be triggered for output.","pl":"const NOTE_TRIGGER = 0x08000000","src":572,"more_decls":null}{"doc_comment":"low water mark","pl":"const NOTE_LOWAT = 0x00000001","src":575,"more_decls":null}{"doc_comment":"vnode was removed","pl":"const NOTE_DELETE = 0x00000001","src":578,"more_decls":null}{"doc_comment":"data contents changed","pl":"const NOTE_WRITE = 0x00000002","src":581,"more_decls":null}{"doc_comment":"size increased","pl":"const NOTE_EXTEND = 0x00000004","src":584,"more_decls":null}{"doc_comment":"attributes changed","pl":"const NOTE_ATTRIB = 0x00000008","src":587,"more_decls":null}{"doc_comment":"link count changed","pl":"const NOTE_LINK = 0x00000010","src":590,"more_decls":null}{"doc_comment":"vnode was renamed","pl":"const NOTE_RENAME = 0x00000020","src":593,"more_decls":null}{"doc_comment":"vnode access was revoked","pl":"const NOTE_REVOKE = 0x00000040","src":596,"more_decls":null}{"doc_comment":"process exited","pl":"const NOTE_EXIT = 0x80000000","src":599,"more_decls":null}{"doc_comment":"process forked","pl":"const NOTE_FORK = 0x40000000","src":602,"more_decls":null}{"doc_comment":"process exec'd","pl":"const NOTE_EXEC = 0x20000000","src":605,"more_decls":null}{"doc_comment":"mask for signal & exit status","pl":"const NOTE_PDATAMASK = 0x000fffff","src":608,"more_decls":null}{"pl":"const NOTE_PCTRLMASK = 0xf0000000","src":609,"more_decls":null}{"pl":"const TIOCCBRK = 0x2000747a","src":611,"more_decls":null}{"pl":"const TIOCCDTR = 0x20007478","src":612,"more_decls":null}{"pl":"const TIOCCONS = 0x80047462","src":613,"more_decls":null}{"pl":"const TIOCDCDTIMESTAMP = 0x40107458","src":614,"more_decls":null}{"pl":"const TIOCDRAIN = 0x2000745e","src":615,"more_decls":null}{"pl":"const TIOCEXCL = 0x2000740d","src":616,"more_decls":null}{"pl":"const TIOCEXT = 0x80047460","src":617,"more_decls":null}{"pl":"const TIOCFLAG_CDTRCTS = 0x10","src":618,"more_decls":null}{"pl":"const TIOCFLAG_CLOCAL = 0x2","src":619,"more_decls":null}{"pl":"const TIOCFLAG_CRTSCTS = 0x4","src":620,"more_decls":null}{"pl":"const TIOCFLAG_MDMBUF = 0x8","src":621,"more_decls":null}{"pl":"const TIOCFLAG_SOFTCAR = 0x1","src":622,"more_decls":null}{"pl":"const TIOCFLUSH = 0x80047410","src":623,"more_decls":null}{"pl":"const TIOCGETA = 0x402c7413","src":624,"more_decls":null}{"pl":"const TIOCGETD = 0x4004741a","src":625,"more_decls":null}{"pl":"const TIOCGFLAGS = 0x4004745d","src":626,"more_decls":null}{"pl":"const TIOCGLINED = 0x40207442","src":627,"more_decls":null}{"pl":"const TIOCGPGRP = 0x40047477","src":628,"more_decls":null}{"pl":"const TIOCGQSIZE = 0x40047481","src":629,"more_decls":null}{"pl":"const TIOCGRANTPT = 0x20007447","src":630,"more_decls":null}{"pl":"const TIOCGSID = 0x40047463","src":631,"more_decls":null}{"pl":"const TIOCGSIZE = 0x40087468","src":632,"more_decls":null}{"pl":"const TIOCGWINSZ = 0x40087468","src":633,"more_decls":null}{"pl":"const TIOCMBIC = 0x8004746b","src":634,"more_decls":null}{"pl":"const TIOCMBIS = 0x8004746c","src":635,"more_decls":null}{"pl":"const TIOCMGET = 0x4004746a","src":636,"more_decls":null}{"pl":"const TIOCMSET = 0x8004746d","src":637,"more_decls":null}{"pl":"const TIOCM_CAR = 0x40","src":638,"more_decls":null}{"pl":"const TIOCM_CD = 0x40","src":639,"more_decls":null}{"pl":"const TIOCM_CTS = 0x20","src":640,"more_decls":null}{"pl":"const TIOCM_DSR = 0x100","src":641,"more_decls":null}{"pl":"const TIOCM_DTR = 0x2","src":642,"more_decls":null}{"pl":"const TIOCM_LE = 0x1","src":643,"more_decls":null}{"pl":"const TIOCM_RI = 0x80","src":644,"more_decls":null}{"pl":"const TIOCM_RNG = 0x80","src":645,"more_decls":null}{"pl":"const TIOCM_RTS = 0x4","src":646,"more_decls":null}{"pl":"const TIOCM_SR = 0x10","src":647,"more_decls":null}{"pl":"const TIOCM_ST = 0x8","src":648,"more_decls":null}{"pl":"const TIOCNOTTY = 0x20007471","src":649,"more_decls":null}{"pl":"const TIOCNXCL = 0x2000740e","src":650,"more_decls":null}{"pl":"const TIOCOUTQ = 0x40047473","src":651,"more_decls":null}{"pl":"const TIOCPKT = 0x80047470","src":652,"more_decls":null}{"pl":"const TIOCPKT_DATA = 0x0","src":653,"more_decls":null}{"pl":"const TIOCPKT_DOSTOP = 0x20","src":654,"more_decls":null}{"pl":"const TIOCPKT_FLUSHREAD = 0x1","src":655,"more_decls":null}{"pl":"const TIOCPKT_FLUSHWRITE = 0x2","src":656,"more_decls":null}{"pl":"const TIOCPKT_IOCTL = 0x40","src":657,"more_decls":null}{"pl":"const TIOCPKT_NOSTOP = 0x10","src":658,"more_decls":null}{"pl":"const TIOCPKT_START = 0x8","src":659,"more_decls":null}{"pl":"const TIOCPKT_STOP = 0x4","src":660,"more_decls":null}{"pl":"const TIOCPTMGET = 0x40287446","src":661,"more_decls":null}{"pl":"const TIOCPTSNAME = 0x40287448","src":662,"more_decls":null}{"pl":"const TIOCRCVFRAME = 0x80087445","src":663,"more_decls":null}{"pl":"const TIOCREMOTE = 0x80047469","src":664,"more_decls":null}{"pl":"const TIOCSBRK = 0x2000747b","src":665,"more_decls":null}{"pl":"const TIOCSCTTY = 0x20007461","src":666,"more_decls":null}{"pl":"const TIOCSDTR = 0x20007479","src":667,"more_decls":null}{"pl":"const TIOCSETA = 0x802c7414","src":668,"more_decls":null}{"pl":"const TIOCSETAF = 0x802c7416","src":669,"more_decls":null}{"pl":"const TIOCSETAW = 0x802c7415","src":670,"more_decls":null}{"pl":"const TIOCSETD = 0x8004741b","src":671,"more_decls":null}{"pl":"const TIOCSFLAGS = 0x8004745c","src":672,"more_decls":null}{"pl":"const TIOCSIG = 0x2000745f","src":673,"more_decls":null}{"pl":"const TIOCSLINED = 0x80207443","src":674,"more_decls":null}{"pl":"const TIOCSPGRP = 0x80047476","src":675,"more_decls":null}{"pl":"const TIOCSQSIZE = 0x80047480","src":676,"more_decls":null}{"pl":"const TIOCSSIZE = 0x80087467","src":677,"more_decls":null}{"pl":"const TIOCSTART = 0x2000746e","src":678,"more_decls":null}{"pl":"const TIOCSTAT = 0x80047465","src":679,"more_decls":null}{"pl":"const TIOCSTI = 0x80017472","src":680,"more_decls":null}{"pl":"const TIOCSTOP = 0x2000746f","src":681,"more_decls":null}{"pl":"const TIOCSWINSZ = 0x80087467","src":682,"more_decls":null}{"pl":"const TIOCUCNTL = 0x80047466","src":683,"more_decls":null}{"pl":"const TIOCXMTFRAME = 0x80087444","src":684,"more_decls":null}{"pl":"const SIG_ERR = @intToPtr(?Sigaction.sigaction_fn, maxInt(usize))","src":720,"more_decls":null}{"pl":"const SIG_DFL = @intToPtr(?Sigaction.sigaction_fn, 0)","src":721,"more_decls":null}{"pl":"const SIG_IGN = @intToPtr(?Sigaction.sigaction_fn, 1)","src":722,"more_decls":null}{"pl":"const _SIG_WORDS = 4","src":795,"more_decls":null}{"pl":"const _SIG_MAXSIG = 128","src":796,"more_decls":null}{"pl":"const SIG_ERR = @intToPtr(?Sigaction.sigaction_fn, maxInt(usize))","src":815,"more_decls":null}{"pl":"const SIG_DFL = @intToPtr(?Sigaction.sigaction_fn, 0)","src":816,"more_decls":null}{"pl":"const SIG_IGN = @intToPtr(?Sigaction.sigaction_fn, 1)","src":817,"more_decls":null}{"pl":"const empty_sigset = sigset_t{ .__bits = [_]u32{0} ** _SIG_WORDS }","src":819,"more_decls":null}{"pl":"const REG_RBP = 12","src":828,"more_decls":null}{"pl":"const REG_RIP = 21","src":829,"more_decls":null}{"pl":"const REG_RSP = 24","src":830,"more_decls":null}{"pl":"const EPERM = 1","src":849,"more_decls":null}{"pl":"const ENOENT = 2","src":850,"more_decls":null}{"pl":"const ESRCH = 3","src":851,"more_decls":null}{"pl":"const EINTR = 4","src":852,"more_decls":null}{"pl":"const EIO = 5","src":853,"more_decls":null}{"pl":"const ENXIO = 6","src":854,"more_decls":null}{"pl":"const E2BIG = 7","src":855,"more_decls":null}{"pl":"const ENOEXEC = 8","src":856,"more_decls":null}{"pl":"const EBADF = 9","src":857,"more_decls":null}{"pl":"const ECHILD = 10","src":858,"more_decls":null}{"pl":"const EDEADLK = 11","src":859,"more_decls":null}{"pl":"const ENOMEM = 12","src":861,"more_decls":null}{"pl":"const EACCES = 13","src":862,"more_decls":null}{"pl":"const EFAULT = 14","src":863,"more_decls":null}{"pl":"const ENOTBLK = 15","src":864,"more_decls":null}{"pl":"const EBUSY = 16","src":865,"more_decls":null}{"pl":"const EEXIST = 17","src":866,"more_decls":null}{"pl":"const EXDEV = 18","src":867,"more_decls":null}{"pl":"const ENODEV = 19","src":868,"more_decls":null}{"pl":"const ENOTDIR = 20","src":869,"more_decls":null}{"pl":"const EISDIR = 21","src":870,"more_decls":null}{"pl":"const EINVAL = 22","src":871,"more_decls":null}{"pl":"const ENFILE = 23","src":872,"more_decls":null}{"pl":"const EMFILE = 24","src":873,"more_decls":null}{"pl":"const ENOTTY = 25","src":874,"more_decls":null}{"pl":"const ETXTBSY = 26","src":875,"more_decls":null}{"pl":"const EFBIG = 27","src":876,"more_decls":null}{"pl":"const ENOSPC = 28","src":877,"more_decls":null}{"pl":"const ESPIPE = 29","src":878,"more_decls":null}{"pl":"const EROFS = 30","src":879,"more_decls":null}{"pl":"const EMLINK = 31","src":880,"more_decls":null}{"pl":"const EPIPE = 32","src":881,"more_decls":null}{"pl":"const EDOM = 33","src":884,"more_decls":null}{"pl":"const ERANGE = 34","src":885,"more_decls":null}{"pl":"const EAGAIN = 35","src":888,"more_decls":null}{"pl":"const EWOULDBLOCK = EAGAIN","src":889,"more_decls":null}{"pl":"const EINPROGRESS = 36","src":890,"more_decls":null}{"pl":"const EALREADY = 37","src":891,"more_decls":null}{"pl":"const ENOTSOCK = 38","src":894,"more_decls":null}{"pl":"const EDESTADDRREQ = 39","src":895,"more_decls":null}{"pl":"const EMSGSIZE = 40","src":896,"more_decls":null}{"pl":"const EPROTOTYPE = 41","src":897,"more_decls":null}{"pl":"const ENOPROTOOPT = 42","src":898,"more_decls":null}{"pl":"const EPROTONOSUPPORT = 43","src":899,"more_decls":null}{"pl":"const ESOCKTNOSUPPORT = 44","src":900,"more_decls":null}{"pl":"const EOPNOTSUPP = 45","src":901,"more_decls":null}{"pl":"const EPFNOSUPPORT = 46","src":902,"more_decls":null}{"pl":"const EAFNOSUPPORT = 47","src":903,"more_decls":null}{"pl":"const EADDRINUSE = 48","src":904,"more_decls":null}{"pl":"const EADDRNOTAVAIL = 49","src":905,"more_decls":null}{"pl":"const ENETDOWN = 50","src":908,"more_decls":null}{"pl":"const ENETUNREACH = 51","src":909,"more_decls":null}{"pl":"const ENETRESET = 52","src":910,"more_decls":null}{"pl":"const ECONNABORTED = 53","src":911,"more_decls":null}{"pl":"const ECONNRESET = 54","src":912,"more_decls":null}{"pl":"const ENOBUFS = 55","src":913,"more_decls":null}{"pl":"const EISCONN = 56","src":914,"more_decls":null}{"pl":"const ENOTCONN = 57","src":915,"more_decls":null}{"pl":"const ESHUTDOWN = 58","src":916,"more_decls":null}{"pl":"const ETOOMANYREFS = 59","src":917,"more_decls":null}{"pl":"const ETIMEDOUT = 60","src":918,"more_decls":null}{"pl":"const ECONNREFUSED = 61","src":919,"more_decls":null}{"pl":"const ELOOP = 62","src":921,"more_decls":null}{"pl":"const ENAMETOOLONG = 63","src":922,"more_decls":null}{"pl":"const EHOSTDOWN = 64","src":925,"more_decls":null}{"pl":"const EHOSTUNREACH = 65","src":926,"more_decls":null}{"pl":"const ENOTEMPTY = 66","src":927,"more_decls":null}{"pl":"const EPROCLIM = 67","src":930,"more_decls":null}{"pl":"const EUSERS = 68","src":931,"more_decls":null}{"pl":"const EDQUOT = 69","src":932,"more_decls":null}{"pl":"const ESTALE = 70","src":935,"more_decls":null}{"pl":"const EREMOTE = 71","src":936,"more_decls":null}{"pl":"const EBADRPC = 72","src":937,"more_decls":null}{"pl":"const ERPCMISMATCH = 73","src":938,"more_decls":null}{"pl":"const EPROGUNAVAIL = 74","src":939,"more_decls":null}{"pl":"const EPROGMISMATCH = 75","src":940,"more_decls":null}{"pl":"const EPROCUNAVAIL = 76","src":941,"more_decls":null}{"pl":"const ENOLCK = 77","src":943,"more_decls":null}{"pl":"const ENOSYS = 78","src":944,"more_decls":null}{"pl":"const EFTYPE = 79","src":946,"more_decls":null}{"pl":"const EAUTH = 80","src":947,"more_decls":null}{"pl":"const ENEEDAUTH = 81","src":948,"more_decls":null}{"pl":"const EIDRM = 82","src":951,"more_decls":null}{"pl":"const ENOMSG = 83","src":952,"more_decls":null}{"pl":"const EOVERFLOW = 84","src":953,"more_decls":null}{"pl":"const EILSEQ = 85","src":956,"more_decls":null}{"pl":"const ENOTSUP = 86","src":960,"more_decls":null}{"pl":"const ECANCELED = 87","src":963,"more_decls":null}{"pl":"const EBADMSG = 88","src":966,"more_decls":null}{"pl":"const ENODATA = 89","src":969,"more_decls":null}{"pl":"const ENOSR = 90","src":970,"more_decls":null}{"pl":"const ENOSTR = 91","src":971,"more_decls":null}{"pl":"const ETIME = 92","src":972,"more_decls":null}{"pl":"const ENOATTR = 93","src":975,"more_decls":null}{"pl":"const EMULTIHOP = 94","src":978,"more_decls":null}{"pl":"const ENOLINK = 95","src":979,"more_decls":null}{"pl":"const EPROTO = 96","src":980,"more_decls":null}{"pl":"const ELAST = 96","src":982,"more_decls":null}{"pl":"const MINSIGSTKSZ = 8192","src":984,"more_decls":null}{"pl":"const SIGSTKSZ = MINSIGSTKSZ + 32768","src":985,"more_decls":null}{"pl":"const SS_ONSTACK = 1","src":987,"more_decls":null}{"pl":"const SS_DISABLE = 4","src":988,"more_decls":null}{"pl":"const S_IFMT = 0o170000","src":996,"more_decls":null}{"pl":"const S_IFIFO = 0o010000","src":998,"more_decls":null}{"pl":"const S_IFCHR = 0o020000","src":999,"more_decls":null}{"pl":"const S_IFDIR = 0o040000","src":1000,"more_decls":null}{"pl":"const S_IFBLK = 0o060000","src":1001,"more_decls":null}{"pl":"const S_IFREG = 0o100000","src":1002,"more_decls":null}{"pl":"const S_IFLNK = 0o120000","src":1003,"more_decls":null}{"pl":"const S_IFSOCK = 0o140000","src":1004,"more_decls":null}{"pl":"const S_IFWHT = 0o160000","src":1005,"more_decls":null}{"pl":"const S_ISUID = 0o4000","src":1007,"more_decls":null}{"pl":"const S_ISGID = 0o2000","src":1008,"more_decls":null}{"pl":"const S_ISVTX = 0o1000","src":1009,"more_decls":null}{"pl":"const S_IRWXU = 0o700","src":1010,"more_decls":null}{"pl":"const S_IRUSR = 0o400","src":1011,"more_decls":null}{"pl":"const S_IWUSR = 0o200","src":1012,"more_decls":null}{"pl":"const S_IXUSR = 0o100","src":1013,"more_decls":null}{"pl":"const S_IRWXG = 0o070","src":1014,"more_decls":null}{"pl":"const S_IRGRP = 0o040","src":1015,"more_decls":null}{"pl":"const S_IWGRP = 0o020","src":1016,"more_decls":null}{"pl":"const S_IXGRP = 0o010","src":1017,"more_decls":null}{"pl":"const S_IRWXO = 0o007","src":1018,"more_decls":null}{"pl":"const S_IROTH = 0o004","src":1019,"more_decls":null}{"pl":"const S_IWOTH = 0o002","src":1020,"more_decls":null}{"pl":"const S_IXOTH = 0o001","src":1021,"more_decls":null}{"doc_comment":"Magic value that specify the use of the current working directory\nto determine the target of relative file paths in the openat() and\nsimilar syscalls.","pl":"const AT_FDCWD = -100","src":1058,"more_decls":null}{"doc_comment":"Check access using effective user and group ID","pl":"const AT_EACCESS = 0x0100","src":1061,"more_decls":null}{"doc_comment":"Do not follow symbolic links","pl":"const AT_SYMLINK_NOFOLLOW = 0x0200","src":1064,"more_decls":null}{"doc_comment":"Follow symbolic link","pl":"const AT_SYMLINK_FOLLOW = 0x0400","src":1067,"more_decls":null}{"doc_comment":"Remove directory instead of file","pl":"const AT_REMOVEDIR = 0x0800","src":1070,"more_decls":null}{"pl":"const HOST_NAME_MAX = 255","src":1072,"more_decls":null}{"doc_comment":"dummy for IP","pl":"const IPPROTO_IP = 0","src":1075,"more_decls":null}{"doc_comment":"IP6 hop-by-hop options","pl":"const IPPROTO_HOPOPTS = 0","src":1078,"more_decls":null}{"doc_comment":"control message protocol","pl":"const IPPROTO_ICMP = 1","src":1081,"more_decls":null}{"doc_comment":"group mgmt protocol","pl":"const IPPROTO_IGMP = 2","src":1084,"more_decls":null}{"doc_comment":"gateway^2 (deprecated)","pl":"const IPPROTO_GGP = 3","src":1087,"more_decls":null}{"doc_comment":"IP header","pl":"const IPPROTO_IPV4 = 4","src":1090,"more_decls":null}{"doc_comment":"IP inside IP","pl":"const IPPROTO_IPIP = 4","src":1093,"more_decls":null}{"doc_comment":"tcp","pl":"const IPPROTO_TCP = 6","src":1096,"more_decls":null}{"doc_comment":"exterior gateway protocol","pl":"const IPPROTO_EGP = 8","src":1099,"more_decls":null}{"doc_comment":"pup","pl":"const IPPROTO_PUP = 12","src":1102,"more_decls":null}{"doc_comment":"user datagram protocol","pl":"const IPPROTO_UDP = 17","src":1105,"more_decls":null}{"doc_comment":"xns idp","pl":"const IPPROTO_IDP = 22","src":1108,"more_decls":null}{"doc_comment":"tp-4 w/ class negotiation","pl":"const IPPROTO_TP = 29","src":1111,"more_decls":null}{"doc_comment":"DCCP","pl":"const IPPROTO_DCCP = 33","src":1114,"more_decls":null}{"doc_comment":"IP6 header","pl":"const IPPROTO_IPV6 = 41","src":1117,"more_decls":null}{"doc_comment":"IP6 routing header","pl":"const IPPROTO_ROUTING = 43","src":1120,"more_decls":null}{"doc_comment":"IP6 fragmentation header","pl":"const IPPROTO_FRAGMENT = 44","src":1123,"more_decls":null}{"doc_comment":"resource reservation","pl":"const IPPROTO_RSVP = 46","src":1126,"more_decls":null}{"doc_comment":"GRE encaps RFC 1701","pl":"const IPPROTO_GRE = 47","src":1129,"more_decls":null}{"doc_comment":"encap. security payload","pl":"const IPPROTO_ESP = 50","src":1132,"more_decls":null}{"doc_comment":"authentication header","pl":"const IPPROTO_AH = 51","src":1135,"more_decls":null}{"doc_comment":"IP Mobility RFC 2004","pl":"const IPPROTO_MOBILE = 55","src":1138,"more_decls":null}{"doc_comment":"IPv6 ICMP","pl":"const IPPROTO_IPV6_ICMP = 58","src":1141,"more_decls":null}{"doc_comment":"ICMP6","pl":"const IPPROTO_ICMPV6 = 58","src":1144,"more_decls":null}{"doc_comment":"IP6 no next header","pl":"const IPPROTO_NONE = 59","src":1147,"more_decls":null}{"doc_comment":"IP6 destination option","pl":"const IPPROTO_DSTOPTS = 60","src":1150,"more_decls":null}{"doc_comment":"ISO cnlp","pl":"const IPPROTO_EON = 80","src":1153,"more_decls":null}{"doc_comment":"Ethernet-in-IP","pl":"const IPPROTO_ETHERIP = 97","src":1156,"more_decls":null}{"doc_comment":"encapsulation header","pl":"const IPPROTO_ENCAP = 98","src":1159,"more_decls":null}{"doc_comment":"Protocol indep. multicast","pl":"const IPPROTO_PIM = 103","src":1162,"more_decls":null}{"doc_comment":"IP Payload Comp. Protocol","pl":"const IPPROTO_IPCOMP = 108","src":1165,"more_decls":null}{"doc_comment":"VRRP RFC 2338","pl":"const IPPROTO_VRRP = 112","src":1168,"more_decls":null}{"doc_comment":"Common Address Resolution Protocol","pl":"const IPPROTO_CARP = 112","src":1171,"more_decls":null}{"doc_comment":"L2TPv3","pl":"const IPPROTO_L2TP = 115","src":1174,"more_decls":null}{"doc_comment":"SCTP","pl":"const IPPROTO_SCTP = 132","src":1177,"more_decls":null}{"doc_comment":"PFSYNC","pl":"const IPPROTO_PFSYNC = 240","src":1180,"more_decls":null}{"doc_comment":"raw IP packet","pl":"const IPPROTO_RAW = 255","src":1183,"more_decls":null}{"pl":"const rlim_t = u64","src":1203,"more_decls":null}{"doc_comment":"No limit","pl":"const RLIM_INFINITY: rlim_t = (1 << 63) - 1","src":1206,"more_decls":null}{"pl":"const RLIM_SAVED_MAX = RLIM_INFINITY","src":1208,"more_decls":null}{"pl":"const RLIM_SAVED_CUR = RLIM_INFINITY","src":1209,"more_decls":null}{"pl":"const SHUT_RD = 0","src":1218,"more_decls":null}{"pl":"const SHUT_WR = 1","src":1219,"more_decls":null}{"pl":"const SHUT_RDWR = 2","src":1220,"more_decls":null}]