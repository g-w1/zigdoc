[{"pl":"pub const sockaddr = extern struct ","src":20,"more_decls":{"pl":"len: u8","src":21,"more_decls":null}{"pl":"family: sa_family_t","src":22,"more_decls":null}{"pl":"data: [14]u8","src":23,"more_decls":null}}{"pl":"pub const sockaddr_in = extern struct ","src":25,"more_decls":{"pl":"len: u8 = @sizeOf(sockaddr_in)","src":26,"more_decls":null}{"pl":"family: sa_family_t = AF_INET","src":27,"more_decls":null}{"pl":"port: in_port_t","src":28,"more_decls":null}{"pl":"addr: u32","src":29,"more_decls":null}{"pl":"zero: [8]u8 = [8]u8{ 0, 0, 0, 0, 0, 0, 0, 0 }","src":30,"more_decls":null}}{"pl":"pub const sockaddr_in6 = extern struct ","src":32,"more_decls":{"pl":"len: u8 = @sizeOf(sockaddr_in6)","src":33,"more_decls":null}{"pl":"family: sa_family_t = AF_INET6","src":34,"more_decls":null}{"pl":"port: in_port_t","src":35,"more_decls":null}{"pl":"flowinfo: u32","src":36,"more_decls":null}{"pl":"addr: [16]u8","src":37,"more_decls":null}{"pl":"scope_id: u32","src":38,"more_decls":null}}{"doc_comment":"UNIX domain socket","pl":"pub const sockaddr_un = extern struct ","src":42,"more_decls":{"pl":"len: u8 = @sizeOf(sockaddr_un)","src":43,"more_decls":null}{"pl":"family: sa_family_t = AF_UNIX","src":44,"more_decls":null}{"pl":"path: [104]u8","src":45,"more_decls":null}}{"pl":"pub const timeval = extern struct ","src":48,"more_decls":{"pl":"tv_sec: c_long","src":49,"more_decls":null}{"pl":"tv_usec: i32","src":50,"more_decls":null}}{"pl":"pub const timezone = extern struct ","src":53,"more_decls":{"pl":"tz_minuteswest: i32","src":54,"more_decls":null}{"pl":"tz_dsttime: i32","src":55,"more_decls":null}}{"pl":"pub const mach_timebase_info_data = extern struct ","src":58,"more_decls":{"pl":"numer: u32","src":59,"more_decls":null}{"pl":"denom: u32","src":60,"more_decls":null}}{"pl":"pub const Flock = extern struct ","src":66,"more_decls":{"pl":"l_start: off_t","src":67,"more_decls":null}{"pl":"l_len: off_t","src":68,"more_decls":null}{"pl":"l_pid: pid_t","src":69,"more_decls":null}{"pl":"l_type: i16","src":70,"more_decls":null}{"pl":"l_whence: i16","src":71,"more_decls":null}}{"pl":"pub const libc_stat = extern struct ","src":74,"more_decls":{"pl":"dev: i32","src":75,"more_decls":null}{"pl":"mode: u16","src":76,"more_decls":null}{"pl":"nlink: u16","src":77,"more_decls":null}{"pl":"ino: ino_t","src":78,"more_decls":null}{"pl":"uid: uid_t","src":79,"more_decls":null}{"pl":"gid: gid_t","src":80,"more_decls":null}{"pl":"rdev: i32","src":81,"more_decls":null}{"pl":"atimesec: isize","src":82,"more_decls":null}{"pl":"atimensec: isize","src":83,"more_decls":null}{"pl":"mtimesec: isize","src":84,"more_decls":null}{"pl":"mtimensec: isize","src":85,"more_decls":null}{"pl":"ctimesec: isize","src":86,"more_decls":null}{"pl":"ctimensec: isize","src":87,"more_decls":null}{"pl":"birthtimesec: isize","src":88,"more_decls":null}{"pl":"birthtimensec: isize","src":89,"more_decls":null}{"pl":"size: off_t","src":90,"more_decls":null}{"pl":"blocks: i64","src":91,"more_decls":null}{"pl":"blksize: i32","src":92,"more_decls":null}{"pl":"flags: u32","src":93,"more_decls":null}{"pl":"gen: u32","src":94,"more_decls":null}{"pl":"lspare: i32","src":95,"more_decls":null}{"pl":"qspare: [2]i64","src":96,"more_decls":null}{"pl":"pub fn atime(self: @This()) timespec {\n    return timespec{\n        .tv_sec = self.atimesec,\n        .tv_nsec = self.atimensec,\n    };\n}","src":98,"more_decls":null}{"pl":"pub fn mtime(self: @This()) timespec {\n    return timespec{\n        .tv_sec = self.mtimesec,\n        .tv_nsec = self.mtimensec,\n    };\n}","src":105,"more_decls":null}{"pl":"pub fn ctime(self: @This()) timespec {\n    return timespec{\n        .tv_sec = self.ctimesec,\n        .tv_nsec = self.ctimensec,\n    };\n}","src":112,"more_decls":null}}{"pl":"pub const timespec = extern struct ","src":120,"more_decls":{"pl":"tv_sec: isize","src":121,"more_decls":null}{"pl":"tv_nsec: isize","src":122,"more_decls":null}}{"pl":"pub const siginfo_t = extern struct ","src":133,"more_decls":{"pl":"signo: c_int","src":134,"more_decls":null}{"pl":"errno: c_int","src":135,"more_decls":null}{"pl":"code: c_int","src":136,"more_decls":null}{"pl":"pid: pid_t","src":137,"more_decls":null}{"pl":"uid: uid_t","src":138,"more_decls":null}{"pl":"status: c_int","src":139,"more_decls":null}{"pl":"addr: *c_void","src":140,"more_decls":null}{"pl":"value: extern union {\n        int: c_int,\n        ptr: *c_void,\n    }","src":141,"more_decls":null}{"pl":"si_band: c_long","src":145,"more_decls":null}{"pl":"_pad: [7]c_ulong","src":146,"more_decls":null}}{"doc_comment":"Renamed from `sigaction` to `Sigaction` to avoid conflict with function name.","pl":"pub const Sigaction = extern struct ","src":150,"more_decls":{"pl":"handler: extern union {\n        handler: ?handler_fn,\n        sigaction: ?sigaction_fn,\n    }","src":154,"more_decls":null}{"pl":"mask: sigset_t","src":158,"more_decls":null}{"pl":"flags: c_uint","src":159,"more_decls":null}{"pl":"const handler_fn = fn (c_int) callconv(.C) void","src":151,"more_decls":null}{"pl":"const sigaction_fn = fn (c_int, *const siginfo_t, ?*const c_void) callconv(.C) void","src":152,"more_decls":null}}{"pl":"pub const dirent = extern struct ","src":162,"more_decls":{"pl":"d_ino: usize","src":163,"more_decls":null}{"pl":"d_seekoff: usize","src":164,"more_decls":null}{"pl":"d_reclen: u16","src":165,"more_decls":null}{"pl":"d_namlen: u16","src":166,"more_decls":null}{"pl":"d_type: u8","src":167,"more_decls":null}{"pl":"d_name: u8","src":168,"more_decls":null}{"pl":"pub fn reclen(self: dirent) u16 {\n    return self.d_reclen;\n}","src":170,"more_decls":null}}{"doc_comment":"Renamed from `kevent` to `Kevent` to avoid conflict with function name.","pl":"pub const Kevent = extern struct ","src":176,"more_decls":{"pl":"ident: usize","src":177,"more_decls":null}{"pl":"filter: i16","src":178,"more_decls":null}{"pl":"flags: u16","src":179,"more_decls":null}{"pl":"fflags: u32","src":180,"more_decls":null}{"pl":"data: isize","src":181,"more_decls":null}{"pl":"udata: usize","src":182,"more_decls":null}}{"pl":"pub const kevent64_s = extern struct ","src":197,"more_decls":{"pl":"ident: u64","src":198,"more_decls":null}{"pl":"filter: i16","src":199,"more_decls":null}{"pl":"flags: u16","src":200,"more_decls":null}{"pl":"fflags: u32","src":201,"more_decls":null}{"pl":"data: i64","src":202,"more_decls":null}{"pl":"udata: u64","src":203,"more_decls":null}{"pl":"ext: [2]u64","src":204,"more_decls":null}}{"pl":"pub const mach_timespec_t = extern struct ","src":225,"more_decls":{"pl":"tv_sec: c_uint","src":226,"more_decls":null}{"pl":"tv_nsec: clock_res_t","src":227,"more_decls":null}}{"pl":"pub const stack_t = extern struct ","src":1195,"more_decls":{"pl":"ss_sp: [*]u8","src":1196,"more_decls":null}{"pl":"ss_size: isize","src":1197,"more_decls":null}{"pl":"ss_flags: i32","src":1198,"more_decls":null}}{"pl":"pub const addrinfo = extern struct ","src":1276,"more_decls":{"pl":"flags: i32","src":1277,"more_decls":null}{"pl":"family: i32","src":1278,"more_decls":null}{"pl":"socktype: i32","src":1279,"more_decls":null}{"pl":"protocol: i32","src":1280,"more_decls":null}{"pl":"addrlen: socklen_t","src":1281,"more_decls":null}{"pl":"canonname: ?[*:0]u8","src":1282,"more_decls":null}{"pl":"addr: ?*sockaddr","src":1283,"more_decls":null}{"pl":"next: ?*addrinfo","src":1284,"more_decls":null}}{"pl":"pub const pollfd = extern struct ","src":1464,"more_decls":{"pl":"fd: fd_t","src":1465,"more_decls":null}{"pl":"events: i16","src":1466,"more_decls":null}{"pl":"revents: i16","src":1467,"more_decls":null}}{"pl":"pub const rusage = extern struct ","src":1504,"more_decls":{"pl":"utime: timeval","src":1505,"more_decls":null}{"pl":"stime: timeval","src":1506,"more_decls":null}{"pl":"maxrss: isize","src":1507,"more_decls":null}{"pl":"ixrss: isize","src":1508,"more_decls":null}{"pl":"idrss: isize","src":1509,"more_decls":null}{"pl":"isrss: isize","src":1510,"more_decls":null}{"pl":"minflt: isize","src":1511,"more_decls":null}{"pl":"majflt: isize","src":1512,"more_decls":null}{"pl":"nswap: isize","src":1513,"more_decls":null}{"pl":"inblock: isize","src":1514,"more_decls":null}{"pl":"oublock: isize","src":1515,"more_decls":null}{"pl":"msgsnd: isize","src":1516,"more_decls":null}{"pl":"msgrcv: isize","src":1517,"more_decls":null}{"pl":"nsignals: isize","src":1518,"more_decls":null}{"pl":"nvcsw: isize","src":1519,"more_decls":null}{"pl":"nivcsw: isize","src":1520,"more_decls":null}}{"pl":"pub const rlimit_resource = extern enum","src":1523,"more_decls":{"pl":"CPU = 0","src":1524,"more_decls":null}{"pl":"FSIZE = 1","src":1525,"more_decls":null}{"pl":"DATA = 2","src":1526,"more_decls":null}{"pl":"STACK = 3","src":1527,"more_decls":null}{"pl":"CORE = 4","src":1528,"more_decls":null}{"pl":"AS = 5","src":1529,"more_decls":null}{"pl":"RSS = 5","src":1530,"more_decls":null}{"pl":"MEMLOCK = 6","src":1531,"more_decls":null}{"pl":"NPROC = 7","src":1532,"more_decls":null}{"pl":"NOFILE = 8","src":1533,"more_decls":null}{"pl":"_","src":1535,"more_decls":null}}{"pl":"pub const rlimit = extern struct ","src":1546,"more_decls":{"doc_comment":"Soft limit","pl":"cur: rlim_t","src":1548,"more_decls":null}{"doc_comment":"Hard limit","pl":"max: rlim_t","src":1550,"more_decls":null}}{"pl":"pub const TCSA = extern enum","src":1671,"more_decls":{"pl":"NOW","src":1672,"more_decls":null}{"pl":"DRAIN","src":1673,"more_decls":null}{"pl":"FLUSH","src":1674,"more_decls":null}{"pl":"_","src":1675,"more_decls":null}}{"pl":"pub const termios = extern struct ","src":1716,"more_decls":{"pl":"iflag: tcflag_t","src":1717,"more_decls":null}{"pl":"oflag: tcflag_t","src":1718,"more_decls":null}{"pl":"cflag: tcflag_t","src":1719,"more_decls":null}{"pl":"lflag: tcflag_t","src":1720,"more_decls":null}{"pl":"cc: [NCCS]cc_t","src":1721,"more_decls":null}{"pl":"ispeed: speed_t align(8)","src":1722,"more_decls":null}{"pl":"ospeed: speed_t","src":1723,"more_decls":null}}{"pl":"pub const winsize = extern struct ","src":1726,"more_decls":{"pl":"ws_row: u16","src":1727,"more_decls":null}{"pl":"ws_col: u16","src":1728,"more_decls":null}{"pl":"ws_xpixel: u16","src":1729,"more_decls":null}{"pl":"ws_ypixel: u16","src":1730,"more_decls":null}}{"pl":"pub fn WEXITSTATUS(x: u32) u32 {\n    return x >> 8;\n}","src":838,"more_decls":null}{"pl":"pub fn WTERMSIG(x: u32) u32 {\n    return wstatus(x);\n}","src":841,"more_decls":null}{"pl":"pub fn WSTOPSIG(x: u32) u32 {\n    return x >> 8;\n}","src":844,"more_decls":null}{"pl":"pub fn WIFEXITED(x: u32) bool {\n    return wstatus(x) == 0;\n}","src":847,"more_decls":null}{"pl":"pub fn WIFSTOPPED(x: u32) bool {\n    return wstatus(x) == wstopped and WSTOPSIG(x) != 0x13;\n}","src":850,"more_decls":null}{"pl":"pub fn WIFSIGNALED(x: u32) bool {\n    return wstatus(x) != wstopped and wstatus(x) != 0;\n}","src":853,"more_decls":null}{"pl":"pub fn S_ISFIFO(m: u32) bool {\n    return m & S_IFMT == S_IFIFO;\n}","src":1228,"more_decls":null}{"pl":"pub fn S_ISCHR(m: u32) bool {\n    return m & S_IFMT == S_IFCHR;\n}","src":1232,"more_decls":null}{"pl":"pub fn S_ISDIR(m: u32) bool {\n    return m & S_IFMT == S_IFDIR;\n}","src":1236,"more_decls":null}{"pl":"pub fn S_ISBLK(m: u32) bool {\n    return m & S_IFMT == S_IFBLK;\n}","src":1240,"more_decls":null}{"pl":"pub fn S_ISREG(m: u32) bool {\n    return m & S_IFMT == S_IFREG;\n}","src":1244,"more_decls":null}{"pl":"pub fn S_ISLNK(m: u32) bool {\n    return m & S_IFMT == S_IFLNK;\n}","src":1248,"more_decls":null}{"pl":"pub fn S_ISSOCK(m: u32) bool {\n    return m & S_IFMT == S_IFSOCK;\n}","src":1252,"more_decls":null}{"pl":"pub fn S_IWHT(m: u32) bool {\n    return m & S_IFMT == S_IFWHT;\n}","src":1256,"more_decls":null}{"pl":"const fd_t = c_int","src":11,"more_decls":null}{"pl":"const pid_t = c_int","src":12,"more_decls":null}{"pl":"const mode_t = c_uint","src":13,"more_decls":null}{"pl":"const uid_t = u32","src":14,"more_decls":null}{"pl":"const gid_t = u32","src":15,"more_decls":null}{"pl":"const in_port_t = u16","src":17,"more_decls":null}{"pl":"const sa_family_t = u8","src":18,"more_decls":null}{"pl":"const socklen_t = u32","src":19,"more_decls":null}{"pl":"const off_t = i64","src":63,"more_decls":null}{"pl":"const ino_t = u64","src":64,"more_decls":null}{"pl":"const sigset_t = u32","src":125,"more_decls":null}{"pl":"const empty_sigset: sigset_t = 0","src":126,"more_decls":null}{"pl":"const SIG_ERR = @intToPtr(?Sigaction.sigaction_fn, maxInt(usize))","src":128,"more_decls":null}{"pl":"const SIG_DFL = @intToPtr(?Sigaction.sigaction_fn, 0)","src":129,"more_decls":null}{"pl":"const SIG_IGN = @intToPtr(?Sigaction.sigaction_fn, 1)","src":130,"more_decls":null}{"pl":"const SIG_HOLD = @intToPtr(?Sigaction.sigaction_fn, 5)","src":131,"more_decls":null}{"pl":"const mach_port_t = c_uint","src":220,"more_decls":null}{"pl":"const clock_serv_t = mach_port_t","src":221,"more_decls":null}{"pl":"const clock_res_t = c_int","src":222,"more_decls":null}{"pl":"const mach_port_name_t = natural_t","src":223,"more_decls":null}{"pl":"const natural_t = c_uint","src":224,"more_decls":null}{"pl":"const kern_return_t = c_int","src":229,"more_decls":null}{"pl":"const host_t = mach_port_t","src":230,"more_decls":null}{"pl":"const CALENDAR_CLOCK = 1","src":231,"more_decls":null}{"pl":"const PATH_MAX = 1024","src":233,"more_decls":null}{"pl":"const STDIN_FILENO = 0","src":235,"more_decls":null}{"pl":"const STDOUT_FILENO = 1","src":236,"more_decls":null}{"pl":"const STDERR_FILENO = 2","src":237,"more_decls":null}{"doc_comment":"[MC2] no permissions","pl":"const PROT_NONE = 0x00","src":240,"more_decls":null}{"doc_comment":"[MC2] pages can be read","pl":"const PROT_READ = 0x01","src":243,"more_decls":null}{"doc_comment":"[MC2] pages can be written","pl":"const PROT_WRITE = 0x02","src":246,"more_decls":null}{"doc_comment":"[MC2] pages can be executed","pl":"const PROT_EXEC = 0x04","src":249,"more_decls":null}{"doc_comment":"allocated from memory, swap space","pl":"const MAP_ANONYMOUS = 0x1000","src":252,"more_decls":null}{"doc_comment":"map from file (default)","pl":"const MAP_FILE = 0x0000","src":255,"more_decls":null}{"doc_comment":"interpret addr exactly","pl":"const MAP_FIXED = 0x0010","src":258,"more_decls":null}{"doc_comment":"region may contain semaphores","pl":"const MAP_HASSEMAPHORE = 0x0200","src":261,"more_decls":null}{"doc_comment":"changes are private","pl":"const MAP_PRIVATE = 0x0002","src":264,"more_decls":null}{"doc_comment":"share changes","pl":"const MAP_SHARED = 0x0001","src":267,"more_decls":null}{"doc_comment":"don't cache pages for this mapping","pl":"const MAP_NOCACHE = 0x0400","src":270,"more_decls":null}{"doc_comment":"don't reserve needed swap area","pl":"const MAP_NORESERVE = 0x0040","src":273,"more_decls":null}{"pl":"const MAP_FAILED = @intToPtr(*c_void, maxInt(usize))","src":274,"more_decls":null}{"doc_comment":"[XSI] no hang in wait/no child to reap","pl":"const WNOHANG = 0x00000001","src":277,"more_decls":null}{"doc_comment":"[XSI] notify on stop, untraced child","pl":"const WUNTRACED = 0x00000002","src":280,"more_decls":null}{"doc_comment":"take signal on signal stack","pl":"const SA_ONSTACK = 0x0001","src":283,"more_decls":null}{"doc_comment":"restart system on signal return","pl":"const SA_RESTART = 0x0002","src":286,"more_decls":null}{"doc_comment":"reset to SIG_DFL when taking signal","pl":"const SA_RESETHAND = 0x0004","src":289,"more_decls":null}{"doc_comment":"do not generate SIGCHLD on child stop","pl":"const SA_NOCLDSTOP = 0x0008","src":292,"more_decls":null}{"doc_comment":"don't mask the signal we're delivering","pl":"const SA_NODEFER = 0x0010","src":295,"more_decls":null}{"doc_comment":"don't keep zombies around","pl":"const SA_NOCLDWAIT = 0x0020","src":298,"more_decls":null}{"doc_comment":"signal handler with SA_SIGINFO args","pl":"const SA_SIGINFO = 0x0040","src":301,"more_decls":null}{"doc_comment":"do not bounce off kernel's sigtramp","pl":"const SA_USERTRAMP = 0x0100","src":304,"more_decls":null}{"doc_comment":"signal handler with SA_SIGINFO args with 64bit   regs information","pl":"const SA_64REGSET = 0x0200","src":307,"more_decls":null}{"pl":"const O_PATH = 0x0000","src":309,"more_decls":null}{"pl":"const F_OK = 0","src":311,"more_decls":null}{"pl":"const X_OK = 1","src":312,"more_decls":null}{"pl":"const W_OK = 2","src":313,"more_decls":null}{"pl":"const R_OK = 4","src":314,"more_decls":null}{"doc_comment":"open for reading only","pl":"const O_RDONLY = 0x0000","src":317,"more_decls":null}{"doc_comment":"open for writing only","pl":"const O_WRONLY = 0x0001","src":320,"more_decls":null}{"doc_comment":"open for reading and writing","pl":"const O_RDWR = 0x0002","src":323,"more_decls":null}{"doc_comment":"do not block on open or for data to become available","pl":"const O_NONBLOCK = 0x0004","src":326,"more_decls":null}{"doc_comment":"append on each write","pl":"const O_APPEND = 0x0008","src":329,"more_decls":null}{"doc_comment":"create file if it does not exist","pl":"const O_CREAT = 0x0200","src":332,"more_decls":null}{"doc_comment":"truncate size to 0","pl":"const O_TRUNC = 0x0400","src":335,"more_decls":null}{"doc_comment":"error if O_CREAT and the file exists","pl":"const O_EXCL = 0x0800","src":338,"more_decls":null}{"doc_comment":"atomically obtain a shared lock","pl":"const O_SHLOCK = 0x0010","src":341,"more_decls":null}{"doc_comment":"atomically obtain an exclusive lock","pl":"const O_EXLOCK = 0x0020","src":344,"more_decls":null}{"doc_comment":"do not follow symlinks","pl":"const O_NOFOLLOW = 0x0100","src":347,"more_decls":null}{"doc_comment":"allow open of symlinks","pl":"const O_SYMLINK = 0x200000","src":350,"more_decls":null}{"doc_comment":"descriptor requested for event notifications only","pl":"const O_EVTONLY = 0x8000","src":353,"more_decls":null}{"doc_comment":"mark as close-on-exec","pl":"const O_CLOEXEC = 0x1000000","src":356,"more_decls":null}{"pl":"const O_ACCMODE = 3","src":358,"more_decls":null}{"pl":"const O_ALERT = 536870912","src":359,"more_decls":null}{"pl":"const O_ASYNC = 64","src":360,"more_decls":null}{"pl":"const O_DIRECTORY = 1048576","src":361,"more_decls":null}{"pl":"const O_DP_GETRAWENCRYPTED = 1","src":362,"more_decls":null}{"pl":"const O_DP_GETRAWUNENCRYPTED = 2","src":363,"more_decls":null}{"pl":"const O_DSYNC = 4194304","src":364,"more_decls":null}{"pl":"const O_FSYNC = O_SYNC","src":365,"more_decls":null}{"pl":"const O_NOCTTY = 131072","src":366,"more_decls":null}{"pl":"const O_POPUP = 2147483648","src":367,"more_decls":null}{"pl":"const O_SYNC = 128","src":368,"more_decls":null}{"pl":"const SEEK_SET = 0x0","src":370,"more_decls":null}{"pl":"const SEEK_CUR = 0x1","src":371,"more_decls":null}{"pl":"const SEEK_END = 0x2","src":372,"more_decls":null}{"pl":"const DT_UNKNOWN = 0","src":374,"more_decls":null}{"pl":"const DT_FIFO = 1","src":375,"more_decls":null}{"pl":"const DT_CHR = 2","src":376,"more_decls":null}{"pl":"const DT_DIR = 4","src":377,"more_decls":null}{"pl":"const DT_BLK = 6","src":378,"more_decls":null}{"pl":"const DT_REG = 8","src":379,"more_decls":null}{"pl":"const DT_LNK = 10","src":380,"more_decls":null}{"pl":"const DT_SOCK = 12","src":381,"more_decls":null}{"pl":"const DT_WHT = 14","src":382,"more_decls":null}{"doc_comment":"block specified signal set","pl":"const SIG_BLOCK = 1","src":385,"more_decls":null}{"doc_comment":"unblock specified signal set","pl":"const SIG_UNBLOCK = 2","src":388,"more_decls":null}{"doc_comment":"set specified signal set","pl":"const SIG_SETMASK = 3","src":391,"more_decls":null}{"doc_comment":"hangup","pl":"const SIGHUP = 1","src":394,"more_decls":null}{"doc_comment":"interrupt","pl":"const SIGINT = 2","src":397,"more_decls":null}{"doc_comment":"quit","pl":"const SIGQUIT = 3","src":400,"more_decls":null}{"doc_comment":"illegal instruction (not reset when caught)","pl":"const SIGILL = 4","src":403,"more_decls":null}{"doc_comment":"trace trap (not reset when caught)","pl":"const SIGTRAP = 5","src":406,"more_decls":null}{"doc_comment":"abort()","pl":"const SIGABRT = 6","src":409,"more_decls":null}{"doc_comment":"pollable event ([XSR] generated, not supported)","pl":"const SIGPOLL = 7","src":412,"more_decls":null}{"doc_comment":"compatibility","pl":"const SIGIOT = SIGABRT","src":415,"more_decls":null}{"doc_comment":"EMT instruction","pl":"const SIGEMT = 7","src":418,"more_decls":null}{"doc_comment":"floating point exception","pl":"const SIGFPE = 8","src":421,"more_decls":null}{"doc_comment":"kill (cannot be caught or ignored)","pl":"const SIGKILL = 9","src":424,"more_decls":null}{"doc_comment":"bus error","pl":"const SIGBUS = 10","src":427,"more_decls":null}{"doc_comment":"segmentation violation","pl":"const SIGSEGV = 11","src":430,"more_decls":null}{"doc_comment":"bad argument to system call","pl":"const SIGSYS = 12","src":433,"more_decls":null}{"doc_comment":"write on a pipe with no one to read it","pl":"const SIGPIPE = 13","src":436,"more_decls":null}{"doc_comment":"alarm clock","pl":"const SIGALRM = 14","src":439,"more_decls":null}{"doc_comment":"software termination signal from kill","pl":"const SIGTERM = 15","src":442,"more_decls":null}{"doc_comment":"urgent condition on IO channel","pl":"const SIGURG = 16","src":445,"more_decls":null}{"doc_comment":"sendable stop signal not from tty","pl":"const SIGSTOP = 17","src":448,"more_decls":null}{"doc_comment":"stop signal from tty","pl":"const SIGTSTP = 18","src":451,"more_decls":null}{"doc_comment":"continue a stopped process","pl":"const SIGCONT = 19","src":454,"more_decls":null}{"doc_comment":"to parent on child stop or exit","pl":"const SIGCHLD = 20","src":457,"more_decls":null}{"doc_comment":"to readers pgrp upon background tty read","pl":"const SIGTTIN = 21","src":460,"more_decls":null}{"doc_comment":"like TTIN for output if (tp->t_local&LTOSTOP)","pl":"const SIGTTOU = 22","src":463,"more_decls":null}{"doc_comment":"input/output possible signal","pl":"const SIGIO = 23","src":466,"more_decls":null}{"doc_comment":"exceeded CPU time limit","pl":"const SIGXCPU = 24","src":469,"more_decls":null}{"doc_comment":"exceeded file size limit","pl":"const SIGXFSZ = 25","src":472,"more_decls":null}{"doc_comment":"virtual time alarm","pl":"const SIGVTALRM = 26","src":475,"more_decls":null}{"doc_comment":"profiling time alarm","pl":"const SIGPROF = 27","src":478,"more_decls":null}{"doc_comment":"window size changes","pl":"const SIGWINCH = 28","src":481,"more_decls":null}{"doc_comment":"information request","pl":"const SIGINFO = 29","src":484,"more_decls":null}{"doc_comment":"user defined signal 1","pl":"const SIGUSR1 = 30","src":487,"more_decls":null}{"doc_comment":"user defined signal 2","pl":"const SIGUSR2 = 31","src":490,"more_decls":null}{"doc_comment":"no flag value","pl":"const KEVENT_FLAG_NONE = 0x000","src":493,"more_decls":null}{"doc_comment":"immediate timeout","pl":"const KEVENT_FLAG_IMMEDIATE = 0x001","src":496,"more_decls":null}{"doc_comment":"output events only include change","pl":"const KEVENT_FLAG_ERROR_EVENTS = 0x002","src":499,"more_decls":null}{"doc_comment":"add event to kq (implies enable)","pl":"const EV_ADD = 0x0001","src":502,"more_decls":null}{"doc_comment":"delete event from kq","pl":"const EV_DELETE = 0x0002","src":505,"more_decls":null}{"doc_comment":"enable event","pl":"const EV_ENABLE = 0x0004","src":508,"more_decls":null}{"doc_comment":"disable event (not reported)","pl":"const EV_DISABLE = 0x0008","src":511,"more_decls":null}{"doc_comment":"only report one occurrence","pl":"const EV_ONESHOT = 0x0010","src":514,"more_decls":null}{"doc_comment":"clear event state after reporting","pl":"const EV_CLEAR = 0x0020","src":517,"more_decls":null}{"doc_comment":"force immediate event output\n... with or without EV_ERROR\n... use KEVENT_FLAG_ERROR_EVENTS\non syscalls supporting flags","pl":"const EV_RECEIPT = 0x0040","src":523,"more_decls":null}{"doc_comment":"disable event after reporting","pl":"const EV_DISPATCH = 0x0080","src":526,"more_decls":null}{"doc_comment":"unique kevent per udata value","pl":"const EV_UDATA_SPECIFIC = 0x0100","src":529,"more_decls":null}{"doc_comment":"... in combination with EV_DELETE\nwill defer delete until udata-specific\nevent enabled. EINPROGRESS will be\nreturned to indicate the deferral","pl":"const EV_DISPATCH2 = EV_DISPATCH | EV_UDATA_SPECIFIC","src":535,"more_decls":null}{"doc_comment":"report that source has vanished\n... only valid with EV_DISPATCH2","pl":"const EV_VANISHED = 0x0200","src":539,"more_decls":null}{"doc_comment":"reserved by system","pl":"const EV_SYSFLAGS = 0xF000","src":542,"more_decls":null}{"doc_comment":"filter-specific flag","pl":"const EV_FLAG0 = 0x1000","src":545,"more_decls":null}{"doc_comment":"filter-specific flag","pl":"const EV_FLAG1 = 0x2000","src":548,"more_decls":null}{"doc_comment":"EOF detected","pl":"const EV_EOF = 0x8000","src":551,"more_decls":null}{"doc_comment":"error, data contains errno","pl":"const EV_ERROR = 0x4000","src":554,"more_decls":null}{"pl":"const EV_POLL = EV_FLAG0","src":556,"more_decls":null}{"pl":"const EV_OOBAND = EV_FLAG1","src":557,"more_decls":null}{"pl":"const EVFILT_READ = -1","src":559,"more_decls":null}{"pl":"const EVFILT_WRITE = -2","src":560,"more_decls":null}{"doc_comment":"attached to aio requests","pl":"const EVFILT_AIO = -3","src":563,"more_decls":null}{"doc_comment":"attached to vnodes","pl":"const EVFILT_VNODE = -4","src":566,"more_decls":null}{"doc_comment":"attached to struct proc","pl":"const EVFILT_PROC = -5","src":569,"more_decls":null}{"doc_comment":"attached to struct proc","pl":"const EVFILT_SIGNAL = -6","src":572,"more_decls":null}{"doc_comment":"timers","pl":"const EVFILT_TIMER = -7","src":575,"more_decls":null}{"doc_comment":"Mach portsets","pl":"const EVFILT_MACHPORT = -8","src":578,"more_decls":null}{"doc_comment":"Filesystem events","pl":"const EVFILT_FS = -9","src":581,"more_decls":null}{"doc_comment":"User events","pl":"const EVFILT_USER = -10","src":584,"more_decls":null}{"doc_comment":"Virtual memory events","pl":"const EVFILT_VM = -12","src":587,"more_decls":null}{"doc_comment":"Exception events","pl":"const EVFILT_EXCEPT = -15","src":590,"more_decls":null}{"pl":"const EVFILT_SYSCOUNT = 17","src":592,"more_decls":null}{"doc_comment":"On input, NOTE_TRIGGER causes the event to be triggered for output.","pl":"const NOTE_TRIGGER = 0x01000000","src":595,"more_decls":null}{"doc_comment":"ignore input fflags","pl":"const NOTE_FFNOP = 0x00000000","src":598,"more_decls":null}{"doc_comment":"and fflags","pl":"const NOTE_FFAND = 0x40000000","src":601,"more_decls":null}{"doc_comment":"or fflags","pl":"const NOTE_FFOR = 0x80000000","src":604,"more_decls":null}{"doc_comment":"copy fflags","pl":"const NOTE_FFCOPY = 0xc0000000","src":607,"more_decls":null}{"doc_comment":"mask for operations","pl":"const NOTE_FFCTRLMASK = 0xc0000000","src":610,"more_decls":null}{"pl":"const NOTE_FFLAGSMASK = 0x00ffffff","src":611,"more_decls":null}{"doc_comment":"low water mark","pl":"const NOTE_LOWAT = 0x00000001","src":614,"more_decls":null}{"doc_comment":"OOB data","pl":"const NOTE_OOB = 0x00000002","src":617,"more_decls":null}{"doc_comment":"vnode was removed","pl":"const NOTE_DELETE = 0x00000001","src":620,"more_decls":null}{"doc_comment":"data contents changed","pl":"const NOTE_WRITE = 0x00000002","src":623,"more_decls":null}{"doc_comment":"size increased","pl":"const NOTE_EXTEND = 0x00000004","src":626,"more_decls":null}{"doc_comment":"attributes changed","pl":"const NOTE_ATTRIB = 0x00000008","src":629,"more_decls":null}{"doc_comment":"link count changed","pl":"const NOTE_LINK = 0x00000010","src":632,"more_decls":null}{"doc_comment":"vnode was renamed","pl":"const NOTE_RENAME = 0x00000020","src":635,"more_decls":null}{"doc_comment":"vnode access was revoked","pl":"const NOTE_REVOKE = 0x00000040","src":638,"more_decls":null}{"doc_comment":"No specific vnode event: to test for EVFILT_READ      activation","pl":"const NOTE_NONE = 0x00000080","src":641,"more_decls":null}{"doc_comment":"vnode was unlocked by flock(2)","pl":"const NOTE_FUNLOCK = 0x00000100","src":644,"more_decls":null}{"doc_comment":"process exited","pl":"const NOTE_EXIT = 0x80000000","src":647,"more_decls":null}{"doc_comment":"process forked","pl":"const NOTE_FORK = 0x40000000","src":650,"more_decls":null}{"doc_comment":"process exec'd","pl":"const NOTE_EXEC = 0x20000000","src":653,"more_decls":null}{"doc_comment":"shared with EVFILT_SIGNAL","pl":"const NOTE_SIGNAL = 0x08000000","src":656,"more_decls":null}{"doc_comment":"exit status to be returned, valid for child       process only","pl":"const NOTE_EXITSTATUS = 0x04000000","src":659,"more_decls":null}{"doc_comment":"provide details on reasons for exit","pl":"const NOTE_EXIT_DETAIL = 0x02000000","src":662,"more_decls":null}{"doc_comment":"mask for signal & exit status","pl":"const NOTE_PDATAMASK = 0x000fffff","src":665,"more_decls":null}{"pl":"const NOTE_PCTRLMASK = (~NOTE_PDATAMASK)","src":666,"more_decls":null}{"pl":"const NOTE_EXIT_DETAIL_MASK = 0x00070000","src":668,"more_decls":null}{"pl":"const NOTE_EXIT_DECRYPTFAIL = 0x00010000","src":669,"more_decls":null}{"pl":"const NOTE_EXIT_MEMORY = 0x00020000","src":670,"more_decls":null}{"pl":"const NOTE_EXIT_CSERROR = 0x00040000","src":671,"more_decls":null}{"doc_comment":"will react on memory          pressure","pl":"const NOTE_VM_PRESSURE = 0x80000000","src":674,"more_decls":null}{"doc_comment":"will quit on memory       pressure, possibly after cleaning up dirty state","pl":"const NOTE_VM_PRESSURE_TERMINATE = 0x40000000","src":677,"more_decls":null}{"doc_comment":"will quit immediately on      memory pressure","pl":"const NOTE_VM_PRESSURE_SUDDEN_TERMINATE = 0x20000000","src":680,"more_decls":null}{"doc_comment":"there was an error","pl":"const NOTE_VM_ERROR = 0x10000000","src":683,"more_decls":null}{"doc_comment":"data is seconds","pl":"const NOTE_SECONDS = 0x00000001","src":686,"more_decls":null}{"doc_comment":"data is microseconds","pl":"const NOTE_USECONDS = 0x00000002","src":689,"more_decls":null}{"doc_comment":"data is nanoseconds","pl":"const NOTE_NSECONDS = 0x00000004","src":692,"more_decls":null}{"doc_comment":"absolute timeout","pl":"const NOTE_ABSOLUTE = 0x00000008","src":695,"more_decls":null}{"doc_comment":"ext[1] holds leeway for power aware timers","pl":"const NOTE_LEEWAY = 0x00000010","src":698,"more_decls":null}{"doc_comment":"system does minimal timer coalescing","pl":"const NOTE_CRITICAL = 0x00000020","src":701,"more_decls":null}{"doc_comment":"system does maximum timer coalescing","pl":"const NOTE_BACKGROUND = 0x00000040","src":704,"more_decls":null}{"pl":"const NOTE_MACH_CONTINUOUS_TIME = 0x00000080","src":705,"more_decls":null}{"doc_comment":"data is mach absolute time units","pl":"const NOTE_MACHTIME = 0x00000100","src":708,"more_decls":null}{"pl":"const AF_UNSPEC = 0","src":710,"more_decls":null}{"pl":"const AF_LOCAL = 1","src":711,"more_decls":null}{"pl":"const AF_UNIX = AF_LOCAL","src":712,"more_decls":null}{"pl":"const AF_INET = 2","src":713,"more_decls":null}{"pl":"const AF_SYS_CONTROL = 2","src":714,"more_decls":null}{"pl":"const AF_IMPLINK = 3","src":715,"more_decls":null}{"pl":"const AF_PUP = 4","src":716,"more_decls":null}{"pl":"const AF_CHAOS = 5","src":717,"more_decls":null}{"pl":"const AF_NS = 6","src":718,"more_decls":null}{"pl":"const AF_ISO = 7","src":719,"more_decls":null}{"pl":"const AF_OSI = AF_ISO","src":720,"more_decls":null}{"pl":"const AF_ECMA = 8","src":721,"more_decls":null}{"pl":"const AF_DATAKIT = 9","src":722,"more_decls":null}{"pl":"const AF_CCITT = 10","src":723,"more_decls":null}{"pl":"const AF_SNA = 11","src":724,"more_decls":null}{"pl":"const AF_DECnet = 12","src":725,"more_decls":null}{"pl":"const AF_DLI = 13","src":726,"more_decls":null}{"pl":"const AF_LAT = 14","src":727,"more_decls":null}{"pl":"const AF_HYLINK = 15","src":728,"more_decls":null}{"pl":"const AF_APPLETALK = 16","src":729,"more_decls":null}{"pl":"const AF_ROUTE = 17","src":730,"more_decls":null}{"pl":"const AF_LINK = 18","src":731,"more_decls":null}{"pl":"const AF_XTP = 19","src":732,"more_decls":null}{"pl":"const AF_COIP = 20","src":733,"more_decls":null}{"pl":"const AF_CNT = 21","src":734,"more_decls":null}{"pl":"const AF_RTIP = 22","src":735,"more_decls":null}{"pl":"const AF_IPX = 23","src":736,"more_decls":null}{"pl":"const AF_SIP = 24","src":737,"more_decls":null}{"pl":"const AF_PIP = 25","src":738,"more_decls":null}{"pl":"const AF_ISDN = 28","src":739,"more_decls":null}{"pl":"const AF_E164 = AF_ISDN","src":740,"more_decls":null}{"pl":"const AF_KEY = 29","src":741,"more_decls":null}{"pl":"const AF_INET6 = 30","src":742,"more_decls":null}{"pl":"const AF_NATM = 31","src":743,"more_decls":null}{"pl":"const AF_SYSTEM = 32","src":744,"more_decls":null}{"pl":"const AF_NETBIOS = 33","src":745,"more_decls":null}{"pl":"const AF_PPP = 34","src":746,"more_decls":null}{"pl":"const AF_MAX = 40","src":747,"more_decls":null}{"pl":"const PF_UNSPEC = AF_UNSPEC","src":749,"more_decls":null}{"pl":"const PF_LOCAL = AF_LOCAL","src":750,"more_decls":null}{"pl":"const PF_UNIX = PF_LOCAL","src":751,"more_decls":null}{"pl":"const PF_INET = AF_INET","src":752,"more_decls":null}{"pl":"const PF_IMPLINK = AF_IMPLINK","src":753,"more_decls":null}{"pl":"const PF_PUP = AF_PUP","src":754,"more_decls":null}{"pl":"const PF_CHAOS = AF_CHAOS","src":755,"more_decls":null}{"pl":"const PF_NS = AF_NS","src":756,"more_decls":null}{"pl":"const PF_ISO = AF_ISO","src":757,"more_decls":null}{"pl":"const PF_OSI = AF_ISO","src":758,"more_decls":null}{"pl":"const PF_ECMA = AF_ECMA","src":759,"more_decls":null}{"pl":"const PF_DATAKIT = AF_DATAKIT","src":760,"more_decls":null}{"pl":"const PF_CCITT = AF_CCITT","src":761,"more_decls":null}{"pl":"const PF_SNA = AF_SNA","src":762,"more_decls":null}{"pl":"const PF_DECnet = AF_DECnet","src":763,"more_decls":null}{"pl":"const PF_DLI = AF_DLI","src":764,"more_decls":null}{"pl":"const PF_LAT = AF_LAT","src":765,"more_decls":null}{"pl":"const PF_HYLINK = AF_HYLINK","src":766,"more_decls":null}{"pl":"const PF_APPLETALK = AF_APPLETALK","src":767,"more_decls":null}{"pl":"const PF_ROUTE = AF_ROUTE","src":768,"more_decls":null}{"pl":"const PF_LINK = AF_LINK","src":769,"more_decls":null}{"pl":"const PF_XTP = AF_XTP","src":770,"more_decls":null}{"pl":"const PF_COIP = AF_COIP","src":771,"more_decls":null}{"pl":"const PF_CNT = AF_CNT","src":772,"more_decls":null}{"pl":"const PF_SIP = AF_SIP","src":773,"more_decls":null}{"pl":"const PF_IPX = AF_IPX","src":774,"more_decls":null}{"pl":"const PF_RTIP = AF_RTIP","src":775,"more_decls":null}{"pl":"const PF_PIP = AF_PIP","src":776,"more_decls":null}{"pl":"const PF_ISDN = AF_ISDN","src":777,"more_decls":null}{"pl":"const PF_KEY = AF_KEY","src":778,"more_decls":null}{"pl":"const PF_INET6 = AF_INET6","src":779,"more_decls":null}{"pl":"const PF_NATM = AF_NATM","src":780,"more_decls":null}{"pl":"const PF_SYSTEM = AF_SYSTEM","src":781,"more_decls":null}{"pl":"const PF_NETBIOS = AF_NETBIOS","src":782,"more_decls":null}{"pl":"const PF_PPP = AF_PPP","src":783,"more_decls":null}{"pl":"const PF_MAX = AF_MAX","src":784,"more_decls":null}{"pl":"const SYSPROTO_EVENT = 1","src":786,"more_decls":null}{"pl":"const SYSPROTO_CONTROL = 2","src":787,"more_decls":null}{"pl":"const SOCK_STREAM = 1","src":789,"more_decls":null}{"pl":"const SOCK_DGRAM = 2","src":790,"more_decls":null}{"pl":"const SOCK_RAW = 3","src":791,"more_decls":null}{"pl":"const SOCK_RDM = 4","src":792,"more_decls":null}{"pl":"const SOCK_SEQPACKET = 5","src":793,"more_decls":null}{"pl":"const SOCK_MAXADDRLEN = 255","src":794,"more_decls":null}{"doc_comment":"Not actually supported by Darwin, but Zig supplies a shim.\nThis numerical value is not ABI-stable. It need only not conflict\nwith any other \"SOCK_\" bits.","pl":"const SOCK_CLOEXEC = 1 << 15","src":799,"more_decls":null}{"doc_comment":"Not actually supported by Darwin, but Zig supplies a shim.\nThis numerical value is not ABI-stable. It need only not conflict\nwith any other \"SOCK_\" bits.","pl":"const SOCK_NONBLOCK = 1 << 16","src":803,"more_decls":null}{"pl":"const IPPROTO_ICMP = 1","src":805,"more_decls":null}{"pl":"const IPPROTO_ICMPV6 = 58","src":806,"more_decls":null}{"pl":"const IPPROTO_TCP = 6","src":807,"more_decls":null}{"pl":"const IPPROTO_UDP = 17","src":808,"more_decls":null}{"pl":"const IPPROTO_IP = 0","src":809,"more_decls":null}{"pl":"const IPPROTO_IPV6 = 41","src":810,"more_decls":null}{"pl":"const SOL_SOCKET = 0xffff","src":812,"more_decls":null}{"pl":"const SO_DEBUG = 0x0001","src":814,"more_decls":null}{"pl":"const SO_ACCEPTCONN = 0x0002","src":815,"more_decls":null}{"pl":"const SO_REUSEADDR = 0x0004","src":816,"more_decls":null}{"pl":"const SO_KEEPALIVE = 0x0008","src":817,"more_decls":null}{"pl":"const SO_DONTROUTE = 0x0010","src":818,"more_decls":null}{"pl":"const SO_BROADCAST = 0x0020","src":819,"more_decls":null}{"pl":"const SO_USELOOPBACK = 0x0040","src":820,"more_decls":null}{"pl":"const SO_LINGER = 0x1080","src":821,"more_decls":null}{"pl":"const SO_OOBINLINE = 0x0100","src":822,"more_decls":null}{"pl":"const SO_REUSEPORT = 0x0200","src":823,"more_decls":null}{"pl":"const SO_ACCEPTFILTER = 0x1000","src":824,"more_decls":null}{"pl":"const SO_SNDBUF = 0x1001","src":825,"more_decls":null}{"pl":"const SO_RCVBUF = 0x1002","src":826,"more_decls":null}{"pl":"const SO_SNDLOWAT = 0x1003","src":827,"more_decls":null}{"pl":"const SO_RCVLOWAT = 0x1004","src":828,"more_decls":null}{"pl":"const SO_SNDTIMEO = 0x1005","src":829,"more_decls":null}{"pl":"const SO_RCVTIMEO = 0x1006","src":830,"more_decls":null}{"pl":"const SO_ERROR = 0x1007","src":831,"more_decls":null}{"pl":"const SO_TYPE = 0x1008","src":832,"more_decls":null}{"doc_comment":"Operation not permitted","pl":"const EPERM = 1","src":858,"more_decls":null}{"doc_comment":"No such file or directory","pl":"const ENOENT = 2","src":861,"more_decls":null}{"doc_comment":"No such process","pl":"const ESRCH = 3","src":864,"more_decls":null}{"doc_comment":"Interrupted system call","pl":"const EINTR = 4","src":867,"more_decls":null}{"doc_comment":"Input/output error","pl":"const EIO = 5","src":870,"more_decls":null}{"doc_comment":"Device not configured","pl":"const ENXIO = 6","src":873,"more_decls":null}{"doc_comment":"Argument list too long","pl":"const E2BIG = 7","src":876,"more_decls":null}{"doc_comment":"Exec format error","pl":"const ENOEXEC = 8","src":879,"more_decls":null}{"doc_comment":"Bad file descriptor","pl":"const EBADF = 9","src":882,"more_decls":null}{"doc_comment":"No child processes","pl":"const ECHILD = 10","src":885,"more_decls":null}{"doc_comment":"Resource deadlock avoided","pl":"const EDEADLK = 11","src":888,"more_decls":null}{"doc_comment":"Cannot allocate memory","pl":"const ENOMEM = 12","src":891,"more_decls":null}{"doc_comment":"Permission denied","pl":"const EACCES = 13","src":894,"more_decls":null}{"doc_comment":"Bad address","pl":"const EFAULT = 14","src":897,"more_decls":null}{"doc_comment":"Block device required","pl":"const ENOTBLK = 15","src":900,"more_decls":null}{"doc_comment":"Device / Resource busy","pl":"const EBUSY = 16","src":903,"more_decls":null}{"doc_comment":"File exists","pl":"const EEXIST = 17","src":906,"more_decls":null}{"doc_comment":"Cross-device link","pl":"const EXDEV = 18","src":909,"more_decls":null}{"doc_comment":"Operation not supported by device","pl":"const ENODEV = 19","src":912,"more_decls":null}{"doc_comment":"Not a directory","pl":"const ENOTDIR = 20","src":915,"more_decls":null}{"doc_comment":"Is a directory","pl":"const EISDIR = 21","src":918,"more_decls":null}{"doc_comment":"Invalid argument","pl":"const EINVAL = 22","src":921,"more_decls":null}{"doc_comment":"Too many open files in system","pl":"const ENFILE = 23","src":924,"more_decls":null}{"doc_comment":"Too many open files","pl":"const EMFILE = 24","src":927,"more_decls":null}{"doc_comment":"Inappropriate ioctl for device","pl":"const ENOTTY = 25","src":930,"more_decls":null}{"doc_comment":"Text file busy","pl":"const ETXTBSY = 26","src":933,"more_decls":null}{"doc_comment":"File too large","pl":"const EFBIG = 27","src":936,"more_decls":null}{"doc_comment":"No space left on device","pl":"const ENOSPC = 28","src":939,"more_decls":null}{"doc_comment":"Illegal seek","pl":"const ESPIPE = 29","src":942,"more_decls":null}{"doc_comment":"Read-only file system","pl":"const EROFS = 30","src":945,"more_decls":null}{"doc_comment":"Too many links","pl":"const EMLINK = 31","src":948,"more_decls":null}{"doc_comment":"Broken pipe","pl":"const EPIPE = 32","src":952,"more_decls":null}{"doc_comment":"Numerical argument out of domain","pl":"const EDOM = 33","src":955,"more_decls":null}{"doc_comment":"Result too large","pl":"const ERANGE = 34","src":959,"more_decls":null}{"doc_comment":"Resource temporarily unavailable","pl":"const EAGAIN = 35","src":962,"more_decls":null}{"doc_comment":"Operation would block","pl":"const EWOULDBLOCK = EAGAIN","src":965,"more_decls":null}{"doc_comment":"Operation now in progress","pl":"const EINPROGRESS = 36","src":968,"more_decls":null}{"doc_comment":"Operation already in progress","pl":"const EALREADY = 37","src":972,"more_decls":null}{"doc_comment":"Socket operation on non-socket","pl":"const ENOTSOCK = 38","src":975,"more_decls":null}{"doc_comment":"Destination address required","pl":"const EDESTADDRREQ = 39","src":978,"more_decls":null}{"doc_comment":"Message too long","pl":"const EMSGSIZE = 40","src":981,"more_decls":null}{"doc_comment":"Protocol wrong type for socket","pl":"const EPROTOTYPE = 41","src":984,"more_decls":null}{"doc_comment":"Protocol not available","pl":"const ENOPROTOOPT = 42","src":987,"more_decls":null}{"doc_comment":"Protocol not supported","pl":"const EPROTONOSUPPORT = 43","src":990,"more_decls":null}{"doc_comment":"Socket type not supported","pl":"const ESOCKTNOSUPPORT = 44","src":993,"more_decls":null}{"doc_comment":"Operation not supported","pl":"const ENOTSUP = 45","src":996,"more_decls":null}{"doc_comment":"Operation not supported. Alias of `ENOTSUP`.","pl":"const EOPNOTSUPP = ENOTSUP","src":999,"more_decls":null}{"doc_comment":"Protocol family not supported","pl":"const EPFNOSUPPORT = 46","src":1002,"more_decls":null}{"doc_comment":"Address family not supported by protocol family","pl":"const EAFNOSUPPORT = 47","src":1005,"more_decls":null}{"doc_comment":"Address already in use","pl":"const EADDRINUSE = 48","src":1008,"more_decls":null}{"doc_comment":"Can't assign requested address","pl":"const EADDRNOTAVAIL = 49","src":1012,"more_decls":null}{"doc_comment":"Network is down","pl":"const ENETDOWN = 50","src":1015,"more_decls":null}{"doc_comment":"Network is unreachable","pl":"const ENETUNREACH = 51","src":1018,"more_decls":null}{"doc_comment":"Network dropped connection on reset","pl":"const ENETRESET = 52","src":1021,"more_decls":null}{"doc_comment":"Software caused connection abort","pl":"const ECONNABORTED = 53","src":1024,"more_decls":null}{"doc_comment":"Connection reset by peer","pl":"const ECONNRESET = 54","src":1027,"more_decls":null}{"doc_comment":"No buffer space available","pl":"const ENOBUFS = 55","src":1030,"more_decls":null}{"doc_comment":"Socket is already connected","pl":"const EISCONN = 56","src":1033,"more_decls":null}{"doc_comment":"Socket is not connected","pl":"const ENOTCONN = 57","src":1036,"more_decls":null}{"doc_comment":"Can't send after socket shutdown","pl":"const ESHUTDOWN = 58","src":1039,"more_decls":null}{"doc_comment":"Too many references: can't splice","pl":"const ETOOMANYREFS = 59","src":1042,"more_decls":null}{"doc_comment":"Operation timed out","pl":"const ETIMEDOUT = 60","src":1045,"more_decls":null}{"doc_comment":"Connection refused","pl":"const ECONNREFUSED = 61","src":1048,"more_decls":null}{"doc_comment":"Too many levels of symbolic links","pl":"const ELOOP = 62","src":1051,"more_decls":null}{"doc_comment":"File name too long","pl":"const ENAMETOOLONG = 63","src":1054,"more_decls":null}{"doc_comment":"Host is down","pl":"const EHOSTDOWN = 64","src":1057,"more_decls":null}{"doc_comment":"No route to host","pl":"const EHOSTUNREACH = 65","src":1060,"more_decls":null}{"doc_comment":"Directory not empty","pl":"const ENOTEMPTY = 66","src":1064,"more_decls":null}{"doc_comment":"Too many processes","pl":"const EPROCLIM = 67","src":1067,"more_decls":null}{"doc_comment":"Too many users","pl":"const EUSERS = 68","src":1070,"more_decls":null}{"doc_comment":"Disc quota exceeded","pl":"const EDQUOT = 69","src":1074,"more_decls":null}{"doc_comment":"Stale NFS file handle","pl":"const ESTALE = 70","src":1077,"more_decls":null}{"doc_comment":"Too many levels of remote in path","pl":"const EREMOTE = 71","src":1080,"more_decls":null}{"doc_comment":"RPC struct is bad","pl":"const EBADRPC = 72","src":1083,"more_decls":null}{"doc_comment":"RPC version wrong","pl":"const ERPCMISMATCH = 73","src":1086,"more_decls":null}{"doc_comment":"RPC prog. not avail","pl":"const EPROGUNAVAIL = 74","src":1089,"more_decls":null}{"doc_comment":"Program version wrong","pl":"const EPROGMISMATCH = 75","src":1092,"more_decls":null}{"doc_comment":"Bad procedure for program","pl":"const EPROCUNAVAIL = 76","src":1095,"more_decls":null}{"doc_comment":"No locks available","pl":"const ENOLCK = 77","src":1098,"more_decls":null}{"doc_comment":"Function not implemented","pl":"const ENOSYS = 78","src":1101,"more_decls":null}{"doc_comment":"Inappropriate file type or format","pl":"const EFTYPE = 79","src":1104,"more_decls":null}{"doc_comment":"Authentication error","pl":"const EAUTH = 80","src":1107,"more_decls":null}{"doc_comment":"Need authenticator","pl":"const ENEEDAUTH = 81","src":1111,"more_decls":null}{"doc_comment":"Device power is off","pl":"const EPWROFF = 82","src":1114,"more_decls":null}{"doc_comment":"Device error, e.g. paper out","pl":"const EDEVERR = 83","src":1117,"more_decls":null}{"doc_comment":"Value too large to be stored in data type","pl":"const EOVERFLOW = 84","src":1121,"more_decls":null}{"doc_comment":"Bad executable","pl":"const EBADEXEC = 85","src":1124,"more_decls":null}{"doc_comment":"Bad CPU type in executable","pl":"const EBADARCH = 86","src":1127,"more_decls":null}{"doc_comment":"Shared library version mismatch","pl":"const ESHLIBVERS = 87","src":1130,"more_decls":null}{"doc_comment":"Malformed Macho file","pl":"const EBADMACHO = 88","src":1133,"more_decls":null}{"doc_comment":"Operation canceled","pl":"const ECANCELED = 89","src":1136,"more_decls":null}{"doc_comment":"Identifier removed","pl":"const EIDRM = 90","src":1139,"more_decls":null}{"doc_comment":"No message of desired type","pl":"const ENOMSG = 91","src":1142,"more_decls":null}{"doc_comment":"Illegal byte sequence","pl":"const EILSEQ = 92","src":1145,"more_decls":null}{"doc_comment":"Attribute not found","pl":"const ENOATTR = 93","src":1148,"more_decls":null}{"doc_comment":"Bad message","pl":"const EBADMSG = 94","src":1151,"more_decls":null}{"doc_comment":"Reserved","pl":"const EMULTIHOP = 95","src":1154,"more_decls":null}{"doc_comment":"No message available on STREAM","pl":"const ENODATA = 96","src":1157,"more_decls":null}{"doc_comment":"Reserved","pl":"const ENOLINK = 97","src":1160,"more_decls":null}{"doc_comment":"No STREAM resources","pl":"const ENOSR = 98","src":1163,"more_decls":null}{"doc_comment":"Not a STREAM","pl":"const ENOSTR = 99","src":1166,"more_decls":null}{"doc_comment":"Protocol error","pl":"const EPROTO = 100","src":1169,"more_decls":null}{"doc_comment":"STREAM ioctl timeout","pl":"const ETIME = 101","src":1172,"more_decls":null}{"doc_comment":"No such policy registered","pl":"const ENOPOLICY = 103","src":1175,"more_decls":null}{"doc_comment":"State not recoverable","pl":"const ENOTRECOVERABLE = 104","src":1178,"more_decls":null}{"doc_comment":"Previous owner died","pl":"const EOWNERDEAD = 105","src":1181,"more_decls":null}{"doc_comment":"Interface output queue is full","pl":"const EQFULL = 106","src":1184,"more_decls":null}{"doc_comment":"Must be equal largest errno","pl":"const ELAST = 106","src":1187,"more_decls":null}{"pl":"const SIGSTKSZ = 131072","src":1189,"more_decls":null}{"pl":"const MINSIGSTKSZ = 32768","src":1190,"more_decls":null}{"pl":"const SS_ONSTACK = 1","src":1192,"more_decls":null}{"pl":"const SS_DISABLE = 4","src":1193,"more_decls":null}{"pl":"const S_IFMT = 0o170000","src":1201,"more_decls":null}{"pl":"const S_IFIFO = 0o010000","src":1203,"more_decls":null}{"pl":"const S_IFCHR = 0o020000","src":1204,"more_decls":null}{"pl":"const S_IFDIR = 0o040000","src":1205,"more_decls":null}{"pl":"const S_IFBLK = 0o060000","src":1206,"more_decls":null}{"pl":"const S_IFREG = 0o100000","src":1207,"more_decls":null}{"pl":"const S_IFLNK = 0o120000","src":1208,"more_decls":null}{"pl":"const S_IFSOCK = 0o140000","src":1209,"more_decls":null}{"pl":"const S_IFWHT = 0o160000","src":1210,"more_decls":null}{"pl":"const S_ISUID = 0o4000","src":1212,"more_decls":null}{"pl":"const S_ISGID = 0o2000","src":1213,"more_decls":null}{"pl":"const S_ISVTX = 0o1000","src":1214,"more_decls":null}{"pl":"const S_IRWXU = 0o700","src":1215,"more_decls":null}{"pl":"const S_IRUSR = 0o400","src":1216,"more_decls":null}{"pl":"const S_IWUSR = 0o200","src":1217,"more_decls":null}{"pl":"const S_IXUSR = 0o100","src":1218,"more_decls":null}{"pl":"const S_IRWXG = 0o070","src":1219,"more_decls":null}{"pl":"const S_IRGRP = 0o040","src":1220,"more_decls":null}{"pl":"const S_IWGRP = 0o020","src":1221,"more_decls":null}{"pl":"const S_IXGRP = 0o010","src":1222,"more_decls":null}{"pl":"const S_IRWXO = 0o007","src":1223,"more_decls":null}{"pl":"const S_IROTH = 0o004","src":1224,"more_decls":null}{"pl":"const S_IWOTH = 0o002","src":1225,"more_decls":null}{"pl":"const S_IXOTH = 0o001","src":1226,"more_decls":null}{"pl":"const HOST_NAME_MAX = 72","src":1260,"more_decls":null}{"pl":"const AT_FDCWD = -2","src":1262,"more_decls":null}{"doc_comment":"Use effective ids in access check","pl":"const AT_EACCESS = 0x0010","src":1265,"more_decls":null}{"doc_comment":"Act on the symlink itself not the target","pl":"const AT_SYMLINK_NOFOLLOW = 0x0020","src":1268,"more_decls":null}{"doc_comment":"Act on target of symlink","pl":"const AT_SYMLINK_FOLLOW = 0x0040","src":1271,"more_decls":null}{"doc_comment":"Path refers to directory","pl":"const AT_REMOVEDIR = 0x0080","src":1274,"more_decls":null}{"pl":"const RTLD_LAZY = 0x1","src":1287,"more_decls":null}{"pl":"const RTLD_NOW = 0x2","src":1288,"more_decls":null}{"pl":"const RTLD_LOCAL = 0x4","src":1289,"more_decls":null}{"pl":"const RTLD_GLOBAL = 0x8","src":1290,"more_decls":null}{"pl":"const RTLD_NOLOAD = 0x10","src":1291,"more_decls":null}{"pl":"const RTLD_NODELETE = 0x80","src":1292,"more_decls":null}{"pl":"const RTLD_FIRST = 0x100","src":1293,"more_decls":null}{"pl":"const RTLD_NEXT = @intToPtr(*c_void, @bitCast(usize, @as(isize, -1)))","src":1295,"more_decls":null}{"pl":"const RTLD_DEFAULT = @intToPtr(*c_void, @bitCast(usize, @as(isize, -2)))","src":1296,"more_decls":null}{"pl":"const RTLD_SELF = @intToPtr(*c_void, @bitCast(usize, @as(isize, -3)))","src":1297,"more_decls":null}{"pl":"const RTLD_MAIN_ONLY = @intToPtr(*c_void, @bitCast(usize, @as(isize, -5)))","src":1298,"more_decls":null}{"doc_comment":"duplicate file descriptor","pl":"const F_DUPFD = 0","src":1301,"more_decls":null}{"doc_comment":"get file descriptor flags","pl":"const F_GETFD = 1","src":1304,"more_decls":null}{"doc_comment":"set file descriptor flags","pl":"const F_SETFD = 2","src":1307,"more_decls":null}{"doc_comment":"get file status flags","pl":"const F_GETFL = 3","src":1310,"more_decls":null}{"doc_comment":"set file status flags","pl":"const F_SETFL = 4","src":1313,"more_decls":null}{"doc_comment":"get SIGIO/SIGURG proc/pgrp","pl":"const F_GETOWN = 5","src":1316,"more_decls":null}{"doc_comment":"set SIGIO/SIGURG proc/pgrp","pl":"const F_SETOWN = 6","src":1319,"more_decls":null}{"doc_comment":"get record locking information","pl":"const F_GETLK = 7","src":1322,"more_decls":null}{"doc_comment":"set record locking information","pl":"const F_SETLK = 8","src":1325,"more_decls":null}{"doc_comment":"F_SETLK; wait if blocked","pl":"const F_SETLKW = 9","src":1328,"more_decls":null}{"doc_comment":"F_SETLK; wait if blocked, return on timeout","pl":"const F_SETLKWTIMEOUT = 10","src":1331,"more_decls":null}{"pl":"const F_FLUSH_DATA = 40","src":1332,"more_decls":null}{"doc_comment":"Used for regression test","pl":"const F_CHKCLEAN = 41","src":1335,"more_decls":null}{"doc_comment":"Preallocate storage","pl":"const F_PREALLOCATE = 42","src":1338,"more_decls":null}{"doc_comment":"Truncate a file without zeroing space","pl":"const F_SETSIZE = 43","src":1341,"more_decls":null}{"doc_comment":"Issue an advisory read async with no copy to user","pl":"const F_RDADVISE = 44","src":1344,"more_decls":null}{"doc_comment":"turn read ahead off/on for this fd","pl":"const F_RDAHEAD = 45","src":1347,"more_decls":null}{"doc_comment":"turn data caching off/on for this fd","pl":"const F_NOCACHE = 48","src":1350,"more_decls":null}{"doc_comment":"file offset to device offset","pl":"const F_LOG2PHYS = 49","src":1353,"more_decls":null}{"doc_comment":"return the full path of the fd","pl":"const F_GETPATH = 50","src":1356,"more_decls":null}{"doc_comment":"fsync + ask the drive to flush to the media","pl":"const F_FULLFSYNC = 51","src":1359,"more_decls":null}{"doc_comment":"find which component (if any) is a package","pl":"const F_PATHPKG_CHECK = 52","src":1362,"more_decls":null}{"doc_comment":"\"freeze\" all fs operations","pl":"const F_FREEZE_FS = 53","src":1365,"more_decls":null}{"doc_comment":"\"thaw\" all fs operations","pl":"const F_THAW_FS = 54","src":1368,"more_decls":null}{"doc_comment":"turn data caching off/on (globally) for this file","pl":"const F_GLOBAL_NOCACHE = 55","src":1371,"more_decls":null}{"doc_comment":"add detached signatures","pl":"const F_ADDSIGS = 59","src":1374,"more_decls":null}{"doc_comment":"add signature from same file (used by dyld for shared libs)","pl":"const F_ADDFILESIGS = 61","src":1377,"more_decls":null}{"doc_comment":"used in conjunction with F_NOCACHE to indicate that DIRECT, synchonous writes\nshould not be used (i.e. its ok to temporaily create cached pages)","pl":"const F_NODIRECT = 62","src":1381,"more_decls":null}{"doc_comment":"Get the protection class of a file from the EA, returns int","pl":"const F_GETPROTECTIONCLASS = 63","src":1384,"more_decls":null}{"doc_comment":"Set the protection class of a file for the EA, requires int","pl":"const F_SETPROTECTIONCLASS = 64","src":1387,"more_decls":null}{"doc_comment":"file offset to device offset, extended","pl":"const F_LOG2PHYS_EXT = 65","src":1390,"more_decls":null}{"doc_comment":"get record locking information, per-process","pl":"const F_GETLKPID = 66","src":1393,"more_decls":null}{"doc_comment":"Mark the file as being the backing store for another filesystem","pl":"const F_SETBACKINGSTORE = 70","src":1396,"more_decls":null}{"doc_comment":"return the full path of the FD, but error in specific mtmd circumstances","pl":"const F_GETPATH_MTMINFO = 71","src":1399,"more_decls":null}{"doc_comment":"Returns the code directory, with associated hashes, to the caller","pl":"const F_GETCODEDIR = 72","src":1402,"more_decls":null}{"doc_comment":"No SIGPIPE generated on EPIPE","pl":"const F_SETNOSIGPIPE = 73","src":1405,"more_decls":null}{"doc_comment":"Status of SIGPIPE for this fd","pl":"const F_GETNOSIGPIPE = 74","src":1408,"more_decls":null}{"doc_comment":"For some cases, we need to rewrap the key for AKS/MKB","pl":"const F_TRANSCODEKEY = 75","src":1411,"more_decls":null}{"doc_comment":"file being written to a by single writer... if throttling enabled, writes\nmay be broken into smaller chunks with throttling in between","pl":"const F_SINGLE_WRITER = 76","src":1415,"more_decls":null}{"doc_comment":"Get the protection version number for this filesystem","pl":"const F_GETPROTECTIONLEVEL = 77","src":1418,"more_decls":null}{"doc_comment":"Add detached code signatures (used by dyld for shared libs)","pl":"const F_FINDSIGS = 78","src":1421,"more_decls":null}{"doc_comment":"Add signature from same file, only if it is signed by Apple (used by dyld for simulator)","pl":"const F_ADDFILESIGS_FOR_DYLD_SIM = 83","src":1424,"more_decls":null}{"doc_comment":"fsync + issue barrier to drive","pl":"const F_BARRIERFSYNC = 85","src":1427,"more_decls":null}{"doc_comment":"Add signature from same file, return end offset in structure on success","pl":"const F_ADDFILESIGS_RETURN = 97","src":1430,"more_decls":null}{"doc_comment":"Check if Library Validation allows this Mach-O file to be mapped into the calling process","pl":"const F_CHECK_LV = 98","src":1433,"more_decls":null}{"doc_comment":"Deallocate a range of the file","pl":"const F_PUNCHHOLE = 99","src":1436,"more_decls":null}{"doc_comment":"Trim an active file","pl":"const F_TRIM_ACTIVE_FILE = 100","src":1439,"more_decls":null}{"pl":"const FCNTL_FS_SPECIFIC_BASE = 0x00010000","src":1441,"more_decls":null}{"doc_comment":"mark the dup with FD_CLOEXEC","pl":"const F_DUPFD_CLOEXEC = 67","src":1444,"more_decls":null}{"doc_comment":"close-on-exec flag","pl":"const FD_CLOEXEC = 1","src":1447,"more_decls":null}{"doc_comment":"shared or read lock","pl":"const F_RDLCK = 1","src":1450,"more_decls":null}{"doc_comment":"unlock","pl":"const F_UNLCK = 2","src":1453,"more_decls":null}{"doc_comment":"exclusive or write lock","pl":"const F_WRLCK = 3","src":1456,"more_decls":null}{"pl":"const LOCK_SH = 1","src":1458,"more_decls":null}{"pl":"const LOCK_EX = 2","src":1459,"more_decls":null}{"pl":"const LOCK_UN = 8","src":1460,"more_decls":null}{"pl":"const LOCK_NB = 4","src":1461,"more_decls":null}{"pl":"const nfds_t = u32","src":1463,"more_decls":null}{"pl":"const POLLIN = 0x001","src":1470,"more_decls":null}{"pl":"const POLLPRI = 0x002","src":1471,"more_decls":null}{"pl":"const POLLOUT = 0x004","src":1472,"more_decls":null}{"pl":"const POLLRDNORM = 0x040","src":1473,"more_decls":null}{"pl":"const POLLWRNORM = POLLOUT","src":1474,"more_decls":null}{"pl":"const POLLRDBAND = 0x080","src":1475,"more_decls":null}{"pl":"const POLLWRBAND = 0x100","src":1476,"more_decls":null}{"pl":"const POLLEXTEND = 0x0200","src":1478,"more_decls":null}{"pl":"const POLLATTRIB = 0x0400","src":1479,"more_decls":null}{"pl":"const POLLNLINK = 0x0800","src":1480,"more_decls":null}{"pl":"const POLLWRITE = 0x1000","src":1481,"more_decls":null}{"pl":"const POLLERR = 0x008","src":1483,"more_decls":null}{"pl":"const POLLHUP = 0x010","src":1484,"more_decls":null}{"pl":"const POLLNVAL = 0x020","src":1485,"more_decls":null}{"pl":"const POLLSTANDARD = POLLIN | POLLPRI | POLLOUT | POLLRDNORM | POLLRDBAND | POLLWRBAND | POLLERR | POLLHUP | POLLNVAL","src":1487,"more_decls":null}{"pl":"const CLOCK_REALTIME = 0","src":1489,"more_decls":null}{"pl":"const CLOCK_MONOTONIC = 6","src":1490,"more_decls":null}{"pl":"const CLOCK_MONOTONIC_RAW = 4","src":1491,"more_decls":null}{"pl":"const CLOCK_MONOTONIC_RAW_APPROX = 5","src":1492,"more_decls":null}{"pl":"const CLOCK_UPTIME_RAW = 8","src":1493,"more_decls":null}{"pl":"const CLOCK_UPTIME_RAW_APPROX = 9","src":1494,"more_decls":null}{"pl":"const CLOCK_PROCESS_CPUTIME_ID = 12","src":1495,"more_decls":null}{"pl":"const CLOCK_THREAD_CPUTIME_ID = 16","src":1496,"more_decls":null}{"doc_comment":"Max open files per process\nhttps://opensource.apple.com/source/xnu/xnu-4903.221.2/bsd/sys/syslimits.h.auto.html","pl":"const OPEN_MAX = 10240","src":1500,"more_decls":null}{"pl":"const RUSAGE_SELF = 0","src":1501,"more_decls":null}{"pl":"const RUSAGE_CHILDREN = -1","src":1502,"more_decls":null}{"pl":"const rlim_t = u64","src":1538,"more_decls":null}{"doc_comment":"No limit","pl":"const RLIM_INFINITY: rlim_t = (1 << 63) - 1","src":1541,"more_decls":null}{"pl":"const RLIM_SAVED_MAX = RLIM_INFINITY","src":1543,"more_decls":null}{"pl":"const RLIM_SAVED_CUR = RLIM_INFINITY","src":1544,"more_decls":null}{"pl":"const SHUT_RD = 0","src":1553,"more_decls":null}{"pl":"const SHUT_WR = 1","src":1554,"more_decls":null}{"pl":"const SHUT_RDWR = 2","src":1555,"more_decls":null}{"pl":"const VEOF = 0","src":1558,"more_decls":null}{"pl":"const VEOL = 1","src":1559,"more_decls":null}{"pl":"const VEOL2 = 2","src":1560,"more_decls":null}{"pl":"const VERASE = 3","src":1561,"more_decls":null}{"pl":"const VWERASE = 4","src":1562,"more_decls":null}{"pl":"const VKILL = 5","src":1563,"more_decls":null}{"pl":"const VREPRINT = 6","src":1564,"more_decls":null}{"pl":"const VINTR = 8","src":1565,"more_decls":null}{"pl":"const VQUIT = 9","src":1566,"more_decls":null}{"pl":"const VSUSP = 10","src":1567,"more_decls":null}{"pl":"const VDSUSP = 11","src":1568,"more_decls":null}{"pl":"const VSTART = 12","src":1569,"more_decls":null}{"pl":"const VSTOP = 13","src":1570,"more_decls":null}{"pl":"const VLNEXT = 14","src":1571,"more_decls":null}{"pl":"const VDISCARD = 15","src":1572,"more_decls":null}{"pl":"const VMIN = 16","src":1573,"more_decls":null}{"pl":"const VTIME = 17","src":1574,"more_decls":null}{"pl":"const VSTATUS = 18","src":1575,"more_decls":null}{"pl":"const NCCS = 20","src":1576,"more_decls":null}{"pl":"const IGNBRK = 0x00000001","src":1578,"more_decls":null}{"pl":"const BRKINT = 0x00000002","src":1579,"more_decls":null}{"pl":"const IGNPAR = 0x00000004","src":1580,"more_decls":null}{"pl":"const PARMRK = 0x00000008","src":1581,"more_decls":null}{"pl":"const INPCK = 0x00000010","src":1582,"more_decls":null}{"pl":"const ISTRIP = 0x00000020","src":1583,"more_decls":null}{"pl":"const INLCR = 0x00000040","src":1584,"more_decls":null}{"pl":"const IGNCR = 0x00000080","src":1585,"more_decls":null}{"pl":"const ICRNL = 0x00000100","src":1586,"more_decls":null}{"pl":"const IXON = 0x00000200","src":1587,"more_decls":null}{"pl":"const IXOFF = 0x00000400","src":1588,"more_decls":null}{"pl":"const IXANY = 0x00000800","src":1589,"more_decls":null}{"pl":"const IMAXBEL = 0x00002000","src":1590,"more_decls":null}{"pl":"const IUTF8 = 0x00004000","src":1591,"more_decls":null}{"pl":"const OPOST = 0x00000001","src":1593,"more_decls":null}{"pl":"const ONLCR = 0x00000002","src":1594,"more_decls":null}{"pl":"const OXTABS = 0x00000004","src":1595,"more_decls":null}{"pl":"const ONOEOT = 0x00000008","src":1596,"more_decls":null}{"pl":"const OCRNL = 0x00000010","src":1598,"more_decls":null}{"pl":"const ONOCR = 0x00000020","src":1599,"more_decls":null}{"pl":"const ONLRET = 0x00000040","src":1600,"more_decls":null}{"pl":"const OFILL = 0x00000080","src":1601,"more_decls":null}{"pl":"const NLDLY = 0x00000300","src":1602,"more_decls":null}{"pl":"const TABDLY = 0x00000c04","src":1603,"more_decls":null}{"pl":"const CRDLY = 0x00003000","src":1604,"more_decls":null}{"pl":"const FFDLY = 0x00004000","src":1605,"more_decls":null}{"pl":"const BSDLY = 0x00008000","src":1606,"more_decls":null}{"pl":"const VTDLY = 0x00010000","src":1607,"more_decls":null}{"pl":"const OFDEL = 0x00020000","src":1608,"more_decls":null}{"pl":"const NL0 = 0x00000000","src":1610,"more_decls":null}{"pl":"const NL1 = 0x00000100","src":1611,"more_decls":null}{"pl":"const NL2 = 0x00000200","src":1612,"more_decls":null}{"pl":"const NL3 = 0x00000300","src":1613,"more_decls":null}{"pl":"const TAB0 = 0x00000000","src":1614,"more_decls":null}{"pl":"const TAB1 = 0x00000400","src":1615,"more_decls":null}{"pl":"const TAB2 = 0x00000800","src":1616,"more_decls":null}{"pl":"const TAB3 = 0x00000004","src":1617,"more_decls":null}{"pl":"const CR0 = 0x00000000","src":1618,"more_decls":null}{"pl":"const CR1 = 0x00001000","src":1619,"more_decls":null}{"pl":"const CR2 = 0x00002000","src":1620,"more_decls":null}{"pl":"const CR3 = 0x00003000","src":1621,"more_decls":null}{"pl":"const FF0 = 0x00000000","src":1622,"more_decls":null}{"pl":"const FF1 = 0x00004000","src":1623,"more_decls":null}{"pl":"const BS0 = 0x00000000","src":1624,"more_decls":null}{"pl":"const BS1 = 0x00008000","src":1625,"more_decls":null}{"pl":"const VT0 = 0x00000000","src":1626,"more_decls":null}{"pl":"const VT1 = 0x00010000","src":1627,"more_decls":null}{"pl":"const CIGNORE = 0x00000001","src":1629,"more_decls":null}{"pl":"const CSIZE = 0x00000300","src":1630,"more_decls":null}{"pl":"const CS5 = 0x00000000","src":1631,"more_decls":null}{"pl":"const CS6 = 0x00000100","src":1632,"more_decls":null}{"pl":"const CS7 = 0x00000200","src":1633,"more_decls":null}{"pl":"const CS8 = 0x00000300","src":1634,"more_decls":null}{"pl":"const CSTOPB = 0x0000040","src":1635,"more_decls":null}{"pl":"const CREAD = 0x00000800","src":1636,"more_decls":null}{"pl":"const PARENB = 0x00001000","src":1637,"more_decls":null}{"pl":"const PARODD = 0x00002000","src":1638,"more_decls":null}{"pl":"const HUPCL = 0x00004000","src":1639,"more_decls":null}{"pl":"const CLOCAL = 0x00008000","src":1640,"more_decls":null}{"pl":"const CCTS_OFLOW = 0x00010000","src":1641,"more_decls":null}{"pl":"const CRTSCTS = (CCTS_OFLOW | CRTS_IFLOW)","src":1642,"more_decls":null}{"pl":"const CRTS_IFLOW = 0x00020000","src":1643,"more_decls":null}{"pl":"const CDTR_IFLOW = 0x00040000","src":1644,"more_decls":null}{"pl":"const CDSR_OFLOW = 0x00080000","src":1645,"more_decls":null}{"pl":"const CCAR_OFLOW = 0x00100000","src":1646,"more_decls":null}{"pl":"const MDMBUF = 0x00100000","src":1647,"more_decls":null}{"pl":"const ECHOKE = 0x00000001","src":1649,"more_decls":null}{"pl":"const ECHOE = 0x00000002","src":1650,"more_decls":null}{"pl":"const ECHOK = 0x00000004","src":1651,"more_decls":null}{"pl":"const ECHO = 0x00000008","src":1652,"more_decls":null}{"pl":"const ECHONL = 0x00000010","src":1653,"more_decls":null}{"pl":"const ECHOPRT = 0x00000020","src":1654,"more_decls":null}{"pl":"const ECHOCTL = 0x00000040","src":1655,"more_decls":null}{"pl":"const ISIG = 0x00000080","src":1656,"more_decls":null}{"pl":"const ICANON = 0x00000100","src":1657,"more_decls":null}{"pl":"const ALTWERASE = 0x00000200","src":1658,"more_decls":null}{"pl":"const IEXTEN = 0x00000400","src":1659,"more_decls":null}{"pl":"const EXTPROC = 0x00000800","src":1660,"more_decls":null}{"pl":"const TOSTOP = 0x00400000","src":1661,"more_decls":null}{"pl":"const FLUSHO = 0x00800000","src":1662,"more_decls":null}{"pl":"const NOKERNINFO = 0x02000000","src":1663,"more_decls":null}{"pl":"const PENDIN = 0x20000000","src":1664,"more_decls":null}{"pl":"const NOFLSH = 0x80000000","src":1665,"more_decls":null}{"pl":"const TCSANOW = 0","src":1667,"more_decls":null}{"pl":"const TCSADRAIN = 1","src":1668,"more_decls":null}{"pl":"const TCSAFLUSH = 2","src":1669,"more_decls":null}{"pl":"const TCSASOFT = 0x10","src":1670,"more_decls":null}{"pl":"const B0 = 0","src":1678,"more_decls":null}{"pl":"const B50 = 50","src":1679,"more_decls":null}{"pl":"const B75 = 75","src":1680,"more_decls":null}{"pl":"const B110 = 110","src":1681,"more_decls":null}{"pl":"const B134 = 134","src":1682,"more_decls":null}{"pl":"const B150 = 150","src":1683,"more_decls":null}{"pl":"const B200 = 200","src":1684,"more_decls":null}{"pl":"const B300 = 300","src":1685,"more_decls":null}{"pl":"const B600 = 600","src":1686,"more_decls":null}{"pl":"const B1200 = 1200","src":1687,"more_decls":null}{"pl":"const B1800 = 1800","src":1688,"more_decls":null}{"pl":"const B2400 = 2400","src":1689,"more_decls":null}{"pl":"const B4800 = 4800","src":1690,"more_decls":null}{"pl":"const B9600 = 9600","src":1691,"more_decls":null}{"pl":"const B19200 = 19200","src":1692,"more_decls":null}{"pl":"const B38400 = 38400","src":1693,"more_decls":null}{"pl":"const B7200 = 7200","src":1694,"more_decls":null}{"pl":"const B14400 = 14400","src":1695,"more_decls":null}{"pl":"const B28800 = 28800","src":1696,"more_decls":null}{"pl":"const B57600 = 57600","src":1697,"more_decls":null}{"pl":"const B76800 = 76800","src":1698,"more_decls":null}{"pl":"const B115200 = 115200","src":1699,"more_decls":null}{"pl":"const B230400 = 230400","src":1700,"more_decls":null}{"pl":"const EXTA = 19200","src":1701,"more_decls":null}{"pl":"const EXTB = 38400","src":1702,"more_decls":null}{"pl":"const TCIFLUSH = 1","src":1704,"more_decls":null}{"pl":"const TCOFLUSH = 2","src":1705,"more_decls":null}{"pl":"const TCIOFLUSH = 3","src":1706,"more_decls":null}{"pl":"const TCOOFF = 1","src":1707,"more_decls":null}{"pl":"const TCOON = 2","src":1708,"more_decls":null}{"pl":"const TCIOFF = 3","src":1709,"more_decls":null}{"pl":"const TCION = 4","src":1710,"more_decls":null}{"pl":"const cc_t = u8","src":1712,"more_decls":null}{"pl":"const speed_t = u64","src":1713,"more_decls":null}{"pl":"const tcflag_t = u64","src":1714,"more_decls":null}{"pl":"const TIOCGWINSZ = ior(0x40000000, 't', 104, @sizeOf(winsize))","src":1733,"more_decls":null}{"pl":"const IOCPARM_MASK = 0x1fff","src":1734,"more_decls":null}]