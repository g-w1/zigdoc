[{"pl":"pub const WriteFileStep = struct ","src":13,"more_decls":{"pl":"step: Step","src":14,"more_decls":null}{"pl":"builder: *Builder","src":15,"more_decls":null}{"pl":"output_dir: []const u8","src":16,"more_decls":null}{"pl":"files: ArrayList(File)","src":17,"more_decls":null}{"pl":"pub const File = struct ","src":19,"more_decls":{"pl":"basename: []const u8","src":20,"more_decls":null}{"pl":"bytes: []const u8","src":21,"more_decls":null}}{"pl":"fn init(builder: *Builder) WriteFileStep","src":24,"more_decls":null}{"pl":"pub fn add(self: *WriteFileStep, basename: []const u8, bytes: []const u8) void {\n    self.files.append(.{\n        .basename = self.builder.dupePath(basename),\n        .bytes = self.builder.dupe(bytes),\n    }) catch unreachable;\n}","src":33,"more_decls":null}{"doc_comment":"Unless setOutputDir was called, this function must be called only in\nthe make step, from a step that has declared a dependency on this one.\nTo run an executable built with zig build, use `run`, or create an install step and invoke it.","pl":"pub fn getOutputPath(self: *WriteFileStep, basename: []const u8) []const u8 {\n    return fs.path.join(\n        self.builder.allocator,\n        &[_][]const u8{ self.output_dir, basename },\n    ) catch unreachable;\n}","src":43,"more_decls":null}}]