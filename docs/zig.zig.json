[{"pl":"pub const BinNameOptions = struct ","src":66,"more_decls":{"pl":"root_name: []const u8","src":67,"more_decls":null}{"pl":"target: std.Target","src":68,"more_decls":null}{"pl":"output_mode: std.builtin.OutputMode","src":69,"more_decls":null}{"pl":"link_mode: ?std.builtin.LinkMode = null","src":70,"more_decls":null}{"pl":"object_format: ?std.Target.ObjectFormat = null","src":71,"more_decls":null}{"pl":"version: ?std.builtin.Version = null","src":72,"more_decls":null}}{"doc_comment":"If the source is small enough, it is used directly as the hash.\nIf it is long, blake3 hash is computed.","pl":"fn hashSrc(src: []const u8) SrcHash","src":22,"more_decls":null}{"pl":"fn findLineColumn(source: []const u8, byte_offset: usize) struct { line: usize, column: usize }","src":33,"more_decls":null}{"pl":"fn lineDelta(source: []const u8, start: usize, end: usize) isize","src":50,"more_decls":null}{"doc_comment":"Returns the standard file system basename of a binary generated by the Zig compiler.","pl":"fn binNameAlloc(allocator: *std.mem.Allocator, options: BinNameOptions) error{OutOfMemory}![]u8","src":76,"more_decls":null}{"doc_comment":"Only validates escape sequence characters.\nSlice must be valid utf8 starting and ending with \"'\" and exactly one codepoint in between.","pl":"fn parseCharLiteral(\n    slice: []const u8,\n    bad_index: *usize, // populated if error.InvalidCharacter is returned\n) error{InvalidCharacter}!u32","src":150,"more_decls":null}{"pl":"const Token = tokenizer.Token","src":8,"more_decls":null}{"pl":"const Tokenizer = tokenizer.Tokenizer","src":9,"more_decls":null}{"pl":"const fmtId = @import(\"zig/fmt.zig\").fmtId","src":10,"more_decls":null}{"pl":"const fmtEscapes = @import(\"zig/fmt.zig\").fmtEscapes","src":11,"more_decls":null}{"pl":"const parse = @import(\"zig/parse.zig\").parse","src":12,"more_decls":null}{"pl":"const string_literal = @import(\"zig/string_literal.zig\")","src":13,"more_decls":null}{"pl":"const ast = @import(\"zig/ast.zig\")","src":14,"more_decls":null}{"pl":"const system = @import(\"zig/system.zig\")","src":15,"more_decls":null}{"pl":"const CrossTarget = @import(\"zig/cross_target.zig\").CrossTarget","src":16,"more_decls":null}{"pl":"const SrcHash = [16]u8","src":18,"more_decls":null}]